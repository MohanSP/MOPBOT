
MOPBOT.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  00002252  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000021de  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000061  00800200  00800200  00002252  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002252  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002284  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000290  00000000  00000000  000022c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000040b5  00000000  00000000  00002554  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000015a1  00000000  00000000  00006609  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00003815  00000000  00000000  00007baa  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000480  00000000  00000000  0000b3c0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00009b5d  00000000  00000000  0000b840  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000018e0  00000000  00000000  0001539d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001c0  00000000  00000000  00016c7d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00004276  00000000  00000000  00016e3d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	b2 c0       	rjmp	.+356    	; 0x166 <__ctors_end>
       2:	00 00       	nop
       4:	c4 c0       	rjmp	.+392    	; 0x18e <__bad_interrupt>
       6:	00 00       	nop
       8:	c2 c0       	rjmp	.+388    	; 0x18e <__bad_interrupt>
       a:	00 00       	nop
       c:	c0 c0       	rjmp	.+384    	; 0x18e <__bad_interrupt>
       e:	00 00       	nop
      10:	be c0       	rjmp	.+380    	; 0x18e <__bad_interrupt>
      12:	00 00       	nop
      14:	bc c0       	rjmp	.+376    	; 0x18e <__bad_interrupt>
      16:	00 00       	nop
      18:	ba c0       	rjmp	.+372    	; 0x18e <__bad_interrupt>
      1a:	00 00       	nop
      1c:	b8 c0       	rjmp	.+368    	; 0x18e <__bad_interrupt>
      1e:	00 00       	nop
      20:	b6 c0       	rjmp	.+364    	; 0x18e <__bad_interrupt>
      22:	00 00       	nop
      24:	b4 c0       	rjmp	.+360    	; 0x18e <__bad_interrupt>
      26:	00 00       	nop
      28:	b2 c0       	rjmp	.+356    	; 0x18e <__bad_interrupt>
      2a:	00 00       	nop
      2c:	b0 c0       	rjmp	.+352    	; 0x18e <__bad_interrupt>
      2e:	00 00       	nop
      30:	ae c0       	rjmp	.+348    	; 0x18e <__bad_interrupt>
      32:	00 00       	nop
      34:	ac c0       	rjmp	.+344    	; 0x18e <__bad_interrupt>
      36:	00 00       	nop
      38:	aa c0       	rjmp	.+340    	; 0x18e <__bad_interrupt>
      3a:	00 00       	nop
      3c:	a8 c0       	rjmp	.+336    	; 0x18e <__bad_interrupt>
      3e:	00 00       	nop
      40:	a6 c0       	rjmp	.+332    	; 0x18e <__bad_interrupt>
      42:	00 00       	nop
      44:	a4 c0       	rjmp	.+328    	; 0x18e <__bad_interrupt>
      46:	00 00       	nop
      48:	a2 c0       	rjmp	.+324    	; 0x18e <__bad_interrupt>
      4a:	00 00       	nop
      4c:	a0 c0       	rjmp	.+320    	; 0x18e <__bad_interrupt>
      4e:	00 00       	nop
      50:	9e c0       	rjmp	.+316    	; 0x18e <__bad_interrupt>
      52:	00 00       	nop
      54:	9c c0       	rjmp	.+312    	; 0x18e <__bad_interrupt>
      56:	00 00       	nop
      58:	9a c0       	rjmp	.+308    	; 0x18e <__bad_interrupt>
      5a:	00 00       	nop
      5c:	98 c0       	rjmp	.+304    	; 0x18e <__bad_interrupt>
      5e:	00 00       	nop
      60:	96 c0       	rjmp	.+300    	; 0x18e <__bad_interrupt>
      62:	00 00       	nop
      64:	94 c0       	rjmp	.+296    	; 0x18e <__bad_interrupt>
      66:	00 00       	nop
      68:	92 c0       	rjmp	.+292    	; 0x18e <__bad_interrupt>
      6a:	00 00       	nop
      6c:	90 c0       	rjmp	.+288    	; 0x18e <__bad_interrupt>
      6e:	00 00       	nop
      70:	8e c0       	rjmp	.+284    	; 0x18e <__bad_interrupt>
      72:	00 00       	nop
      74:	8c c0       	rjmp	.+280    	; 0x18e <__bad_interrupt>
      76:	00 00       	nop
      78:	8a c0       	rjmp	.+276    	; 0x18e <__bad_interrupt>
      7a:	00 00       	nop
      7c:	88 c0       	rjmp	.+272    	; 0x18e <__bad_interrupt>
      7e:	00 00       	nop
      80:	86 c0       	rjmp	.+268    	; 0x18e <__bad_interrupt>
      82:	00 00       	nop
      84:	84 c0       	rjmp	.+264    	; 0x18e <__bad_interrupt>
      86:	00 00       	nop
      88:	82 c0       	rjmp	.+260    	; 0x18e <__bad_interrupt>
      8a:	00 00       	nop
      8c:	80 c0       	rjmp	.+256    	; 0x18e <__bad_interrupt>
      8e:	00 00       	nop
      90:	7e c0       	rjmp	.+252    	; 0x18e <__bad_interrupt>
      92:	00 00       	nop
      94:	7c c0       	rjmp	.+248    	; 0x18e <__bad_interrupt>
      96:	00 00       	nop
      98:	7a c0       	rjmp	.+244    	; 0x18e <__bad_interrupt>
      9a:	00 00       	nop
      9c:	78 c0       	rjmp	.+240    	; 0x18e <__bad_interrupt>
      9e:	00 00       	nop
      a0:	76 c0       	rjmp	.+236    	; 0x18e <__bad_interrupt>
      a2:	00 00       	nop
      a4:	74 c0       	rjmp	.+232    	; 0x18e <__bad_interrupt>
      a6:	00 00       	nop
      a8:	72 c0       	rjmp	.+228    	; 0x18e <__bad_interrupt>
      aa:	00 00       	nop
      ac:	70 c0       	rjmp	.+224    	; 0x18e <__bad_interrupt>
      ae:	00 00       	nop
      b0:	6e c0       	rjmp	.+220    	; 0x18e <__bad_interrupt>
      b2:	00 00       	nop
      b4:	6c c0       	rjmp	.+216    	; 0x18e <__bad_interrupt>
      b6:	00 00       	nop
      b8:	6a c0       	rjmp	.+212    	; 0x18e <__bad_interrupt>
      ba:	00 00       	nop
      bc:	68 c0       	rjmp	.+208    	; 0x18e <__bad_interrupt>
      be:	00 00       	nop
      c0:	66 c0       	rjmp	.+204    	; 0x18e <__bad_interrupt>
      c2:	00 00       	nop
      c4:	64 c0       	rjmp	.+200    	; 0x18e <__bad_interrupt>
      c6:	00 00       	nop
      c8:	62 c0       	rjmp	.+196    	; 0x18e <__bad_interrupt>
      ca:	00 00       	nop
      cc:	60 c0       	rjmp	.+192    	; 0x18e <__bad_interrupt>
      ce:	00 00       	nop
      d0:	5e c0       	rjmp	.+188    	; 0x18e <__bad_interrupt>
      d2:	00 00       	nop
      d4:	5c c0       	rjmp	.+184    	; 0x18e <__bad_interrupt>
      d6:	00 00       	nop
      d8:	5a c0       	rjmp	.+180    	; 0x18e <__bad_interrupt>
      da:	00 00       	nop
      dc:	58 c0       	rjmp	.+176    	; 0x18e <__bad_interrupt>
      de:	00 00       	nop
      e0:	56 c0       	rjmp	.+172    	; 0x18e <__bad_interrupt>
      e2:	00 00       	nop
      e4:	07 63       	ori	r16, 0x37	; 55
      e6:	42 36       	cpi	r20, 0x62	; 98
      e8:	b7 9b       	sbis	0x16, 7	; 22
      ea:	d8 a7       	std	Y+40, r29	; 0x28
      ec:	1a 39       	cpi	r17, 0x9A	; 154
      ee:	68 56       	subi	r22, 0x68	; 104
      f0:	18 ae       	std	Y+56, r1	; 0x38
      f2:	ba ab       	std	Y+50, r27	; 0x32
      f4:	55 8c       	ldd	r5, Z+29	; 0x1d
      f6:	1d 3c       	cpi	r17, 0xCD	; 205
      f8:	b7 cc       	rjmp	.-1682   	; 0xfffffa68 <__eeprom_end+0xff7efa68>
      fa:	57 63       	ori	r21, 0x37	; 55
      fc:	bd 6d       	ori	r27, 0xDD	; 221
      fe:	ed fd       	.word	0xfded	; ????
     100:	75 3e       	cpi	r23, 0xE5	; 229
     102:	f6 17       	cp	r31, r22
     104:	72 31       	cpi	r23, 0x12	; 18
     106:	bf 00       	.word	0x00bf	; ????
     108:	00 00       	nop
     10a:	80 3f       	cpi	r24, 0xF0	; 240
     10c:	08 00       	.word	0x0008	; ????
     10e:	00 00       	nop
     110:	be 92       	st	-X, r11
     112:	24 49       	sbci	r18, 0x94	; 148
     114:	12 3e       	cpi	r17, 0xE2	; 226
     116:	ab aa       	std	Y+51, r10	; 0x33
     118:	aa 2a       	or	r10, r26
     11a:	be cd       	rjmp	.-1156   	; 0xfffffc98 <__eeprom_end+0xff7efc98>
     11c:	cc cc       	rjmp	.-1640   	; 0xfffffab6 <__eeprom_end+0xff7efab6>
     11e:	4c 3e       	cpi	r20, 0xEC	; 236
     120:	00 00       	nop
     122:	00 80       	ld	r0, Z
     124:	be ab       	std	Y+54, r27	; 0x36
     126:	aa aa       	std	Y+50, r10	; 0x32
     128:	aa 3e       	cpi	r26, 0xEA	; 234
     12a:	00 00       	nop
     12c:	00 00       	nop
     12e:	bf 00       	.word	0x00bf	; ????
     130:	00 00       	nop
     132:	80 3f       	cpi	r24, 0xF0	; 240
     134:	00 00       	nop
     136:	00 00       	nop
     138:	00 08       	sbc	r0, r0
     13a:	41 78       	andi	r20, 0x81	; 129
     13c:	d3 bb       	out	0x13, r29	; 19
     13e:	43 87       	std	Z+11, r20	; 0x0b
     140:	d1 13       	cpse	r29, r17
     142:	3d 19       	sub	r19, r13
     144:	0e 3c       	cpi	r16, 0xCE	; 206
     146:	c3 bd       	out	0x23, r28	; 35
     148:	42 82       	std	Z+2, r4	; 0x02
     14a:	ad 2b       	or	r26, r29
     14c:	3e 68       	ori	r19, 0x8E	; 142
     14e:	ec 82       	std	Y+4, r14	; 0x04
     150:	76 be       	out	0x36, r7	; 54
     152:	d9 8f       	std	Y+25, r29	; 0x19
     154:	e1 a9       	ldd	r30, Z+49	; 0x31
     156:	3e 4c       	sbci	r19, 0xCE	; 206
     158:	80 ef       	ldi	r24, 0xF0	; 240
     15a:	ff be       	out	0x3f, r15	; 63
     15c:	01 c4       	rjmp	.+2050   	; 0x960 <arm_y_linear+0x2da>
     15e:	ff 7f       	andi	r31, 0xFF	; 255
     160:	3f 00       	.word	0x003f	; ????
     162:	00 00       	nop
	...

00000166 <__ctors_end>:
     166:	11 24       	eor	r1, r1
     168:	1f be       	out	0x3f, r1	; 63
     16a:	cf ef       	ldi	r28, 0xFF	; 255
     16c:	d1 e2       	ldi	r29, 0x21	; 33
     16e:	de bf       	out	0x3e, r29	; 62
     170:	cd bf       	out	0x3d, r28	; 61
     172:	00 e0       	ldi	r16, 0x00	; 0
     174:	0c bf       	out	0x3c, r16	; 60

00000176 <__do_clear_bss>:
     176:	22 e0       	ldi	r18, 0x02	; 2
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b2 e0       	ldi	r27, 0x02	; 2
     17c:	01 c0       	rjmp	.+2      	; 0x180 <.do_clear_bss_start>

0000017e <.do_clear_bss_loop>:
     17e:	1d 92       	st	X+, r1

00000180 <.do_clear_bss_start>:
     180:	a1 36       	cpi	r26, 0x61	; 97
     182:	b2 07       	cpc	r27, r18
     184:	e1 f7       	brne	.-8      	; 0x17e <.do_clear_bss_loop>
     186:	0e 94 74 09 	call	0x12e8	; 0x12e8 <main>
     18a:	0c 94 ed 10 	jmp	0x21da	; 0x21da <_exit>

0000018e <__bad_interrupt>:
     18e:	38 cf       	rjmp	.-400    	; 0x0 <__vectors>

00000190 <adc_init>:
#include "Common_includes.h"

//Initialize the ADC
void adc_init()
 {
	ADCSRA = 0x00;
     190:	ea e7       	ldi	r30, 0x7A	; 122
     192:	f0 e0       	ldi	r31, 0x00	; 0
     194:	10 82       	st	Z, r1
	ADCSRB = 0x00;		//MUX5 = 0
     196:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x70007b>
	ADMUX = 0x20;		//Vref=5V external --- ADLAR=1 --- MUX4:0 = 0000
     19a:	80 e2       	ldi	r24, 0x20	; 32
     19c:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
	ACSR = 0x80;
     1a0:	80 e8       	ldi	r24, 0x80	; 128
     1a2:	80 bf       	out	0x30, r24	; 48
	ADCSRA = 0x86;		//ADEN=1 --- ADIE=1 --- ADPS2:0 = 1 1 0
     1a4:	86 e8       	ldi	r24, 0x86	; 134
     1a6:	80 83       	st	Z, r24
     1a8:	08 95       	ret

000001aa <adc_pin_config>:

//ADC pin configuration

void adc_pin_config (void)
 {
	DDRF = 0x00;
     1aa:	10 ba       	out	0x10, r1	; 16
	PORTF = 0x00;
     1ac:	11 ba       	out	0x11, r1	; 17
	DDRK = 0x00;
     1ae:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
	PORTK = 0x00;
     1b2:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
     1b6:	08 95       	ret

000001b8 <ADC_Conversion>:

unsigned char ADC_Conversion(unsigned char Ch)
 {
	unsigned char a;
	
	if(Ch>7)
     1b8:	88 30       	cpi	r24, 0x08	; 8
     1ba:	18 f0       	brcs	.+6      	; 0x1c2 <ADC_Conversion+0xa>
     {
		ADCSRB = 0x08;
     1bc:	98 e0       	ldi	r25, 0x08	; 8
     1be:	90 93 7b 00 	sts	0x007B, r25	; 0x80007b <__TEXT_REGION_LENGTH__+0x70007b>
	 }
	 
	Ch = Ch & 0x07;
	ADMUX= 0x20| Ch;
     1c2:	87 70       	andi	r24, 0x07	; 7
     1c4:	80 62       	ori	r24, 0x20	; 32
     1c6:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
	ADCSRA = ADCSRA | 0x40;		//Set start conversion bit
     1ca:	ea e7       	ldi	r30, 0x7A	; 122
     1cc:	f0 e0       	ldi	r31, 0x00	; 0
     1ce:	80 81       	ld	r24, Z
     1d0:	80 64       	ori	r24, 0x40	; 64
     1d2:	80 83       	st	Z, r24
	
	while((ADCSRA&0x10)==0);	//Wait for conversion to complete
     1d4:	80 81       	ld	r24, Z
     1d6:	84 ff       	sbrs	r24, 4
     1d8:	fd cf       	rjmp	.-6      	; 0x1d4 <ADC_Conversion+0x1c>

	a=ADCH;
     1da:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x700079>
	ADCSRA = ADCSRA|0x10; //clear ADIF (ADC Interrupt Flag) by writing 1 to it
     1de:	ea e7       	ldi	r30, 0x7A	; 122
     1e0:	f0 e0       	ldi	r31, 0x00	; 0
     1e2:	90 81       	ld	r25, Z
     1e4:	90 61       	ori	r25, 0x10	; 16
     1e6:	90 83       	st	Z, r25
	ADCSRB = 0x00;
     1e8:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x70007b>

	return a;
     1ec:	08 95       	ret

000001ee <angle_fix>:
	
	degrees1=DH_degrees1+90;
	degrees2=abs(DH_degrees2+180);
	degrees3=(180-DH_degrees2-DH_degrees3);
		
	if (servo_number==1)
     1ee:	21 30       	cpi	r18, 0x01	; 1
     1f0:	31 05       	cpc	r19, r1
     1f2:	19 f4       	brne	.+6      	; 0x1fa <angle_fix+0xc>
//Calculating the servo angles from the angles obtained from DH parameter modelling of the arm
int angle_fix(int DH_degrees1, int DH_degrees2, int DH_degrees3, int servo_number)
 {
	int degrees=0, degrees1=0, degrees2=0, degrees3=0;
	
	degrees1=DH_degrees1+90;
     1f4:	86 5a       	subi	r24, 0xA6	; 166
     1f6:	9f 4f       	sbci	r25, 0xFF	; 255
     1f8:	08 95       	ret
	if (servo_number==1)
	{
		degrees=degrees1;
	}
		
	else if (servo_number==2)
     1fa:	22 30       	cpi	r18, 0x02	; 2
     1fc:	31 05       	cpc	r19, r1
     1fe:	91 f4       	brne	.+36     	; 0x224 <angle_fix+0x36>
int angle_fix(int DH_degrees1, int DH_degrees2, int DH_degrees3, int servo_number)
 {
	int degrees=0, degrees1=0, degrees2=0, degrees3=0;
	
	degrees1=DH_degrees1+90;
	degrees2=abs(DH_degrees2+180);
     200:	6c 54       	subi	r22, 0x4C	; 76
     202:	7f 4f       	sbci	r23, 0xFF	; 255
     204:	cb 01       	movw	r24, r22
     206:	99 23       	and	r25, r25
     208:	24 f4       	brge	.+8      	; 0x212 <angle_fix+0x24>
     20a:	88 27       	eor	r24, r24
     20c:	99 27       	eor	r25, r25
     20e:	86 1b       	sub	r24, r22
     210:	97 0b       	sbc	r25, r23
		degrees=degrees1;
	}
		
	else if (servo_number==2)
	{
	if (degrees2<20)
     212:	84 31       	cpi	r24, 0x14	; 20
     214:	91 05       	cpc	r25, r1
     216:	ac f0       	brlt	.+42     	; 0x242 <angle_fix+0x54>
     218:	81 3a       	cpi	r24, 0xA1	; 161
     21a:	91 05       	cpc	r25, r1
     21c:	bc f0       	brlt	.+46     	; 0x24c <angle_fix+0x5e>
     21e:	80 ea       	ldi	r24, 0xA0	; 160
     220:	90 e0       	ldi	r25, 0x00	; 0
     222:	08 95       	ret
 {
	int degrees=0, degrees1=0, degrees2=0, degrees3=0;
	
	degrees1=DH_degrees1+90;
	degrees2=abs(DH_degrees2+180);
	degrees3=(180-DH_degrees2-DH_degrees3);
     224:	84 eb       	ldi	r24, 0xB4	; 180
     226:	90 e0       	ldi	r25, 0x00	; 0
     228:	86 1b       	sub	r24, r22
     22a:	97 0b       	sbc	r25, r23
     22c:	84 1b       	sub	r24, r20
     22e:	95 0b       	sbc	r25, r21
		degrees=degrees2;
	}
	 
	else
	{
	if (degrees3<20)
     230:	84 31       	cpi	r24, 0x14	; 20
     232:	91 05       	cpc	r25, r1
     234:	4c f0       	brlt	.+18     	; 0x248 <angle_fix+0x5a>
     236:	81 3a       	cpi	r24, 0xA1	; 161
     238:	91 05       	cpc	r25, r1
     23a:	44 f0       	brlt	.+16     	; 0x24c <angle_fix+0x5e>
     23c:	80 ea       	ldi	r24, 0xA0	; 160
     23e:	90 e0       	ldi	r25, 0x00	; 0
     240:	08 95       	ret
		
	else if (servo_number==2)
	{
	if (degrees2<20)
	{
		degrees2=20;
     242:	84 e1       	ldi	r24, 0x14	; 20
     244:	90 e0       	ldi	r25, 0x00	; 0
     246:	08 95       	ret
	 
	else
	{
	if (degrees3<20)
	{
		degrees3=20;
     248:	84 e1       	ldi	r24, 0x14	; 20
     24a:	90 e0       	ldi	r25, 0x00	; 0
	}
		degrees=degrees3;
	}
	
	 return degrees;
     24c:	08 95       	ret

0000024e <arm_z_linear>:

int degrees1=0, degrees2=0, degrees3=0;

//Function to obtain linear motion in z for 5 cm
void arm_z_linear()
 {
     24e:	ef 92       	push	r14
     250:	ff 92       	push	r15
     252:	0f 93       	push	r16
     254:	1f 93       	push	r17
     256:	cf 93       	push	r28
     258:	df 93       	push	r29
	degrees1=angle_fix(-56, -30, 81, 1);
     25a:	21 e0       	ldi	r18, 0x01	; 1
     25c:	30 e0       	ldi	r19, 0x00	; 0
     25e:	41 e5       	ldi	r20, 0x51	; 81
     260:	50 e0       	ldi	r21, 0x00	; 0
     262:	62 ee       	ldi	r22, 0xE2	; 226
     264:	7f ef       	ldi	r23, 0xFF	; 255
     266:	88 ec       	ldi	r24, 0xC8	; 200
     268:	9f ef       	ldi	r25, 0xFF	; 255
     26a:	c1 df       	rcall	.-126    	; 0x1ee <angle_fix>
     26c:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <degrees1+0x1>
     270:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <degrees1>
	degrees2=angle_fix(-56, -30, 81, 2);
     274:	22 e0       	ldi	r18, 0x02	; 2
     276:	30 e0       	ldi	r19, 0x00	; 0
     278:	41 e5       	ldi	r20, 0x51	; 81
     27a:	50 e0       	ldi	r21, 0x00	; 0
     27c:	62 ee       	ldi	r22, 0xE2	; 226
     27e:	7f ef       	ldi	r23, 0xFF	; 255
     280:	88 ec       	ldi	r24, 0xC8	; 200
     282:	9f ef       	ldi	r25, 0xFF	; 255
     284:	b4 df       	rcall	.-152    	; 0x1ee <angle_fix>
     286:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <degrees2+0x1>
     28a:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <degrees2>
	degrees3=angle_fix(-56, -30, 81, 3);
     28e:	23 e0       	ldi	r18, 0x03	; 3
     290:	30 e0       	ldi	r19, 0x00	; 0
     292:	41 e5       	ldi	r20, 0x51	; 81
     294:	50 e0       	ldi	r21, 0x00	; 0
     296:	62 ee       	ldi	r22, 0xE2	; 226
     298:	7f ef       	ldi	r23, 0xFF	; 255
     29a:	88 ec       	ldi	r24, 0xC8	; 200
     29c:	9f ef       	ldi	r25, 0xFF	; 255
     29e:	a7 df       	rcall	.-178    	; 0x1ee <angle_fix>
     2a0:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <_edata+0x1>
     2a4:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <_edata>

	servo_1(degrees1);
     2a8:	0f 2e       	mov	r0, r31
     2aa:	f4 e0       	ldi	r31, 0x04	; 4
     2ac:	ef 2e       	mov	r14, r31
     2ae:	f2 e0       	ldi	r31, 0x02	; 2
     2b0:	ff 2e       	mov	r15, r31
     2b2:	f0 2d       	mov	r31, r0
     2b4:	f7 01       	movw	r30, r14
     2b6:	80 81       	ld	r24, Z
     2b8:	0e 94 33 0a 	call	0x1466	; 0x1466 <servo_1>
	servo_2(degrees2);
     2bc:	02 e0       	ldi	r16, 0x02	; 2
     2be:	12 e0       	ldi	r17, 0x02	; 2
     2c0:	f8 01       	movw	r30, r16
     2c2:	80 81       	ld	r24, Z
     2c4:	0e 94 48 0a 	call	0x1490	; 0x1490 <servo_2>
	servo_3(degrees3);
     2c8:	c0 e0       	ldi	r28, 0x00	; 0
     2ca:	d2 e0       	ldi	r29, 0x02	; 2
     2cc:	88 81       	ld	r24, Y
     2ce:	0e 94 5d 0a 	call	0x14ba	; 0x14ba <servo_3>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2d2:	ff ef       	ldi	r31, 0xFF	; 255
     2d4:	2f e7       	ldi	r18, 0x7F	; 127
     2d6:	84 e0       	ldi	r24, 0x04	; 4
     2d8:	f1 50       	subi	r31, 0x01	; 1
     2da:	20 40       	sbci	r18, 0x00	; 0
     2dc:	80 40       	sbci	r24, 0x00	; 0
     2de:	e1 f7       	brne	.-8      	; 0x2d8 <arm_z_linear+0x8a>
     2e0:	00 c0       	rjmp	.+0      	; 0x2e2 <arm_z_linear+0x94>
     2e2:	00 00       	nop

	_delay_ms(100);

	degrees1=angle_fix(-56, -35, 82, 1);
     2e4:	21 e0       	ldi	r18, 0x01	; 1
     2e6:	30 e0       	ldi	r19, 0x00	; 0
     2e8:	42 e5       	ldi	r20, 0x52	; 82
     2ea:	50 e0       	ldi	r21, 0x00	; 0
     2ec:	6d ed       	ldi	r22, 0xDD	; 221
     2ee:	7f ef       	ldi	r23, 0xFF	; 255
     2f0:	88 ec       	ldi	r24, 0xC8	; 200
     2f2:	9f ef       	ldi	r25, 0xFF	; 255
     2f4:	7c df       	rcall	.-264    	; 0x1ee <angle_fix>
     2f6:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <degrees1+0x1>
     2fa:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <degrees1>
	degrees2=angle_fix(-56, -35, 82, 2);
     2fe:	22 e0       	ldi	r18, 0x02	; 2
     300:	30 e0       	ldi	r19, 0x00	; 0
     302:	42 e5       	ldi	r20, 0x52	; 82
     304:	50 e0       	ldi	r21, 0x00	; 0
     306:	6d ed       	ldi	r22, 0xDD	; 221
     308:	7f ef       	ldi	r23, 0xFF	; 255
     30a:	88 ec       	ldi	r24, 0xC8	; 200
     30c:	9f ef       	ldi	r25, 0xFF	; 255
     30e:	6f df       	rcall	.-290    	; 0x1ee <angle_fix>
     310:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <degrees2+0x1>
     314:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <degrees2>
	degrees3=angle_fix(-56, -35, 82, 3);
     318:	23 e0       	ldi	r18, 0x03	; 3
     31a:	30 e0       	ldi	r19, 0x00	; 0
     31c:	42 e5       	ldi	r20, 0x52	; 82
     31e:	50 e0       	ldi	r21, 0x00	; 0
     320:	6d ed       	ldi	r22, 0xDD	; 221
     322:	7f ef       	ldi	r23, 0xFF	; 255
     324:	88 ec       	ldi	r24, 0xC8	; 200
     326:	9f ef       	ldi	r25, 0xFF	; 255
     328:	62 df       	rcall	.-316    	; 0x1ee <angle_fix>
     32a:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <_edata+0x1>
     32e:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <_edata>

	servo_1(degrees1);
     332:	f7 01       	movw	r30, r14
     334:	80 81       	ld	r24, Z
     336:	0e 94 33 0a 	call	0x1466	; 0x1466 <servo_1>
	servo_2(degrees2);
     33a:	f8 01       	movw	r30, r16
     33c:	80 81       	ld	r24, Z
     33e:	0e 94 48 0a 	call	0x1490	; 0x1490 <servo_2>
	servo_3(degrees3);
     342:	88 81       	ld	r24, Y
     344:	0e 94 5d 0a 	call	0x14ba	; 0x14ba <servo_3>
     348:	ff ef       	ldi	r31, 0xFF	; 255
     34a:	2f e7       	ldi	r18, 0x7F	; 127
     34c:	84 e0       	ldi	r24, 0x04	; 4
     34e:	f1 50       	subi	r31, 0x01	; 1
     350:	20 40       	sbci	r18, 0x00	; 0
     352:	80 40       	sbci	r24, 0x00	; 0
     354:	e1 f7       	brne	.-8      	; 0x34e <arm_z_linear+0x100>
     356:	00 c0       	rjmp	.+0      	; 0x358 <arm_z_linear+0x10a>
     358:	00 00       	nop

	_delay_ms(100);
	
	degrees1=angle_fix(-56, -40, 83, 1);
     35a:	21 e0       	ldi	r18, 0x01	; 1
     35c:	30 e0       	ldi	r19, 0x00	; 0
     35e:	43 e5       	ldi	r20, 0x53	; 83
     360:	50 e0       	ldi	r21, 0x00	; 0
     362:	68 ed       	ldi	r22, 0xD8	; 216
     364:	7f ef       	ldi	r23, 0xFF	; 255
     366:	88 ec       	ldi	r24, 0xC8	; 200
     368:	9f ef       	ldi	r25, 0xFF	; 255
     36a:	41 df       	rcall	.-382    	; 0x1ee <angle_fix>
     36c:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <degrees1+0x1>
     370:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <degrees1>
	degrees2=angle_fix(-56, -40, 83, 2);
     374:	22 e0       	ldi	r18, 0x02	; 2
     376:	30 e0       	ldi	r19, 0x00	; 0
     378:	43 e5       	ldi	r20, 0x53	; 83
     37a:	50 e0       	ldi	r21, 0x00	; 0
     37c:	68 ed       	ldi	r22, 0xD8	; 216
     37e:	7f ef       	ldi	r23, 0xFF	; 255
     380:	88 ec       	ldi	r24, 0xC8	; 200
     382:	9f ef       	ldi	r25, 0xFF	; 255
     384:	34 df       	rcall	.-408    	; 0x1ee <angle_fix>
     386:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <degrees2+0x1>
     38a:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <degrees2>
	degrees3=angle_fix(-56, -40, 83, 3);
     38e:	23 e0       	ldi	r18, 0x03	; 3
     390:	30 e0       	ldi	r19, 0x00	; 0
     392:	43 e5       	ldi	r20, 0x53	; 83
     394:	50 e0       	ldi	r21, 0x00	; 0
     396:	68 ed       	ldi	r22, 0xD8	; 216
     398:	7f ef       	ldi	r23, 0xFF	; 255
     39a:	88 ec       	ldi	r24, 0xC8	; 200
     39c:	9f ef       	ldi	r25, 0xFF	; 255
     39e:	27 df       	rcall	.-434    	; 0x1ee <angle_fix>
     3a0:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <_edata+0x1>
     3a4:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <_edata>

	servo_1(degrees1);
     3a8:	f7 01       	movw	r30, r14
     3aa:	80 81       	ld	r24, Z
     3ac:	0e 94 33 0a 	call	0x1466	; 0x1466 <servo_1>
	servo_2(degrees2);
     3b0:	f8 01       	movw	r30, r16
     3b2:	80 81       	ld	r24, Z
     3b4:	0e 94 48 0a 	call	0x1490	; 0x1490 <servo_2>
	servo_3(degrees3);
     3b8:	88 81       	ld	r24, Y
     3ba:	0e 94 5d 0a 	call	0x14ba	; 0x14ba <servo_3>
     3be:	ff ef       	ldi	r31, 0xFF	; 255
     3c0:	2f e7       	ldi	r18, 0x7F	; 127
     3c2:	84 e0       	ldi	r24, 0x04	; 4
     3c4:	f1 50       	subi	r31, 0x01	; 1
     3c6:	20 40       	sbci	r18, 0x00	; 0
     3c8:	80 40       	sbci	r24, 0x00	; 0
     3ca:	e1 f7       	brne	.-8      	; 0x3c4 <arm_z_linear+0x176>
     3cc:	00 c0       	rjmp	.+0      	; 0x3ce <arm_z_linear+0x180>

	_delay_ms(100);
	
	degrees1=angle_fix(-56, -44, 82, 1);
     3ce:	00 00       	nop
     3d0:	21 e0       	ldi	r18, 0x01	; 1
     3d2:	30 e0       	ldi	r19, 0x00	; 0
     3d4:	42 e5       	ldi	r20, 0x52	; 82
     3d6:	50 e0       	ldi	r21, 0x00	; 0
     3d8:	64 ed       	ldi	r22, 0xD4	; 212
     3da:	7f ef       	ldi	r23, 0xFF	; 255
     3dc:	88 ec       	ldi	r24, 0xC8	; 200
     3de:	9f ef       	ldi	r25, 0xFF	; 255
     3e0:	06 df       	rcall	.-500    	; 0x1ee <angle_fix>
     3e2:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <degrees1+0x1>
     3e6:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <degrees1>
	degrees2=angle_fix(-56, -44, 82, 2);
     3ea:	22 e0       	ldi	r18, 0x02	; 2
     3ec:	30 e0       	ldi	r19, 0x00	; 0
     3ee:	42 e5       	ldi	r20, 0x52	; 82
     3f0:	50 e0       	ldi	r21, 0x00	; 0
     3f2:	64 ed       	ldi	r22, 0xD4	; 212
     3f4:	7f ef       	ldi	r23, 0xFF	; 255
     3f6:	88 ec       	ldi	r24, 0xC8	; 200
     3f8:	9f ef       	ldi	r25, 0xFF	; 255
     3fa:	f9 de       	rcall	.-526    	; 0x1ee <angle_fix>
     3fc:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <degrees2+0x1>
     400:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <degrees2>
	degrees3=angle_fix(-56, -44, 82, 3);
     404:	23 e0       	ldi	r18, 0x03	; 3
     406:	30 e0       	ldi	r19, 0x00	; 0
     408:	42 e5       	ldi	r20, 0x52	; 82
     40a:	50 e0       	ldi	r21, 0x00	; 0
     40c:	64 ed       	ldi	r22, 0xD4	; 212
     40e:	7f ef       	ldi	r23, 0xFF	; 255
     410:	88 ec       	ldi	r24, 0xC8	; 200
     412:	9f ef       	ldi	r25, 0xFF	; 255
     414:	ec de       	rcall	.-552    	; 0x1ee <angle_fix>
     416:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <_edata+0x1>
     41a:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <_edata>
	
	servo_1(degrees1);
     41e:	f7 01       	movw	r30, r14
     420:	80 81       	ld	r24, Z
     422:	0e 94 33 0a 	call	0x1466	; 0x1466 <servo_1>
	servo_2(degrees2);
     426:	f8 01       	movw	r30, r16
     428:	80 81       	ld	r24, Z
     42a:	0e 94 48 0a 	call	0x1490	; 0x1490 <servo_2>
	servo_3(degrees3);
     42e:	88 81       	ld	r24, Y
     430:	0e 94 5d 0a 	call	0x14ba	; 0x14ba <servo_3>
     434:	ff ef       	ldi	r31, 0xFF	; 255
     436:	2f e7       	ldi	r18, 0x7F	; 127
     438:	84 e0       	ldi	r24, 0x04	; 4
     43a:	f1 50       	subi	r31, 0x01	; 1
     43c:	20 40       	sbci	r18, 0x00	; 0
     43e:	80 40       	sbci	r24, 0x00	; 0
     440:	e1 f7       	brne	.-8      	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
     442:	00 c0       	rjmp	.+0      	; 0x444 <__LOCK_REGION_LENGTH__+0x44>

	_delay_ms(100);
	
	degrees1=angle_fix(-56, -48, 81, 1);
     444:	00 00       	nop
     446:	21 e0       	ldi	r18, 0x01	; 1
     448:	30 e0       	ldi	r19, 0x00	; 0
     44a:	41 e5       	ldi	r20, 0x51	; 81
     44c:	50 e0       	ldi	r21, 0x00	; 0
     44e:	60 ed       	ldi	r22, 0xD0	; 208
     450:	7f ef       	ldi	r23, 0xFF	; 255
     452:	88 ec       	ldi	r24, 0xC8	; 200
     454:	9f ef       	ldi	r25, 0xFF	; 255
     456:	cb de       	rcall	.-618    	; 0x1ee <angle_fix>
     458:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <degrees1+0x1>
     45c:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <degrees1>
	degrees2=angle_fix(-56, -48, 81, 2);
     460:	22 e0       	ldi	r18, 0x02	; 2
     462:	30 e0       	ldi	r19, 0x00	; 0
     464:	41 e5       	ldi	r20, 0x51	; 81
     466:	50 e0       	ldi	r21, 0x00	; 0
     468:	60 ed       	ldi	r22, 0xD0	; 208
     46a:	7f ef       	ldi	r23, 0xFF	; 255
     46c:	88 ec       	ldi	r24, 0xC8	; 200
     46e:	9f ef       	ldi	r25, 0xFF	; 255
     470:	be de       	rcall	.-644    	; 0x1ee <angle_fix>
     472:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <degrees2+0x1>
     476:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <degrees2>
	degrees3=angle_fix(-56, -48, 81, 3);
     47a:	23 e0       	ldi	r18, 0x03	; 3
     47c:	30 e0       	ldi	r19, 0x00	; 0
     47e:	41 e5       	ldi	r20, 0x51	; 81
     480:	50 e0       	ldi	r21, 0x00	; 0
     482:	60 ed       	ldi	r22, 0xD0	; 208
     484:	7f ef       	ldi	r23, 0xFF	; 255
     486:	88 ec       	ldi	r24, 0xC8	; 200
     488:	9f ef       	ldi	r25, 0xFF	; 255
     48a:	b1 de       	rcall	.-670    	; 0x1ee <angle_fix>
     48c:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <_edata+0x1>
	
	servo_1(degrees1);
     490:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <_edata>
     494:	f7 01       	movw	r30, r14
     496:	80 81       	ld	r24, Z
	servo_2(degrees2);
     498:	e6 d7       	rcall	.+4044   	; 0x1466 <servo_1>
     49a:	f8 01       	movw	r30, r16
     49c:	80 81       	ld	r24, Z
     49e:	f8 d7       	rcall	.+4080   	; 0x1490 <servo_2>
	servo_3(degrees3);
     4a0:	88 81       	ld	r24, Y
     4a2:	0e 94 5d 0a 	call	0x14ba	; 0x14ba <servo_3>
     4a6:	ff ef       	ldi	r31, 0xFF	; 255
     4a8:	2f e7       	ldi	r18, 0x7F	; 127
     4aa:	84 e0       	ldi	r24, 0x04	; 4
     4ac:	f1 50       	subi	r31, 0x01	; 1
     4ae:	20 40       	sbci	r18, 0x00	; 0
     4b0:	80 40       	sbci	r24, 0x00	; 0
     4b2:	e1 f7       	brne	.-8      	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
     4b4:	00 c0       	rjmp	.+0      	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>

	_delay_ms(100);

	degrees1=angle_fix(-56, -44, 82, 1);
     4b6:	00 00       	nop
     4b8:	21 e0       	ldi	r18, 0x01	; 1
     4ba:	30 e0       	ldi	r19, 0x00	; 0
     4bc:	42 e5       	ldi	r20, 0x52	; 82
     4be:	50 e0       	ldi	r21, 0x00	; 0
     4c0:	64 ed       	ldi	r22, 0xD4	; 212
     4c2:	7f ef       	ldi	r23, 0xFF	; 255
     4c4:	88 ec       	ldi	r24, 0xC8	; 200
     4c6:	9f ef       	ldi	r25, 0xFF	; 255
     4c8:	92 de       	rcall	.-732    	; 0x1ee <angle_fix>
     4ca:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <degrees1+0x1>
     4ce:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <degrees1>
	degrees2=angle_fix(-56, -44, 82, 2);
     4d2:	22 e0       	ldi	r18, 0x02	; 2
     4d4:	30 e0       	ldi	r19, 0x00	; 0
     4d6:	42 e5       	ldi	r20, 0x52	; 82
     4d8:	50 e0       	ldi	r21, 0x00	; 0
     4da:	64 ed       	ldi	r22, 0xD4	; 212
     4dc:	7f ef       	ldi	r23, 0xFF	; 255
     4de:	88 ec       	ldi	r24, 0xC8	; 200
     4e0:	9f ef       	ldi	r25, 0xFF	; 255
     4e2:	85 de       	rcall	.-758    	; 0x1ee <angle_fix>
     4e4:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <degrees2+0x1>
	degrees3=angle_fix(-56, -44, 82, 3);
     4e8:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <degrees2>
     4ec:	23 e0       	ldi	r18, 0x03	; 3
     4ee:	30 e0       	ldi	r19, 0x00	; 0
     4f0:	42 e5       	ldi	r20, 0x52	; 82
     4f2:	50 e0       	ldi	r21, 0x00	; 0
     4f4:	64 ed       	ldi	r22, 0xD4	; 212
     4f6:	7f ef       	ldi	r23, 0xFF	; 255
     4f8:	88 ec       	ldi	r24, 0xC8	; 200
     4fa:	9f ef       	ldi	r25, 0xFF	; 255
     4fc:	78 de       	rcall	.-784    	; 0x1ee <angle_fix>
     4fe:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <_edata+0x1>
	
	servo_1(degrees1);
     502:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <_edata>
     506:	f7 01       	movw	r30, r14
	servo_2(degrees2);
     508:	80 81       	ld	r24, Z
     50a:	ad d7       	rcall	.+3930   	; 0x1466 <servo_1>
     50c:	f8 01       	movw	r30, r16
     50e:	80 81       	ld	r24, Z
	servo_3(degrees3);
     510:	bf d7       	rcall	.+3966   	; 0x1490 <servo_2>
     512:	88 81       	ld	r24, Y
     514:	d2 d7       	rcall	.+4004   	; 0x14ba <servo_3>
     516:	ff ef       	ldi	r31, 0xFF	; 255
     518:	2f e7       	ldi	r18, 0x7F	; 127
     51a:	84 e0       	ldi	r24, 0x04	; 4
     51c:	f1 50       	subi	r31, 0x01	; 1
     51e:	20 40       	sbci	r18, 0x00	; 0
     520:	80 40       	sbci	r24, 0x00	; 0
     522:	e1 f7       	brne	.-8      	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
     524:	00 c0       	rjmp	.+0      	; 0x526 <__LOCK_REGION_LENGTH__+0x126>

	_delay_ms(100);	
	
	degrees1=angle_fix(-56, -40, 83, 1);
     526:	00 00       	nop
     528:	21 e0       	ldi	r18, 0x01	; 1
     52a:	30 e0       	ldi	r19, 0x00	; 0
     52c:	43 e5       	ldi	r20, 0x53	; 83
     52e:	50 e0       	ldi	r21, 0x00	; 0
     530:	68 ed       	ldi	r22, 0xD8	; 216
     532:	7f ef       	ldi	r23, 0xFF	; 255
     534:	88 ec       	ldi	r24, 0xC8	; 200
     536:	9f ef       	ldi	r25, 0xFF	; 255
     538:	5a de       	rcall	.-844    	; 0x1ee <angle_fix>
     53a:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <degrees1+0x1>
     53e:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <degrees1>
	degrees2=angle_fix(-56, -40, 83, 2);
     542:	22 e0       	ldi	r18, 0x02	; 2
     544:	30 e0       	ldi	r19, 0x00	; 0
     546:	43 e5       	ldi	r20, 0x53	; 83
     548:	50 e0       	ldi	r21, 0x00	; 0
     54a:	68 ed       	ldi	r22, 0xD8	; 216
     54c:	7f ef       	ldi	r23, 0xFF	; 255
     54e:	88 ec       	ldi	r24, 0xC8	; 200
     550:	9f ef       	ldi	r25, 0xFF	; 255
     552:	4d de       	rcall	.-870    	; 0x1ee <angle_fix>
	degrees3=angle_fix(-56, -40, 83, 3);
     554:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <degrees2+0x1>
     558:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <degrees2>
     55c:	23 e0       	ldi	r18, 0x03	; 3
     55e:	30 e0       	ldi	r19, 0x00	; 0
     560:	43 e5       	ldi	r20, 0x53	; 83
     562:	50 e0       	ldi	r21, 0x00	; 0
     564:	68 ed       	ldi	r22, 0xD8	; 216
     566:	7f ef       	ldi	r23, 0xFF	; 255
     568:	88 ec       	ldi	r24, 0xC8	; 200
     56a:	9f ef       	ldi	r25, 0xFF	; 255
     56c:	40 de       	rcall	.-896    	; 0x1ee <angle_fix>
     56e:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <_edata+0x1>

	servo_1(degrees1);
     572:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <_edata>
     576:	f7 01       	movw	r30, r14
	servo_2(degrees2);
     578:	80 81       	ld	r24, Z
     57a:	75 d7       	rcall	.+3818   	; 0x1466 <servo_1>
     57c:	f8 01       	movw	r30, r16
	servo_3(degrees3);
     57e:	80 81       	ld	r24, Z
     580:	87 d7       	rcall	.+3854   	; 0x1490 <servo_2>
     582:	88 81       	ld	r24, Y
     584:	9a d7       	rcall	.+3892   	; 0x14ba <servo_3>
     586:	ff ef       	ldi	r31, 0xFF	; 255
     588:	2f e7       	ldi	r18, 0x7F	; 127
     58a:	84 e0       	ldi	r24, 0x04	; 4
     58c:	f1 50       	subi	r31, 0x01	; 1
     58e:	20 40       	sbci	r18, 0x00	; 0
     590:	80 40       	sbci	r24, 0x00	; 0
     592:	e1 f7       	brne	.-8      	; 0x58c <__LOCK_REGION_LENGTH__+0x18c>
     594:	00 c0       	rjmp	.+0      	; 0x596 <__LOCK_REGION_LENGTH__+0x196>

	_delay_ms(100);

	degrees1=angle_fix(-56, -35, 82, 1);
     596:	00 00       	nop
     598:	21 e0       	ldi	r18, 0x01	; 1
     59a:	30 e0       	ldi	r19, 0x00	; 0
     59c:	42 e5       	ldi	r20, 0x52	; 82
     59e:	50 e0       	ldi	r21, 0x00	; 0
     5a0:	6d ed       	ldi	r22, 0xDD	; 221
     5a2:	7f ef       	ldi	r23, 0xFF	; 255
     5a4:	88 ec       	ldi	r24, 0xC8	; 200
     5a6:	9f ef       	ldi	r25, 0xFF	; 255
     5a8:	22 de       	rcall	.-956    	; 0x1ee <angle_fix>
     5aa:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <degrees1+0x1>
     5ae:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <degrees1>
	degrees2=angle_fix(-56, -35, 82, 2);
     5b2:	22 e0       	ldi	r18, 0x02	; 2
     5b4:	30 e0       	ldi	r19, 0x00	; 0
     5b6:	42 e5       	ldi	r20, 0x52	; 82
     5b8:	50 e0       	ldi	r21, 0x00	; 0
     5ba:	6d ed       	ldi	r22, 0xDD	; 221
     5bc:	7f ef       	ldi	r23, 0xFF	; 255
     5be:	88 ec       	ldi	r24, 0xC8	; 200
     5c0:	9f ef       	ldi	r25, 0xFF	; 255
     5c2:	15 de       	rcall	.-982    	; 0x1ee <angle_fix>
     5c4:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <degrees2+0x1>
	degrees3=angle_fix(-56, -35, 82, 3);
     5c8:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <degrees2>
     5cc:	23 e0       	ldi	r18, 0x03	; 3
     5ce:	30 e0       	ldi	r19, 0x00	; 0
     5d0:	42 e5       	ldi	r20, 0x52	; 82
     5d2:	50 e0       	ldi	r21, 0x00	; 0
     5d4:	6d ed       	ldi	r22, 0xDD	; 221
     5d6:	7f ef       	ldi	r23, 0xFF	; 255
     5d8:	88 ec       	ldi	r24, 0xC8	; 200
     5da:	9f ef       	ldi	r25, 0xFF	; 255
     5dc:	08 de       	rcall	.-1008   	; 0x1ee <angle_fix>
     5de:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <_edata+0x1>
     5e2:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <_edata>

	servo_1(degrees1);
     5e6:	f7 01       	movw	r30, r14
     5e8:	80 81       	ld	r24, Z
     5ea:	3d d7       	rcall	.+3706   	; 0x1466 <servo_1>
	servo_2(degrees2);
     5ec:	f8 01       	movw	r30, r16
     5ee:	80 81       	ld	r24, Z
     5f0:	4f d7       	rcall	.+3742   	; 0x1490 <servo_2>
	servo_3(degrees3);
     5f2:	88 81       	ld	r24, Y
     5f4:	62 d7       	rcall	.+3780   	; 0x14ba <servo_3>
     5f6:	ff ef       	ldi	r31, 0xFF	; 255
     5f8:	2f e7       	ldi	r18, 0x7F	; 127
     5fa:	84 e0       	ldi	r24, 0x04	; 4
     5fc:	f1 50       	subi	r31, 0x01	; 1
     5fe:	20 40       	sbci	r18, 0x00	; 0
     600:	80 40       	sbci	r24, 0x00	; 0
     602:	e1 f7       	brne	.-8      	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
     604:	00 c0       	rjmp	.+0      	; 0x606 <__LOCK_REGION_LENGTH__+0x206>
     606:	00 00       	nop

	_delay_ms(100);
	
	degrees1=angle_fix(-56, -30, 81, 1);
     608:	21 e0       	ldi	r18, 0x01	; 1
     60a:	30 e0       	ldi	r19, 0x00	; 0
     60c:	41 e5       	ldi	r20, 0x51	; 81
     60e:	50 e0       	ldi	r21, 0x00	; 0
     610:	62 ee       	ldi	r22, 0xE2	; 226
     612:	7f ef       	ldi	r23, 0xFF	; 255
     614:	88 ec       	ldi	r24, 0xC8	; 200
     616:	9f ef       	ldi	r25, 0xFF	; 255
     618:	ea dd       	rcall	.-1068   	; 0x1ee <angle_fix>
     61a:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <degrees1+0x1>
     61e:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <degrees1>
	degrees2=angle_fix(-56, -30, 81, 2);
     622:	22 e0       	ldi	r18, 0x02	; 2
     624:	30 e0       	ldi	r19, 0x00	; 0
     626:	41 e5       	ldi	r20, 0x51	; 81
     628:	50 e0       	ldi	r21, 0x00	; 0
     62a:	62 ee       	ldi	r22, 0xE2	; 226
     62c:	7f ef       	ldi	r23, 0xFF	; 255
     62e:	88 ec       	ldi	r24, 0xC8	; 200
     630:	9f ef       	ldi	r25, 0xFF	; 255
     632:	dd dd       	rcall	.-1094   	; 0x1ee <angle_fix>
     634:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <degrees2+0x1>
	degrees3=angle_fix(-56, -30, 81, 3);
     638:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <degrees2>
     63c:	23 e0       	ldi	r18, 0x03	; 3
     63e:	30 e0       	ldi	r19, 0x00	; 0
     640:	41 e5       	ldi	r20, 0x51	; 81
     642:	50 e0       	ldi	r21, 0x00	; 0
     644:	62 ee       	ldi	r22, 0xE2	; 226
     646:	7f ef       	ldi	r23, 0xFF	; 255
     648:	88 ec       	ldi	r24, 0xC8	; 200
     64a:	9f ef       	ldi	r25, 0xFF	; 255
     64c:	d0 dd       	rcall	.-1120   	; 0x1ee <angle_fix>
     64e:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <_edata+0x1>
     652:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <_edata>

	servo_1(degrees1);
     656:	f7 01       	movw	r30, r14
     658:	80 81       	ld	r24, Z
     65a:	05 d7       	rcall	.+3594   	; 0x1466 <servo_1>
	servo_2(degrees2);
     65c:	f8 01       	movw	r30, r16
     65e:	80 81       	ld	r24, Z
     660:	17 d7       	rcall	.+3630   	; 0x1490 <servo_2>
     662:	88 81       	ld	r24, Y
	servo_3(degrees3);
     664:	2a d7       	rcall	.+3668   	; 0x14ba <servo_3>
     666:	ff ef       	ldi	r31, 0xFF	; 255
     668:	2f e7       	ldi	r18, 0x7F	; 127
     66a:	84 e0       	ldi	r24, 0x04	; 4
     66c:	f1 50       	subi	r31, 0x01	; 1
     66e:	20 40       	sbci	r18, 0x00	; 0
     670:	80 40       	sbci	r24, 0x00	; 0
     672:	e1 f7       	brne	.-8      	; 0x66c <__LOCK_REGION_LENGTH__+0x26c>
     674:	00 c0       	rjmp	.+0      	; 0x676 <__LOCK_REGION_LENGTH__+0x276>
     676:	00 00       	nop
     678:	df 91       	pop	r29
     67a:	cf 91       	pop	r28

	_delay_ms(100);			
 }
     67c:	1f 91       	pop	r17
     67e:	0f 91       	pop	r16
     680:	ff 90       	pop	r15
     682:	ef 90       	pop	r14
     684:	08 95       	ret

00000686 <arm_y_linear>:
     686:	ef 92       	push	r14
     688:	ff 92       	push	r15
 
 //Function to obtain linear motion in y for 5 cm
 void arm_y_linear()
  {
     68a:	0f 93       	push	r16
     68c:	1f 93       	push	r17
     68e:	cf 93       	push	r28
     690:	df 93       	push	r29
	degrees1=angle_fix(-44, -65, 140, 1);
     692:	21 e0       	ldi	r18, 0x01	; 1
     694:	30 e0       	ldi	r19, 0x00	; 0
     696:	4c e8       	ldi	r20, 0x8C	; 140
     698:	50 e0       	ldi	r21, 0x00	; 0
     69a:	6f eb       	ldi	r22, 0xBF	; 191
     69c:	7f ef       	ldi	r23, 0xFF	; 255
     69e:	84 ed       	ldi	r24, 0xD4	; 212
     6a0:	9f ef       	ldi	r25, 0xFF	; 255
     6a2:	a5 dd       	rcall	.-1206   	; 0x1ee <angle_fix>
     6a4:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <degrees1+0x1>
     6a8:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <degrees1>
	degrees2=angle_fix(-44, -65, 140, 2);
     6ac:	22 e0       	ldi	r18, 0x02	; 2
     6ae:	30 e0       	ldi	r19, 0x00	; 0
     6b0:	4c e8       	ldi	r20, 0x8C	; 140
     6b2:	50 e0       	ldi	r21, 0x00	; 0
     6b4:	6f eb       	ldi	r22, 0xBF	; 191
     6b6:	7f ef       	ldi	r23, 0xFF	; 255
     6b8:	84 ed       	ldi	r24, 0xD4	; 212
     6ba:	9f ef       	ldi	r25, 0xFF	; 255
     6bc:	98 dd       	rcall	.-1232   	; 0x1ee <angle_fix>
     6be:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <degrees2+0x1>
     6c2:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <degrees2>
	degrees3=angle_fix(-44, -65, 140, 3);
     6c6:	23 e0       	ldi	r18, 0x03	; 3
     6c8:	30 e0       	ldi	r19, 0x00	; 0
     6ca:	4c e8       	ldi	r20, 0x8C	; 140
     6cc:	50 e0       	ldi	r21, 0x00	; 0
     6ce:	6f eb       	ldi	r22, 0xBF	; 191
     6d0:	7f ef       	ldi	r23, 0xFF	; 255
     6d2:	84 ed       	ldi	r24, 0xD4	; 212
     6d4:	9f ef       	ldi	r25, 0xFF	; 255
     6d6:	8b dd       	rcall	.-1258   	; 0x1ee <angle_fix>
     6d8:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <_edata+0x1>
     6dc:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <_edata>

	servo_1(degrees1);
     6e0:	0f 2e       	mov	r0, r31
     6e2:	f4 e0       	ldi	r31, 0x04	; 4
     6e4:	ef 2e       	mov	r14, r31
     6e6:	f2 e0       	ldi	r31, 0x02	; 2
     6e8:	ff 2e       	mov	r15, r31
     6ea:	f0 2d       	mov	r31, r0
     6ec:	f7 01       	movw	r30, r14
     6ee:	80 81       	ld	r24, Z
     6f0:	ba d6       	rcall	.+3444   	; 0x1466 <servo_1>
	servo_2(degrees2+20);
     6f2:	02 e0       	ldi	r16, 0x02	; 2
     6f4:	12 e0       	ldi	r17, 0x02	; 2
     6f6:	f8 01       	movw	r30, r16
     6f8:	80 81       	ld	r24, Z
     6fa:	8c 5e       	subi	r24, 0xEC	; 236
     6fc:	c9 d6       	rcall	.+3474   	; 0x1490 <servo_2>
	servo_3(degrees3-20);
     6fe:	c0 e0       	ldi	r28, 0x00	; 0
     700:	d2 e0       	ldi	r29, 0x02	; 2
     702:	88 81       	ld	r24, Y
     704:	84 51       	subi	r24, 0x14	; 20
     706:	d9 d6       	rcall	.+3506   	; 0x14ba <servo_3>
     708:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <degrees1>

	lcd_print(1, 1, degrees1, 3);
     70c:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <degrees1+0x1>
     710:	23 e0       	ldi	r18, 0x03	; 3
     712:	30 e0       	ldi	r19, 0x00	; 0
     714:	61 e0       	ldi	r22, 0x01	; 1
     716:	81 e0       	ldi	r24, 0x01	; 1
     718:	f4 d4       	rcall	.+2536   	; 0x1102 <lcd_print>
     71a:	40 91 02 02 	lds	r20, 0x0202	; 0x800202 <degrees2>
	lcd_print(1, 5, degrees2, 3);
     71e:	50 91 03 02 	lds	r21, 0x0203	; 0x800203 <degrees2+0x1>
     722:	23 e0       	ldi	r18, 0x03	; 3
     724:	30 e0       	ldi	r19, 0x00	; 0
     726:	65 e0       	ldi	r22, 0x05	; 5
     728:	81 e0       	ldi	r24, 0x01	; 1
     72a:	eb d4       	rcall	.+2518   	; 0x1102 <lcd_print>
     72c:	40 91 00 02 	lds	r20, 0x0200	; 0x800200 <_edata>
	lcd_print(1, 9, degrees3, 3);
     730:	50 91 01 02 	lds	r21, 0x0201	; 0x800201 <_edata+0x1>
     734:	23 e0       	ldi	r18, 0x03	; 3
     736:	30 e0       	ldi	r19, 0x00	; 0
     738:	69 e0       	ldi	r22, 0x09	; 9
     73a:	81 e0       	ldi	r24, 0x01	; 1
     73c:	e2 d4       	rcall	.+2500   	; 0x1102 <lcd_print>
     73e:	ff ef       	ldi	r31, 0xFF	; 255
     740:	2f e7       	ldi	r18, 0x7F	; 127
     742:	84 e0       	ldi	r24, 0x04	; 4
     744:	f1 50       	subi	r31, 0x01	; 1
     746:	20 40       	sbci	r18, 0x00	; 0
     748:	80 40       	sbci	r24, 0x00	; 0
     74a:	e1 f7       	brne	.-8      	; 0x744 <arm_y_linear+0xbe>
     74c:	00 c0       	rjmp	.+0      	; 0x74e <arm_y_linear+0xc8>
     74e:	00 00       	nop
			
	_delay_ms(100);

	degrees1=angle_fix(-38, -66, 143, 1);
     750:	21 e0       	ldi	r18, 0x01	; 1
     752:	30 e0       	ldi	r19, 0x00	; 0
     754:	4f e8       	ldi	r20, 0x8F	; 143
     756:	50 e0       	ldi	r21, 0x00	; 0
     758:	6e eb       	ldi	r22, 0xBE	; 190
     75a:	7f ef       	ldi	r23, 0xFF	; 255
     75c:	8a ed       	ldi	r24, 0xDA	; 218
     75e:	9f ef       	ldi	r25, 0xFF	; 255
     760:	46 dd       	rcall	.-1396   	; 0x1ee <angle_fix>
     762:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <degrees1+0x1>
     766:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <degrees1>
	degrees2=angle_fix(-38, -66, 143, 2);
     76a:	22 e0       	ldi	r18, 0x02	; 2
     76c:	30 e0       	ldi	r19, 0x00	; 0
     76e:	4f e8       	ldi	r20, 0x8F	; 143
     770:	50 e0       	ldi	r21, 0x00	; 0
     772:	6e eb       	ldi	r22, 0xBE	; 190
     774:	7f ef       	ldi	r23, 0xFF	; 255
     776:	8a ed       	ldi	r24, 0xDA	; 218
     778:	9f ef       	ldi	r25, 0xFF	; 255
     77a:	39 dd       	rcall	.-1422   	; 0x1ee <angle_fix>
     77c:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <degrees2+0x1>
     780:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <degrees2>
	degrees3=angle_fix(-38, -66, 143, 3);
     784:	23 e0       	ldi	r18, 0x03	; 3
     786:	30 e0       	ldi	r19, 0x00	; 0
     788:	4f e8       	ldi	r20, 0x8F	; 143
     78a:	50 e0       	ldi	r21, 0x00	; 0
     78c:	6e eb       	ldi	r22, 0xBE	; 190
     78e:	7f ef       	ldi	r23, 0xFF	; 255
     790:	8a ed       	ldi	r24, 0xDA	; 218
     792:	9f ef       	ldi	r25, 0xFF	; 255
     794:	2c dd       	rcall	.-1448   	; 0x1ee <angle_fix>
     796:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <_edata+0x1>

	servo_1(degrees1);
     79a:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <_edata>
     79e:	f7 01       	movw	r30, r14
     7a0:	80 81       	ld	r24, Z
	servo_2(degrees2+20);
     7a2:	61 d6       	rcall	.+3266   	; 0x1466 <servo_1>
     7a4:	f8 01       	movw	r30, r16
     7a6:	80 81       	ld	r24, Z
     7a8:	8c 5e       	subi	r24, 0xEC	; 236
	servo_3(degrees3-20);
     7aa:	72 d6       	rcall	.+3300   	; 0x1490 <servo_2>
     7ac:	88 81       	ld	r24, Y
     7ae:	84 51       	subi	r24, 0x14	; 20
     7b0:	84 d6       	rcall	.+3336   	; 0x14ba <servo_3>

	lcd_print(1, 1, degrees1, 3);
     7b2:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <degrees1>
     7b6:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <degrees1+0x1>
     7ba:	23 e0       	ldi	r18, 0x03	; 3
     7bc:	30 e0       	ldi	r19, 0x00	; 0
     7be:	61 e0       	ldi	r22, 0x01	; 1
     7c0:	81 e0       	ldi	r24, 0x01	; 1
     7c2:	9f d4       	rcall	.+2366   	; 0x1102 <lcd_print>
	lcd_print(1, 5, degrees2, 3);
     7c4:	40 91 02 02 	lds	r20, 0x0202	; 0x800202 <degrees2>
     7c8:	50 91 03 02 	lds	r21, 0x0203	; 0x800203 <degrees2+0x1>
     7cc:	23 e0       	ldi	r18, 0x03	; 3
     7ce:	30 e0       	ldi	r19, 0x00	; 0
     7d0:	65 e0       	ldi	r22, 0x05	; 5
     7d2:	81 e0       	ldi	r24, 0x01	; 1
     7d4:	96 d4       	rcall	.+2348   	; 0x1102 <lcd_print>
	lcd_print(1, 9, degrees3, 3);
     7d6:	40 91 00 02 	lds	r20, 0x0200	; 0x800200 <_edata>
     7da:	50 91 01 02 	lds	r21, 0x0201	; 0x800201 <_edata+0x1>
     7de:	23 e0       	ldi	r18, 0x03	; 3
     7e0:	30 e0       	ldi	r19, 0x00	; 0
     7e2:	69 e0       	ldi	r22, 0x09	; 9
     7e4:	81 e0       	ldi	r24, 0x01	; 1
     7e6:	8d d4       	rcall	.+2330   	; 0x1102 <lcd_print>
     7e8:	ff ef       	ldi	r31, 0xFF	; 255
     7ea:	2f e7       	ldi	r18, 0x7F	; 127
     7ec:	84 e0       	ldi	r24, 0x04	; 4
     7ee:	f1 50       	subi	r31, 0x01	; 1
     7f0:	20 40       	sbci	r18, 0x00	; 0
     7f2:	80 40       	sbci	r24, 0x00	; 0
     7f4:	e1 f7       	brne	.-8      	; 0x7ee <arm_y_linear+0x168>
     7f6:	00 c0       	rjmp	.+0      	; 0x7f8 <arm_y_linear+0x172>
     7f8:	00 00       	nop
	
	_delay_ms(100);
	
	degrees1=angle_fix(-31, -67, 145, 1);
     7fa:	21 e0       	ldi	r18, 0x01	; 1
     7fc:	30 e0       	ldi	r19, 0x00	; 0
     7fe:	41 e9       	ldi	r20, 0x91	; 145
     800:	50 e0       	ldi	r21, 0x00	; 0
     802:	6d eb       	ldi	r22, 0xBD	; 189
     804:	7f ef       	ldi	r23, 0xFF	; 255
     806:	81 ee       	ldi	r24, 0xE1	; 225
     808:	9f ef       	ldi	r25, 0xFF	; 255
     80a:	f1 dc       	rcall	.-1566   	; 0x1ee <angle_fix>
     80c:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <degrees1+0x1>
     810:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <degrees1>
	degrees2=angle_fix(-31, -67, 145, 2);
     814:	22 e0       	ldi	r18, 0x02	; 2
     816:	30 e0       	ldi	r19, 0x00	; 0
     818:	41 e9       	ldi	r20, 0x91	; 145
     81a:	50 e0       	ldi	r21, 0x00	; 0
     81c:	6d eb       	ldi	r22, 0xBD	; 189
     81e:	7f ef       	ldi	r23, 0xFF	; 255
     820:	81 ee       	ldi	r24, 0xE1	; 225
     822:	9f ef       	ldi	r25, 0xFF	; 255
     824:	e4 dc       	rcall	.-1592   	; 0x1ee <angle_fix>
     826:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <degrees2+0x1>
     82a:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <degrees2>
	degrees3=angle_fix(-31, -67, 145, 3);
     82e:	23 e0       	ldi	r18, 0x03	; 3
     830:	30 e0       	ldi	r19, 0x00	; 0
     832:	41 e9       	ldi	r20, 0x91	; 145
     834:	50 e0       	ldi	r21, 0x00	; 0
     836:	6d eb       	ldi	r22, 0xBD	; 189
     838:	7f ef       	ldi	r23, 0xFF	; 255
     83a:	81 ee       	ldi	r24, 0xE1	; 225
     83c:	9f ef       	ldi	r25, 0xFF	; 255
     83e:	d7 dc       	rcall	.-1618   	; 0x1ee <angle_fix>
     840:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <_edata+0x1>

	servo_1(degrees1);
     844:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <_edata>
     848:	f7 01       	movw	r30, r14
     84a:	80 81       	ld	r24, Z
	servo_2(degrees2+20);
     84c:	0c d6       	rcall	.+3096   	; 0x1466 <servo_1>
     84e:	f8 01       	movw	r30, r16
     850:	80 81       	ld	r24, Z
     852:	8c 5e       	subi	r24, 0xEC	; 236
	servo_3(degrees3-20);
     854:	1d d6       	rcall	.+3130   	; 0x1490 <servo_2>
     856:	88 81       	ld	r24, Y
     858:	84 51       	subi	r24, 0x14	; 20
     85a:	2f d6       	rcall	.+3166   	; 0x14ba <servo_3>

	lcd_print(1, 1, degrees1, 3);
     85c:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <degrees1>
     860:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <degrees1+0x1>
     864:	23 e0       	ldi	r18, 0x03	; 3
     866:	30 e0       	ldi	r19, 0x00	; 0
     868:	61 e0       	ldi	r22, 0x01	; 1
     86a:	81 e0       	ldi	r24, 0x01	; 1
     86c:	4a d4       	rcall	.+2196   	; 0x1102 <lcd_print>
	lcd_print(1, 5, degrees2, 3);
     86e:	40 91 02 02 	lds	r20, 0x0202	; 0x800202 <degrees2>
     872:	50 91 03 02 	lds	r21, 0x0203	; 0x800203 <degrees2+0x1>
     876:	23 e0       	ldi	r18, 0x03	; 3
     878:	30 e0       	ldi	r19, 0x00	; 0
     87a:	65 e0       	ldi	r22, 0x05	; 5
     87c:	81 e0       	ldi	r24, 0x01	; 1
     87e:	41 d4       	rcall	.+2178   	; 0x1102 <lcd_print>
     880:	40 91 00 02 	lds	r20, 0x0200	; 0x800200 <_edata>
	lcd_print(1, 9, degrees3, 3);
     884:	50 91 01 02 	lds	r21, 0x0201	; 0x800201 <_edata+0x1>
     888:	23 e0       	ldi	r18, 0x03	; 3
     88a:	30 e0       	ldi	r19, 0x00	; 0
     88c:	69 e0       	ldi	r22, 0x09	; 9
     88e:	81 e0       	ldi	r24, 0x01	; 1
     890:	38 d4       	rcall	.+2160   	; 0x1102 <lcd_print>
     892:	ff ef       	ldi	r31, 0xFF	; 255
     894:	2f e7       	ldi	r18, 0x7F	; 127
     896:	84 e0       	ldi	r24, 0x04	; 4
     898:	f1 50       	subi	r31, 0x01	; 1
     89a:	20 40       	sbci	r18, 0x00	; 0
     89c:	80 40       	sbci	r24, 0x00	; 0
     89e:	e1 f7       	brne	.-8      	; 0x898 <arm_y_linear+0x212>
     8a0:	00 c0       	rjmp	.+0      	; 0x8a2 <arm_y_linear+0x21c>
     8a2:	00 00       	nop
	
	_delay_ms(100);
	
	degrees1=angle_fix(-23, -67, 145, 1);
     8a4:	21 e0       	ldi	r18, 0x01	; 1
     8a6:	30 e0       	ldi	r19, 0x00	; 0
     8a8:	41 e9       	ldi	r20, 0x91	; 145
     8aa:	50 e0       	ldi	r21, 0x00	; 0
     8ac:	6d eb       	ldi	r22, 0xBD	; 189
     8ae:	7f ef       	ldi	r23, 0xFF	; 255
     8b0:	89 ee       	ldi	r24, 0xE9	; 233
     8b2:	9f ef       	ldi	r25, 0xFF	; 255
     8b4:	9c dc       	rcall	.-1736   	; 0x1ee <angle_fix>
     8b6:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <degrees1+0x1>
     8ba:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <degrees1>
	degrees2=angle_fix(-23, -67, 145, 2);
     8be:	22 e0       	ldi	r18, 0x02	; 2
     8c0:	30 e0       	ldi	r19, 0x00	; 0
     8c2:	41 e9       	ldi	r20, 0x91	; 145
     8c4:	50 e0       	ldi	r21, 0x00	; 0
     8c6:	6d eb       	ldi	r22, 0xBD	; 189
     8c8:	7f ef       	ldi	r23, 0xFF	; 255
     8ca:	89 ee       	ldi	r24, 0xE9	; 233
     8cc:	9f ef       	ldi	r25, 0xFF	; 255
     8ce:	8f dc       	rcall	.-1762   	; 0x1ee <angle_fix>
     8d0:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <degrees2+0x1>
	degrees3=angle_fix(-23, -67, 145, 3);
     8d4:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <degrees2>
     8d8:	23 e0       	ldi	r18, 0x03	; 3
     8da:	30 e0       	ldi	r19, 0x00	; 0
     8dc:	41 e9       	ldi	r20, 0x91	; 145
     8de:	50 e0       	ldi	r21, 0x00	; 0
     8e0:	6d eb       	ldi	r22, 0xBD	; 189
     8e2:	7f ef       	ldi	r23, 0xFF	; 255
     8e4:	89 ee       	ldi	r24, 0xE9	; 233
     8e6:	9f ef       	ldi	r25, 0xFF	; 255
     8e8:	82 dc       	rcall	.-1788   	; 0x1ee <angle_fix>
     8ea:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <_edata+0x1>
	
	servo_1(degrees1);
     8ee:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <_edata>
     8f2:	f7 01       	movw	r30, r14
	servo_2(degrees2+20);
     8f4:	80 81       	ld	r24, Z
     8f6:	b7 d5       	rcall	.+2926   	; 0x1466 <servo_1>
     8f8:	f8 01       	movw	r30, r16
     8fa:	80 81       	ld	r24, Z
	servo_3(degrees3-20);
     8fc:	8c 5e       	subi	r24, 0xEC	; 236
     8fe:	c8 d5       	rcall	.+2960   	; 0x1490 <servo_2>
     900:	88 81       	ld	r24, Y
     902:	84 51       	subi	r24, 0x14	; 20

	lcd_print(1, 1, degrees1, 3);
     904:	da d5       	rcall	.+2996   	; 0x14ba <servo_3>
     906:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <degrees1>
     90a:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <degrees1+0x1>
     90e:	23 e0       	ldi	r18, 0x03	; 3
     910:	30 e0       	ldi	r19, 0x00	; 0
     912:	61 e0       	ldi	r22, 0x01	; 1
     914:	81 e0       	ldi	r24, 0x01	; 1
     916:	f5 d3       	rcall	.+2026   	; 0x1102 <lcd_print>
	lcd_print(1, 5, degrees2, 3);
     918:	40 91 02 02 	lds	r20, 0x0202	; 0x800202 <degrees2>
     91c:	50 91 03 02 	lds	r21, 0x0203	; 0x800203 <degrees2+0x1>
     920:	23 e0       	ldi	r18, 0x03	; 3
     922:	30 e0       	ldi	r19, 0x00	; 0
     924:	65 e0       	ldi	r22, 0x05	; 5
     926:	81 e0       	ldi	r24, 0x01	; 1
     928:	ec d3       	rcall	.+2008   	; 0x1102 <lcd_print>
	lcd_print(1, 9, degrees3, 3);
     92a:	40 91 00 02 	lds	r20, 0x0200	; 0x800200 <_edata>
     92e:	50 91 01 02 	lds	r21, 0x0201	; 0x800201 <_edata+0x1>
     932:	23 e0       	ldi	r18, 0x03	; 3
     934:	30 e0       	ldi	r19, 0x00	; 0
     936:	69 e0       	ldi	r22, 0x09	; 9
     938:	81 e0       	ldi	r24, 0x01	; 1
     93a:	e3 d3       	rcall	.+1990   	; 0x1102 <lcd_print>
     93c:	ff ef       	ldi	r31, 0xFF	; 255
     93e:	2f e7       	ldi	r18, 0x7F	; 127
     940:	84 e0       	ldi	r24, 0x04	; 4
     942:	f1 50       	subi	r31, 0x01	; 1
     944:	20 40       	sbci	r18, 0x00	; 0
     946:	80 40       	sbci	r24, 0x00	; 0
     948:	e1 f7       	brne	.-8      	; 0x942 <arm_y_linear+0x2bc>
     94a:	00 c0       	rjmp	.+0      	; 0x94c <arm_y_linear+0x2c6>
	
	_delay_ms(100);
	
	degrees1=angle_fix(-14, -67, 145, 1);
     94c:	00 00       	nop
     94e:	21 e0       	ldi	r18, 0x01	; 1
     950:	30 e0       	ldi	r19, 0x00	; 0
     952:	41 e9       	ldi	r20, 0x91	; 145
     954:	50 e0       	ldi	r21, 0x00	; 0
     956:	6d eb       	ldi	r22, 0xBD	; 189
     958:	7f ef       	ldi	r23, 0xFF	; 255
     95a:	82 ef       	ldi	r24, 0xF2	; 242
     95c:	9f ef       	ldi	r25, 0xFF	; 255
     95e:	47 dc       	rcall	.-1906   	; 0x1ee <angle_fix>
     960:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <degrees1+0x1>
	degrees2=angle_fix(-14, -67, 145, 2);
     964:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <degrees1>
     968:	22 e0       	ldi	r18, 0x02	; 2
     96a:	30 e0       	ldi	r19, 0x00	; 0
     96c:	41 e9       	ldi	r20, 0x91	; 145
     96e:	50 e0       	ldi	r21, 0x00	; 0
     970:	6d eb       	ldi	r22, 0xBD	; 189
     972:	7f ef       	ldi	r23, 0xFF	; 255
     974:	82 ef       	ldi	r24, 0xF2	; 242
     976:	9f ef       	ldi	r25, 0xFF	; 255
     978:	3a dc       	rcall	.-1932   	; 0x1ee <angle_fix>
     97a:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <degrees2+0x1>
	degrees3=angle_fix(-14, -67, 145, 3);
     97e:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <degrees2>
     982:	23 e0       	ldi	r18, 0x03	; 3
     984:	30 e0       	ldi	r19, 0x00	; 0
     986:	41 e9       	ldi	r20, 0x91	; 145
     988:	50 e0       	ldi	r21, 0x00	; 0
     98a:	6d eb       	ldi	r22, 0xBD	; 189
     98c:	7f ef       	ldi	r23, 0xFF	; 255
     98e:	82 ef       	ldi	r24, 0xF2	; 242
     990:	9f ef       	ldi	r25, 0xFF	; 255
     992:	2d dc       	rcall	.-1958   	; 0x1ee <angle_fix>
     994:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <_edata+0x1>
	
	servo_1(degrees1);
     998:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <_edata>
     99c:	f7 01       	movw	r30, r14
	servo_2(degrees2+20);
     99e:	80 81       	ld	r24, Z
     9a0:	62 d5       	rcall	.+2756   	; 0x1466 <servo_1>
     9a2:	f8 01       	movw	r30, r16
     9a4:	80 81       	ld	r24, Z
     9a6:	8c 5e       	subi	r24, 0xEC	; 236
	servo_3(degrees3-20);
     9a8:	73 d5       	rcall	.+2790   	; 0x1490 <servo_2>
     9aa:	88 81       	ld	r24, Y
     9ac:	84 51       	subi	r24, 0x14	; 20
     9ae:	85 d5       	rcall	.+2826   	; 0x14ba <servo_3>

	lcd_print(1, 1, degrees1, 3);
     9b0:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <degrees1>
     9b4:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <degrees1+0x1>
     9b8:	23 e0       	ldi	r18, 0x03	; 3
     9ba:	30 e0       	ldi	r19, 0x00	; 0
     9bc:	61 e0       	ldi	r22, 0x01	; 1
     9be:	81 e0       	ldi	r24, 0x01	; 1
     9c0:	a0 d3       	rcall	.+1856   	; 0x1102 <lcd_print>
	lcd_print(1, 5, degrees2, 3);
     9c2:	40 91 02 02 	lds	r20, 0x0202	; 0x800202 <degrees2>
     9c6:	50 91 03 02 	lds	r21, 0x0203	; 0x800203 <degrees2+0x1>
     9ca:	23 e0       	ldi	r18, 0x03	; 3
     9cc:	30 e0       	ldi	r19, 0x00	; 0
     9ce:	65 e0       	ldi	r22, 0x05	; 5
     9d0:	81 e0       	ldi	r24, 0x01	; 1
     9d2:	97 d3       	rcall	.+1838   	; 0x1102 <lcd_print>
	lcd_print(1, 9, degrees3, 3);
     9d4:	40 91 00 02 	lds	r20, 0x0200	; 0x800200 <_edata>
     9d8:	50 91 01 02 	lds	r21, 0x0201	; 0x800201 <_edata+0x1>
     9dc:	23 e0       	ldi	r18, 0x03	; 3
     9de:	30 e0       	ldi	r19, 0x00	; 0
     9e0:	69 e0       	ldi	r22, 0x09	; 9
     9e2:	81 e0       	ldi	r24, 0x01	; 1
     9e4:	8e d3       	rcall	.+1820   	; 0x1102 <lcd_print>
     9e6:	ff ef       	ldi	r31, 0xFF	; 255
     9e8:	2f e7       	ldi	r18, 0x7F	; 127
     9ea:	84 e0       	ldi	r24, 0x04	; 4
     9ec:	f1 50       	subi	r31, 0x01	; 1
     9ee:	20 40       	sbci	r18, 0x00	; 0
     9f0:	80 40       	sbci	r24, 0x00	; 0
     9f2:	e1 f7       	brne	.-8      	; 0x9ec <arm_y_linear+0x366>
     9f4:	00 c0       	rjmp	.+0      	; 0x9f6 <arm_y_linear+0x370>
	
	_delay_ms(100);
	
	degrees1=angle_fix(-6, -66, 143, 1);
     9f6:	00 00       	nop
     9f8:	21 e0       	ldi	r18, 0x01	; 1
     9fa:	30 e0       	ldi	r19, 0x00	; 0
     9fc:	4f e8       	ldi	r20, 0x8F	; 143
     9fe:	50 e0       	ldi	r21, 0x00	; 0
     a00:	6e eb       	ldi	r22, 0xBE	; 190
     a02:	7f ef       	ldi	r23, 0xFF	; 255
     a04:	8a ef       	ldi	r24, 0xFA	; 250
     a06:	9f ef       	ldi	r25, 0xFF	; 255
     a08:	f2 db       	rcall	.-2076   	; 0x1ee <angle_fix>
     a0a:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <degrees1+0x1>
	degrees2=angle_fix(-6, -66, 143, 2);
     a0e:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <degrees1>
     a12:	22 e0       	ldi	r18, 0x02	; 2
     a14:	30 e0       	ldi	r19, 0x00	; 0
     a16:	4f e8       	ldi	r20, 0x8F	; 143
     a18:	50 e0       	ldi	r21, 0x00	; 0
     a1a:	6e eb       	ldi	r22, 0xBE	; 190
     a1c:	7f ef       	ldi	r23, 0xFF	; 255
     a1e:	8a ef       	ldi	r24, 0xFA	; 250
     a20:	9f ef       	ldi	r25, 0xFF	; 255
     a22:	e5 db       	rcall	.-2102   	; 0x1ee <angle_fix>
     a24:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <degrees2+0x1>
	degrees3=angle_fix(-6, -66, 143, 3);
     a28:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <degrees2>
     a2c:	23 e0       	ldi	r18, 0x03	; 3
     a2e:	30 e0       	ldi	r19, 0x00	; 0
     a30:	4f e8       	ldi	r20, 0x8F	; 143
     a32:	50 e0       	ldi	r21, 0x00	; 0
     a34:	6e eb       	ldi	r22, 0xBE	; 190
     a36:	7f ef       	ldi	r23, 0xFF	; 255
     a38:	8a ef       	ldi	r24, 0xFA	; 250
     a3a:	9f ef       	ldi	r25, 0xFF	; 255
     a3c:	d8 db       	rcall	.-2128   	; 0x1ee <angle_fix>
     a3e:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <_edata+0x1>

	servo_1(degrees1);
     a42:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <_edata>
     a46:	f7 01       	movw	r30, r14
     a48:	80 81       	ld	r24, Z
	servo_2(degrees2+20);
     a4a:	0d d5       	rcall	.+2586   	; 0x1466 <servo_1>
     a4c:	f8 01       	movw	r30, r16
     a4e:	80 81       	ld	r24, Z
     a50:	8c 5e       	subi	r24, 0xEC	; 236
	servo_3(degrees3-20);
     a52:	1e d5       	rcall	.+2620   	; 0x1490 <servo_2>
     a54:	88 81       	ld	r24, Y
     a56:	84 51       	subi	r24, 0x14	; 20
     a58:	30 d5       	rcall	.+2656   	; 0x14ba <servo_3>

	lcd_print(1, 1, degrees1, 3);
     a5a:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <degrees1>
     a5e:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <degrees1+0x1>
     a62:	23 e0       	ldi	r18, 0x03	; 3
     a64:	30 e0       	ldi	r19, 0x00	; 0
     a66:	61 e0       	ldi	r22, 0x01	; 1
     a68:	81 e0       	ldi	r24, 0x01	; 1
     a6a:	4b d3       	rcall	.+1686   	; 0x1102 <lcd_print>
	lcd_print(1, 5, degrees2, 3);
     a6c:	40 91 02 02 	lds	r20, 0x0202	; 0x800202 <degrees2>
     a70:	50 91 03 02 	lds	r21, 0x0203	; 0x800203 <degrees2+0x1>
     a74:	23 e0       	ldi	r18, 0x03	; 3
     a76:	30 e0       	ldi	r19, 0x00	; 0
     a78:	65 e0       	ldi	r22, 0x05	; 5
     a7a:	81 e0       	ldi	r24, 0x01	; 1
     a7c:	42 d3       	rcall	.+1668   	; 0x1102 <lcd_print>
	lcd_print(1, 9, degrees3, 3);
     a7e:	40 91 00 02 	lds	r20, 0x0200	; 0x800200 <_edata>
     a82:	50 91 01 02 	lds	r21, 0x0201	; 0x800201 <_edata+0x1>
     a86:	23 e0       	ldi	r18, 0x03	; 3
     a88:	30 e0       	ldi	r19, 0x00	; 0
     a8a:	69 e0       	ldi	r22, 0x09	; 9
     a8c:	81 e0       	ldi	r24, 0x01	; 1
     a8e:	39 d3       	rcall	.+1650   	; 0x1102 <lcd_print>
     a90:	ff ef       	ldi	r31, 0xFF	; 255
     a92:	2f e7       	ldi	r18, 0x7F	; 127
     a94:	84 e0       	ldi	r24, 0x04	; 4
     a96:	f1 50       	subi	r31, 0x01	; 1
     a98:	20 40       	sbci	r18, 0x00	; 0
     a9a:	80 40       	sbci	r24, 0x00	; 0
     a9c:	e1 f7       	brne	.-8      	; 0xa96 <arm_y_linear+0x410>
	
	_delay_ms(100);

	degrees1=angle_fix(2, -65, 140, 1);
     a9e:	00 c0       	rjmp	.+0      	; 0xaa0 <arm_y_linear+0x41a>
     aa0:	00 00       	nop
     aa2:	21 e0       	ldi	r18, 0x01	; 1
     aa4:	30 e0       	ldi	r19, 0x00	; 0
     aa6:	4c e8       	ldi	r20, 0x8C	; 140
     aa8:	50 e0       	ldi	r21, 0x00	; 0
     aaa:	6f eb       	ldi	r22, 0xBF	; 191
     aac:	7f ef       	ldi	r23, 0xFF	; 255
     aae:	82 e0       	ldi	r24, 0x02	; 2
     ab0:	90 e0       	ldi	r25, 0x00	; 0
     ab2:	9d db       	rcall	.-2246   	; 0x1ee <angle_fix>
     ab4:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <degrees1+0x1>
	degrees2=angle_fix(2, -65, 140, 2);
     ab8:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <degrees1>
     abc:	22 e0       	ldi	r18, 0x02	; 2
     abe:	30 e0       	ldi	r19, 0x00	; 0
     ac0:	4c e8       	ldi	r20, 0x8C	; 140
     ac2:	50 e0       	ldi	r21, 0x00	; 0
     ac4:	6f eb       	ldi	r22, 0xBF	; 191
     ac6:	7f ef       	ldi	r23, 0xFF	; 255
     ac8:	82 e0       	ldi	r24, 0x02	; 2
     aca:	90 e0       	ldi	r25, 0x00	; 0
     acc:	90 db       	rcall	.-2272   	; 0x1ee <angle_fix>
     ace:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <degrees2+0x1>
	degrees3=angle_fix(2, -65, 140, 3);
     ad2:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <degrees2>
     ad6:	23 e0       	ldi	r18, 0x03	; 3
     ad8:	30 e0       	ldi	r19, 0x00	; 0
     ada:	4c e8       	ldi	r20, 0x8C	; 140
     adc:	50 e0       	ldi	r21, 0x00	; 0
     ade:	6f eb       	ldi	r22, 0xBF	; 191
     ae0:	7f ef       	ldi	r23, 0xFF	; 255
     ae2:	82 e0       	ldi	r24, 0x02	; 2
     ae4:	90 e0       	ldi	r25, 0x00	; 0
     ae6:	83 db       	rcall	.-2298   	; 0x1ee <angle_fix>
     ae8:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <_edata+0x1>

	servo_1(degrees1);
     aec:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <_edata>
     af0:	f7 01       	movw	r30, r14
	servo_2(degrees2+20);
     af2:	80 81       	ld	r24, Z
     af4:	b8 d4       	rcall	.+2416   	; 0x1466 <servo_1>
     af6:	f8 01       	movw	r30, r16
     af8:	80 81       	ld	r24, Z
     afa:	8c 5e       	subi	r24, 0xEC	; 236
	servo_3(degrees3-20);
     afc:	c9 d4       	rcall	.+2450   	; 0x1490 <servo_2>
     afe:	88 81       	ld	r24, Y
     b00:	84 51       	subi	r24, 0x14	; 20

	lcd_print(1, 1, degrees1, 3);
     b02:	db d4       	rcall	.+2486   	; 0x14ba <servo_3>
     b04:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <degrees1>
     b08:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <degrees1+0x1>
     b0c:	23 e0       	ldi	r18, 0x03	; 3
     b0e:	30 e0       	ldi	r19, 0x00	; 0
     b10:	61 e0       	ldi	r22, 0x01	; 1
     b12:	81 e0       	ldi	r24, 0x01	; 1
     b14:	f6 d2       	rcall	.+1516   	; 0x1102 <lcd_print>
	lcd_print(1, 5, degrees2, 3);
     b16:	40 91 02 02 	lds	r20, 0x0202	; 0x800202 <degrees2>
     b1a:	50 91 03 02 	lds	r21, 0x0203	; 0x800203 <degrees2+0x1>
     b1e:	23 e0       	ldi	r18, 0x03	; 3
     b20:	30 e0       	ldi	r19, 0x00	; 0
     b22:	65 e0       	ldi	r22, 0x05	; 5
     b24:	81 e0       	ldi	r24, 0x01	; 1
	lcd_print(1, 9, degrees3, 3);
     b26:	ed d2       	rcall	.+1498   	; 0x1102 <lcd_print>
     b28:	40 91 00 02 	lds	r20, 0x0200	; 0x800200 <_edata>
     b2c:	50 91 01 02 	lds	r21, 0x0201	; 0x800201 <_edata+0x1>
     b30:	23 e0       	ldi	r18, 0x03	; 3
     b32:	30 e0       	ldi	r19, 0x00	; 0
     b34:	69 e0       	ldi	r22, 0x09	; 9
     b36:	81 e0       	ldi	r24, 0x01	; 1
     b38:	e4 d2       	rcall	.+1480   	; 0x1102 <lcd_print>
     b3a:	ff ef       	ldi	r31, 0xFF	; 255
     b3c:	2f e7       	ldi	r18, 0x7F	; 127
     b3e:	84 e0       	ldi	r24, 0x04	; 4
     b40:	f1 50       	subi	r31, 0x01	; 1
     b42:	20 40       	sbci	r18, 0x00	; 0
     b44:	80 40       	sbci	r24, 0x00	; 0
	
	_delay_ms(100);
	
	degrees1=angle_fix(-6, -66, 143, 1);
     b46:	e1 f7       	brne	.-8      	; 0xb40 <arm_y_linear+0x4ba>
     b48:	00 c0       	rjmp	.+0      	; 0xb4a <arm_y_linear+0x4c4>
     b4a:	00 00       	nop
     b4c:	21 e0       	ldi	r18, 0x01	; 1
     b4e:	30 e0       	ldi	r19, 0x00	; 0
     b50:	4f e8       	ldi	r20, 0x8F	; 143
     b52:	50 e0       	ldi	r21, 0x00	; 0
     b54:	6e eb       	ldi	r22, 0xBE	; 190
     b56:	7f ef       	ldi	r23, 0xFF	; 255
     b58:	8a ef       	ldi	r24, 0xFA	; 250
     b5a:	9f ef       	ldi	r25, 0xFF	; 255
     b5c:	48 db       	rcall	.-2416   	; 0x1ee <angle_fix>
	degrees2=angle_fix(-6, -66, 143, 2);
     b5e:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <degrees1+0x1>
     b62:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <degrees1>
     b66:	22 e0       	ldi	r18, 0x02	; 2
     b68:	30 e0       	ldi	r19, 0x00	; 0
     b6a:	4f e8       	ldi	r20, 0x8F	; 143
     b6c:	50 e0       	ldi	r21, 0x00	; 0
     b6e:	6e eb       	ldi	r22, 0xBE	; 190
     b70:	7f ef       	ldi	r23, 0xFF	; 255
     b72:	8a ef       	ldi	r24, 0xFA	; 250
     b74:	9f ef       	ldi	r25, 0xFF	; 255
     b76:	3b db       	rcall	.-2442   	; 0x1ee <angle_fix>
     b78:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <degrees2+0x1>
	degrees3=angle_fix(-6, -66, 143, 3);
     b7c:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <degrees2>
     b80:	23 e0       	ldi	r18, 0x03	; 3
     b82:	30 e0       	ldi	r19, 0x00	; 0
     b84:	4f e8       	ldi	r20, 0x8F	; 143
     b86:	50 e0       	ldi	r21, 0x00	; 0
     b88:	6e eb       	ldi	r22, 0xBE	; 190
     b8a:	7f ef       	ldi	r23, 0xFF	; 255
     b8c:	8a ef       	ldi	r24, 0xFA	; 250
     b8e:	9f ef       	ldi	r25, 0xFF	; 255
     b90:	2e db       	rcall	.-2468   	; 0x1ee <angle_fix>
     b92:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <_edata+0x1>

	servo_1(degrees1);
     b96:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <_edata>
	servo_2(degrees2+20);
     b9a:	f7 01       	movw	r30, r14
     b9c:	80 81       	ld	r24, Z
     b9e:	63 d4       	rcall	.+2246   	; 0x1466 <servo_1>
     ba0:	f8 01       	movw	r30, r16
     ba2:	80 81       	ld	r24, Z
	servo_3(degrees3-20);
     ba4:	8c 5e       	subi	r24, 0xEC	; 236
     ba6:	74 d4       	rcall	.+2280   	; 0x1490 <servo_2>
     ba8:	88 81       	ld	r24, Y
     baa:	84 51       	subi	r24, 0x14	; 20

	lcd_print(1, 1, degrees1, 3);
     bac:	86 d4       	rcall	.+2316   	; 0x14ba <servo_3>
     bae:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <degrees1>
     bb2:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <degrees1+0x1>
     bb6:	23 e0       	ldi	r18, 0x03	; 3
     bb8:	30 e0       	ldi	r19, 0x00	; 0
     bba:	61 e0       	ldi	r22, 0x01	; 1
	lcd_print(1, 5, degrees2, 3);
     bbc:	81 e0       	ldi	r24, 0x01	; 1
     bbe:	a1 d2       	rcall	.+1346   	; 0x1102 <lcd_print>
     bc0:	40 91 02 02 	lds	r20, 0x0202	; 0x800202 <degrees2>
     bc4:	50 91 03 02 	lds	r21, 0x0203	; 0x800203 <degrees2+0x1>
     bc8:	23 e0       	ldi	r18, 0x03	; 3
     bca:	30 e0       	ldi	r19, 0x00	; 0
	lcd_print(1, 9, degrees3, 3);
     bcc:	65 e0       	ldi	r22, 0x05	; 5
     bce:	81 e0       	ldi	r24, 0x01	; 1
     bd0:	98 d2       	rcall	.+1328   	; 0x1102 <lcd_print>
     bd2:	40 91 00 02 	lds	r20, 0x0200	; 0x800200 <_edata>
     bd6:	50 91 01 02 	lds	r21, 0x0201	; 0x800201 <_edata+0x1>
     bda:	23 e0       	ldi	r18, 0x03	; 3
     bdc:	30 e0       	ldi	r19, 0x00	; 0
     bde:	69 e0       	ldi	r22, 0x09	; 9
     be0:	81 e0       	ldi	r24, 0x01	; 1
     be2:	8f d2       	rcall	.+1310   	; 0x1102 <lcd_print>
     be4:	ff ef       	ldi	r31, 0xFF	; 255
     be6:	2f e7       	ldi	r18, 0x7F	; 127
     be8:	84 e0       	ldi	r24, 0x04	; 4
     bea:	f1 50       	subi	r31, 0x01	; 1
     bec:	20 40       	sbci	r18, 0x00	; 0
	
	_delay_ms(100);
	
	degrees1=angle_fix(-14, -67, 145, 1);
     bee:	80 40       	sbci	r24, 0x00	; 0
     bf0:	e1 f7       	brne	.-8      	; 0xbea <arm_y_linear+0x564>
     bf2:	00 c0       	rjmp	.+0      	; 0xbf4 <arm_y_linear+0x56e>
     bf4:	00 00       	nop
     bf6:	21 e0       	ldi	r18, 0x01	; 1
     bf8:	30 e0       	ldi	r19, 0x00	; 0
     bfa:	41 e9       	ldi	r20, 0x91	; 145
     bfc:	50 e0       	ldi	r21, 0x00	; 0
     bfe:	6d eb       	ldi	r22, 0xBD	; 189
     c00:	7f ef       	ldi	r23, 0xFF	; 255
     c02:	82 ef       	ldi	r24, 0xF2	; 242
     c04:	9f ef       	ldi	r25, 0xFF	; 255
     c06:	f3 da       	rcall	.-2586   	; 0x1ee <angle_fix>
	degrees2=angle_fix(-14, -67, 145, 2);
     c08:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <degrees1+0x1>
     c0c:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <degrees1>
     c10:	22 e0       	ldi	r18, 0x02	; 2
     c12:	30 e0       	ldi	r19, 0x00	; 0
     c14:	41 e9       	ldi	r20, 0x91	; 145
     c16:	50 e0       	ldi	r21, 0x00	; 0
     c18:	6d eb       	ldi	r22, 0xBD	; 189
     c1a:	7f ef       	ldi	r23, 0xFF	; 255
     c1c:	82 ef       	ldi	r24, 0xF2	; 242
     c1e:	9f ef       	ldi	r25, 0xFF	; 255
     c20:	e6 da       	rcall	.-2612   	; 0x1ee <angle_fix>
	degrees3=angle_fix(-14, -67, 145, 3);
     c22:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <degrees2+0x1>
     c26:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <degrees2>
     c2a:	23 e0       	ldi	r18, 0x03	; 3
     c2c:	30 e0       	ldi	r19, 0x00	; 0
     c2e:	41 e9       	ldi	r20, 0x91	; 145
     c30:	50 e0       	ldi	r21, 0x00	; 0
     c32:	6d eb       	ldi	r22, 0xBD	; 189
     c34:	7f ef       	ldi	r23, 0xFF	; 255
     c36:	82 ef       	ldi	r24, 0xF2	; 242
     c38:	9f ef       	ldi	r25, 0xFF	; 255
     c3a:	d9 da       	rcall	.-2638   	; 0x1ee <angle_fix>
	
	servo_1(degrees1);
     c3c:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <_edata+0x1>
     c40:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <_edata>
	servo_2(degrees2+20);
     c44:	f7 01       	movw	r30, r14
     c46:	80 81       	ld	r24, Z
     c48:	0e d4       	rcall	.+2076   	; 0x1466 <servo_1>
     c4a:	f8 01       	movw	r30, r16
	servo_3(degrees3-20);
     c4c:	80 81       	ld	r24, Z
     c4e:	8c 5e       	subi	r24, 0xEC	; 236
     c50:	1f d4       	rcall	.+2110   	; 0x1490 <servo_2>

	lcd_print(1, 1, degrees1, 3);
     c52:	88 81       	ld	r24, Y
     c54:	84 51       	subi	r24, 0x14	; 20
     c56:	31 d4       	rcall	.+2146   	; 0x14ba <servo_3>
     c58:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <degrees1>
     c5c:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <degrees1+0x1>
     c60:	23 e0       	ldi	r18, 0x03	; 3
	lcd_print(1, 5, degrees2, 3);
     c62:	30 e0       	ldi	r19, 0x00	; 0
     c64:	61 e0       	ldi	r22, 0x01	; 1
     c66:	81 e0       	ldi	r24, 0x01	; 1
     c68:	4c d2       	rcall	.+1176   	; 0x1102 <lcd_print>
     c6a:	40 91 02 02 	lds	r20, 0x0202	; 0x800202 <degrees2>
     c6e:	50 91 03 02 	lds	r21, 0x0203	; 0x800203 <degrees2+0x1>
     c72:	23 e0       	ldi	r18, 0x03	; 3
	lcd_print(1, 9, degrees3, 3);
     c74:	30 e0       	ldi	r19, 0x00	; 0
     c76:	65 e0       	ldi	r22, 0x05	; 5
     c78:	81 e0       	ldi	r24, 0x01	; 1
     c7a:	43 d2       	rcall	.+1158   	; 0x1102 <lcd_print>
     c7c:	40 91 00 02 	lds	r20, 0x0200	; 0x800200 <_edata>
     c80:	50 91 01 02 	lds	r21, 0x0201	; 0x800201 <_edata+0x1>
     c84:	23 e0       	ldi	r18, 0x03	; 3
     c86:	30 e0       	ldi	r19, 0x00	; 0
     c88:	69 e0       	ldi	r22, 0x09	; 9
     c8a:	81 e0       	ldi	r24, 0x01	; 1
     c8c:	3a d2       	rcall	.+1140   	; 0x1102 <lcd_print>
     c8e:	ff ef       	ldi	r31, 0xFF	; 255
     c90:	2f e7       	ldi	r18, 0x7F	; 127
     c92:	84 e0       	ldi	r24, 0x04	; 4
     c94:	f1 50       	subi	r31, 0x01	; 1
	
	_delay_ms(100);
	
	degrees1=angle_fix(-23, -67, 145, 1);
     c96:	20 40       	sbci	r18, 0x00	; 0
     c98:	80 40       	sbci	r24, 0x00	; 0
     c9a:	e1 f7       	brne	.-8      	; 0xc94 <arm_y_linear+0x60e>
     c9c:	00 c0       	rjmp	.+0      	; 0xc9e <arm_y_linear+0x618>
     c9e:	00 00       	nop
     ca0:	21 e0       	ldi	r18, 0x01	; 1
     ca2:	30 e0       	ldi	r19, 0x00	; 0
     ca4:	41 e9       	ldi	r20, 0x91	; 145
     ca6:	50 e0       	ldi	r21, 0x00	; 0
     ca8:	6d eb       	ldi	r22, 0xBD	; 189
     caa:	7f ef       	ldi	r23, 0xFF	; 255
     cac:	89 ee       	ldi	r24, 0xE9	; 233
     cae:	9f ef       	ldi	r25, 0xFF	; 255
	degrees2=angle_fix(-23, -67, 145, 2);
     cb0:	9e da       	rcall	.-2756   	; 0x1ee <angle_fix>
     cb2:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <degrees1+0x1>
     cb6:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <degrees1>
     cba:	22 e0       	ldi	r18, 0x02	; 2
     cbc:	30 e0       	ldi	r19, 0x00	; 0
     cbe:	41 e9       	ldi	r20, 0x91	; 145
     cc0:	50 e0       	ldi	r21, 0x00	; 0
     cc2:	6d eb       	ldi	r22, 0xBD	; 189
     cc4:	7f ef       	ldi	r23, 0xFF	; 255
     cc6:	89 ee       	ldi	r24, 0xE9	; 233
     cc8:	9f ef       	ldi	r25, 0xFF	; 255
	degrees3=angle_fix(-23, -67, 145, 3);
     cca:	91 da       	rcall	.-2782   	; 0x1ee <angle_fix>
     ccc:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <degrees2+0x1>
     cd0:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <degrees2>
     cd4:	23 e0       	ldi	r18, 0x03	; 3
     cd6:	30 e0       	ldi	r19, 0x00	; 0
     cd8:	41 e9       	ldi	r20, 0x91	; 145
     cda:	50 e0       	ldi	r21, 0x00	; 0
     cdc:	6d eb       	ldi	r22, 0xBD	; 189
     cde:	7f ef       	ldi	r23, 0xFF	; 255
     ce0:	89 ee       	ldi	r24, 0xE9	; 233
     ce2:	9f ef       	ldi	r25, 0xFF	; 255
	
	servo_1(degrees1);
     ce4:	84 da       	rcall	.-2808   	; 0x1ee <angle_fix>
     ce6:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <_edata+0x1>
	servo_2(degrees2+20);
     cea:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <_edata>
     cee:	f7 01       	movw	r30, r14
     cf0:	80 81       	ld	r24, Z
	servo_3(degrees3-20);
     cf2:	b9 d3       	rcall	.+1906   	; 0x1466 <servo_1>
     cf4:	f8 01       	movw	r30, r16
     cf6:	80 81       	ld	r24, Z

	lcd_print(1, 1, degrees1, 3);
     cf8:	8c 5e       	subi	r24, 0xEC	; 236
     cfa:	ca d3       	rcall	.+1940   	; 0x1490 <servo_2>
     cfc:	88 81       	ld	r24, Y
     cfe:	84 51       	subi	r24, 0x14	; 20
     d00:	dc d3       	rcall	.+1976   	; 0x14ba <servo_3>
     d02:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <degrees1>
     d06:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <degrees1+0x1>
	lcd_print(1, 5, degrees2, 3);
     d0a:	23 e0       	ldi	r18, 0x03	; 3
     d0c:	30 e0       	ldi	r19, 0x00	; 0
     d0e:	61 e0       	ldi	r22, 0x01	; 1
     d10:	81 e0       	ldi	r24, 0x01	; 1
     d12:	f7 d1       	rcall	.+1006   	; 0x1102 <lcd_print>
     d14:	40 91 02 02 	lds	r20, 0x0202	; 0x800202 <degrees2>
     d18:	50 91 03 02 	lds	r21, 0x0203	; 0x800203 <degrees2+0x1>
	lcd_print(1, 9, degrees3, 3);
     d1c:	23 e0       	ldi	r18, 0x03	; 3
     d1e:	30 e0       	ldi	r19, 0x00	; 0
     d20:	65 e0       	ldi	r22, 0x05	; 5
     d22:	81 e0       	ldi	r24, 0x01	; 1
     d24:	ee d1       	rcall	.+988    	; 0x1102 <lcd_print>
     d26:	40 91 00 02 	lds	r20, 0x0200	; 0x800200 <_edata>
     d2a:	50 91 01 02 	lds	r21, 0x0201	; 0x800201 <_edata+0x1>
     d2e:	23 e0       	ldi	r18, 0x03	; 3
     d30:	30 e0       	ldi	r19, 0x00	; 0
     d32:	69 e0       	ldi	r22, 0x09	; 9
     d34:	81 e0       	ldi	r24, 0x01	; 1
     d36:	e5 d1       	rcall	.+970    	; 0x1102 <lcd_print>
     d38:	ff ef       	ldi	r31, 0xFF	; 255
     d3a:	2f e7       	ldi	r18, 0x7F	; 127
     d3c:	84 e0       	ldi	r24, 0x04	; 4
     d3e:	f1 50       	subi	r31, 0x01	; 1
	
	_delay_ms(100);

	degrees1=angle_fix(-31, -67, 145, 1);
     d40:	20 40       	sbci	r18, 0x00	; 0
     d42:	80 40       	sbci	r24, 0x00	; 0
     d44:	e1 f7       	brne	.-8      	; 0xd3e <arm_y_linear+0x6b8>
     d46:	00 c0       	rjmp	.+0      	; 0xd48 <arm_y_linear+0x6c2>
     d48:	00 00       	nop
     d4a:	21 e0       	ldi	r18, 0x01	; 1
     d4c:	30 e0       	ldi	r19, 0x00	; 0
     d4e:	41 e9       	ldi	r20, 0x91	; 145
     d50:	50 e0       	ldi	r21, 0x00	; 0
     d52:	6d eb       	ldi	r22, 0xBD	; 189
     d54:	7f ef       	ldi	r23, 0xFF	; 255
     d56:	81 ee       	ldi	r24, 0xE1	; 225
     d58:	9f ef       	ldi	r25, 0xFF	; 255
	degrees2=angle_fix(-31, -67, 145, 2);
     d5a:	49 da       	rcall	.-2926   	; 0x1ee <angle_fix>
     d5c:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <degrees1+0x1>
     d60:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <degrees1>
     d64:	22 e0       	ldi	r18, 0x02	; 2
     d66:	30 e0       	ldi	r19, 0x00	; 0
     d68:	41 e9       	ldi	r20, 0x91	; 145
     d6a:	50 e0       	ldi	r21, 0x00	; 0
     d6c:	6d eb       	ldi	r22, 0xBD	; 189
     d6e:	7f ef       	ldi	r23, 0xFF	; 255
     d70:	81 ee       	ldi	r24, 0xE1	; 225
     d72:	9f ef       	ldi	r25, 0xFF	; 255
	degrees3=angle_fix(-31, -67, 145, 3);
     d74:	3c da       	rcall	.-2952   	; 0x1ee <angle_fix>
     d76:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <degrees2+0x1>
     d7a:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <degrees2>
     d7e:	23 e0       	ldi	r18, 0x03	; 3
     d80:	30 e0       	ldi	r19, 0x00	; 0
     d82:	41 e9       	ldi	r20, 0x91	; 145
     d84:	50 e0       	ldi	r21, 0x00	; 0
     d86:	6d eb       	ldi	r22, 0xBD	; 189
     d88:	7f ef       	ldi	r23, 0xFF	; 255
     d8a:	81 ee       	ldi	r24, 0xE1	; 225

	servo_1(degrees1);
     d8c:	9f ef       	ldi	r25, 0xFF	; 255
     d8e:	2f da       	rcall	.-2978   	; 0x1ee <angle_fix>
     d90:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <_edata+0x1>
	servo_2(degrees2+20);
     d94:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <_edata>
     d98:	f7 01       	movw	r30, r14
     d9a:	80 81       	ld	r24, Z
	servo_3(degrees3-20);
     d9c:	64 d3       	rcall	.+1736   	; 0x1466 <servo_1>
     d9e:	f8 01       	movw	r30, r16
     da0:	80 81       	ld	r24, Z

	lcd_print(1, 1, degrees1, 3);
     da2:	8c 5e       	subi	r24, 0xEC	; 236
     da4:	75 d3       	rcall	.+1770   	; 0x1490 <servo_2>
     da6:	88 81       	ld	r24, Y
     da8:	84 51       	subi	r24, 0x14	; 20
     daa:	87 d3       	rcall	.+1806   	; 0x14ba <servo_3>
     dac:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <degrees1>
     db0:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <degrees1+0x1>
	lcd_print(1, 5, degrees2, 3);
     db4:	23 e0       	ldi	r18, 0x03	; 3
     db6:	30 e0       	ldi	r19, 0x00	; 0
     db8:	61 e0       	ldi	r22, 0x01	; 1
     dba:	81 e0       	ldi	r24, 0x01	; 1
     dbc:	a2 d1       	rcall	.+836    	; 0x1102 <lcd_print>
     dbe:	40 91 02 02 	lds	r20, 0x0202	; 0x800202 <degrees2>
     dc2:	50 91 03 02 	lds	r21, 0x0203	; 0x800203 <degrees2+0x1>
	lcd_print(1, 9, degrees3, 3);
     dc6:	23 e0       	ldi	r18, 0x03	; 3
     dc8:	30 e0       	ldi	r19, 0x00	; 0
     dca:	65 e0       	ldi	r22, 0x05	; 5
     dcc:	81 e0       	ldi	r24, 0x01	; 1
     dce:	99 d1       	rcall	.+818    	; 0x1102 <lcd_print>
     dd0:	40 91 00 02 	lds	r20, 0x0200	; 0x800200 <_edata>
     dd4:	50 91 01 02 	lds	r21, 0x0201	; 0x800201 <_edata+0x1>
     dd8:	23 e0       	ldi	r18, 0x03	; 3
     dda:	30 e0       	ldi	r19, 0x00	; 0
     ddc:	69 e0       	ldi	r22, 0x09	; 9
     dde:	81 e0       	ldi	r24, 0x01	; 1
     de0:	90 d1       	rcall	.+800    	; 0x1102 <lcd_print>
     de2:	ff ef       	ldi	r31, 0xFF	; 255
     de4:	2f e7       	ldi	r18, 0x7F	; 127
     de6:	84 e0       	ldi	r24, 0x04	; 4
     de8:	f1 50       	subi	r31, 0x01	; 1
	
	_delay_ms(100);
	
	degrees1=angle_fix(-38, -66, 143, 1);
     dea:	20 40       	sbci	r18, 0x00	; 0
     dec:	80 40       	sbci	r24, 0x00	; 0
     dee:	e1 f7       	brne	.-8      	; 0xde8 <arm_y_linear+0x762>
     df0:	00 c0       	rjmp	.+0      	; 0xdf2 <arm_y_linear+0x76c>
     df2:	00 00       	nop
     df4:	21 e0       	ldi	r18, 0x01	; 1
     df6:	30 e0       	ldi	r19, 0x00	; 0
     df8:	4f e8       	ldi	r20, 0x8F	; 143
     dfa:	50 e0       	ldi	r21, 0x00	; 0
     dfc:	6e eb       	ldi	r22, 0xBE	; 190
     dfe:	7f ef       	ldi	r23, 0xFF	; 255
     e00:	8a ed       	ldi	r24, 0xDA	; 218
     e02:	9f ef       	ldi	r25, 0xFF	; 255
	degrees2=angle_fix(-38, -66, 143, 2);
     e04:	f4 d9       	rcall	.-3096   	; 0x1ee <angle_fix>
     e06:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <degrees1+0x1>
     e0a:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <degrees1>
     e0e:	22 e0       	ldi	r18, 0x02	; 2
     e10:	30 e0       	ldi	r19, 0x00	; 0
     e12:	4f e8       	ldi	r20, 0x8F	; 143
     e14:	50 e0       	ldi	r21, 0x00	; 0
     e16:	6e eb       	ldi	r22, 0xBE	; 190
     e18:	7f ef       	ldi	r23, 0xFF	; 255
     e1a:	8a ed       	ldi	r24, 0xDA	; 218
     e1c:	9f ef       	ldi	r25, 0xFF	; 255
	degrees3=angle_fix(-38, -66, 143, 3);
     e1e:	e7 d9       	rcall	.-3122   	; 0x1ee <angle_fix>
     e20:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <degrees2+0x1>
     e24:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <degrees2>
     e28:	23 e0       	ldi	r18, 0x03	; 3
     e2a:	30 e0       	ldi	r19, 0x00	; 0
     e2c:	4f e8       	ldi	r20, 0x8F	; 143
     e2e:	50 e0       	ldi	r21, 0x00	; 0
     e30:	6e eb       	ldi	r22, 0xBE	; 190
     e32:	7f ef       	ldi	r23, 0xFF	; 255
     e34:	8a ed       	ldi	r24, 0xDA	; 218

	servo_1(degrees1);
     e36:	9f ef       	ldi	r25, 0xFF	; 255
     e38:	da d9       	rcall	.-3148   	; 0x1ee <angle_fix>
     e3a:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <_edata+0x1>
	servo_2(degrees2+20);
     e3e:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <_edata>
     e42:	f7 01       	movw	r30, r14
     e44:	80 81       	ld	r24, Z
	servo_3(degrees3-20);
     e46:	0f d3       	rcall	.+1566   	; 0x1466 <servo_1>
     e48:	f8 01       	movw	r30, r16
     e4a:	80 81       	ld	r24, Z

	lcd_print(1, 1, degrees1, 3);
     e4c:	8c 5e       	subi	r24, 0xEC	; 236
     e4e:	20 d3       	rcall	.+1600   	; 0x1490 <servo_2>
     e50:	88 81       	ld	r24, Y
     e52:	84 51       	subi	r24, 0x14	; 20
     e54:	32 d3       	rcall	.+1636   	; 0x14ba <servo_3>
     e56:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <degrees1>
     e5a:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <degrees1+0x1>
	lcd_print(1, 5, degrees2, 3);
     e5e:	23 e0       	ldi	r18, 0x03	; 3
     e60:	30 e0       	ldi	r19, 0x00	; 0
     e62:	61 e0       	ldi	r22, 0x01	; 1
     e64:	81 e0       	ldi	r24, 0x01	; 1
     e66:	4d d1       	rcall	.+666    	; 0x1102 <lcd_print>
     e68:	40 91 02 02 	lds	r20, 0x0202	; 0x800202 <degrees2>
     e6c:	50 91 03 02 	lds	r21, 0x0203	; 0x800203 <degrees2+0x1>
     e70:	23 e0       	ldi	r18, 0x03	; 3
	lcd_print(1, 9, degrees3, 3);
     e72:	30 e0       	ldi	r19, 0x00	; 0
     e74:	65 e0       	ldi	r22, 0x05	; 5
     e76:	81 e0       	ldi	r24, 0x01	; 1
     e78:	44 d1       	rcall	.+648    	; 0x1102 <lcd_print>
     e7a:	40 91 00 02 	lds	r20, 0x0200	; 0x800200 <_edata>
     e7e:	50 91 01 02 	lds	r21, 0x0201	; 0x800201 <_edata+0x1>
     e82:	23 e0       	ldi	r18, 0x03	; 3
     e84:	30 e0       	ldi	r19, 0x00	; 0
     e86:	69 e0       	ldi	r22, 0x09	; 9
     e88:	81 e0       	ldi	r24, 0x01	; 1
     e8a:	3b d1       	rcall	.+630    	; 0x1102 <lcd_print>
     e8c:	ff ef       	ldi	r31, 0xFF	; 255
     e8e:	2f e7       	ldi	r18, 0x7F	; 127
     e90:	84 e0       	ldi	r24, 0x04	; 4
     e92:	f1 50       	subi	r31, 0x01	; 1
     e94:	20 40       	sbci	r18, 0x00	; 0
     e96:	80 40       	sbci	r24, 0x00	; 0
	
	_delay_ms(100);
	
	degrees1=angle_fix(-44, -65, 140, 1);
     e98:	e1 f7       	brne	.-8      	; 0xe92 <arm_y_linear+0x80c>
     e9a:	00 c0       	rjmp	.+0      	; 0xe9c <arm_y_linear+0x816>
     e9c:	00 00       	nop
     e9e:	21 e0       	ldi	r18, 0x01	; 1
     ea0:	30 e0       	ldi	r19, 0x00	; 0
     ea2:	4c e8       	ldi	r20, 0x8C	; 140
     ea4:	50 e0       	ldi	r21, 0x00	; 0
     ea6:	6f eb       	ldi	r22, 0xBF	; 191
     ea8:	7f ef       	ldi	r23, 0xFF	; 255
     eaa:	84 ed       	ldi	r24, 0xD4	; 212
     eac:	9f ef       	ldi	r25, 0xFF	; 255
     eae:	9f d9       	rcall	.-3266   	; 0x1ee <angle_fix>
     eb0:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <degrees1+0x1>
	degrees2=angle_fix(-44, -65, 140, 2);
     eb4:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <degrees1>
     eb8:	22 e0       	ldi	r18, 0x02	; 2
     eba:	30 e0       	ldi	r19, 0x00	; 0
     ebc:	4c e8       	ldi	r20, 0x8C	; 140
     ebe:	50 e0       	ldi	r21, 0x00	; 0
     ec0:	6f eb       	ldi	r22, 0xBF	; 191
     ec2:	7f ef       	ldi	r23, 0xFF	; 255
     ec4:	84 ed       	ldi	r24, 0xD4	; 212
     ec6:	9f ef       	ldi	r25, 0xFF	; 255
     ec8:	92 d9       	rcall	.-3292   	; 0x1ee <angle_fix>
     eca:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <degrees2+0x1>
     ece:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <degrees2>
	degrees3=angle_fix(-44, -65, 140, 3);
     ed2:	23 e0       	ldi	r18, 0x03	; 3
     ed4:	30 e0       	ldi	r19, 0x00	; 0
     ed6:	4c e8       	ldi	r20, 0x8C	; 140
     ed8:	50 e0       	ldi	r21, 0x00	; 0
     eda:	6f eb       	ldi	r22, 0xBF	; 191
     edc:	7f ef       	ldi	r23, 0xFF	; 255
     ede:	84 ed       	ldi	r24, 0xD4	; 212
     ee0:	9f ef       	ldi	r25, 0xFF	; 255
     ee2:	85 d9       	rcall	.-3318   	; 0x1ee <angle_fix>
     ee4:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <_edata+0x1>
     ee8:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <_edata>

	servo_1(degrees1);
     eec:	f7 01       	movw	r30, r14
     eee:	80 81       	ld	r24, Z
     ef0:	ba d2       	rcall	.+1396   	; 0x1466 <servo_1>
     ef2:	f8 01       	movw	r30, r16
	servo_2(degrees2+20);
     ef4:	80 81       	ld	r24, Z
     ef6:	8c 5e       	subi	r24, 0xEC	; 236
     ef8:	cb d2       	rcall	.+1430   	; 0x1490 <servo_2>
     efa:	88 81       	ld	r24, Y
     efc:	84 51       	subi	r24, 0x14	; 20
	servo_3(degrees3-20);
     efe:	dd d2       	rcall	.+1466   	; 0x14ba <servo_3>
     f00:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <degrees1>
     f04:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <degrees1+0x1>

	lcd_print(1, 1, degrees1, 3);
     f08:	23 e0       	ldi	r18, 0x03	; 3
     f0a:	30 e0       	ldi	r19, 0x00	; 0
     f0c:	61 e0       	ldi	r22, 0x01	; 1
     f0e:	81 e0       	ldi	r24, 0x01	; 1
     f10:	f8 d0       	rcall	.+496    	; 0x1102 <lcd_print>
     f12:	40 91 02 02 	lds	r20, 0x0202	; 0x800202 <degrees2>
     f16:	50 91 03 02 	lds	r21, 0x0203	; 0x800203 <degrees2+0x1>
	lcd_print(1, 5, degrees2, 3);
     f1a:	23 e0       	ldi	r18, 0x03	; 3
     f1c:	30 e0       	ldi	r19, 0x00	; 0
     f1e:	65 e0       	ldi	r22, 0x05	; 5
     f20:	81 e0       	ldi	r24, 0x01	; 1
     f22:	ef d0       	rcall	.+478    	; 0x1102 <lcd_print>
     f24:	40 91 00 02 	lds	r20, 0x0200	; 0x800200 <_edata>
     f28:	50 91 01 02 	lds	r21, 0x0201	; 0x800201 <_edata+0x1>
     f2c:	23 e0       	ldi	r18, 0x03	; 3
	lcd_print(1, 9, degrees3, 3);
     f2e:	30 e0       	ldi	r19, 0x00	; 0
     f30:	69 e0       	ldi	r22, 0x09	; 9
     f32:	81 e0       	ldi	r24, 0x01	; 1
     f34:	e6 d0       	rcall	.+460    	; 0x1102 <lcd_print>
     f36:	ff ef       	ldi	r31, 0xFF	; 255
     f38:	2f e7       	ldi	r18, 0x7F	; 127
     f3a:	84 e0       	ldi	r24, 0x04	; 4
     f3c:	f1 50       	subi	r31, 0x01	; 1
     f3e:	20 40       	sbci	r18, 0x00	; 0
     f40:	80 40       	sbci	r24, 0x00	; 0
     f42:	e1 f7       	brne	.-8      	; 0xf3c <arm_y_linear+0x8b6>
     f44:	00 c0       	rjmp	.+0      	; 0xf46 <arm_y_linear+0x8c0>
     f46:	00 00       	nop
     f48:	df 91       	pop	r29
     f4a:	cf 91       	pop	r28
     f4c:	1f 91       	pop	r17
     f4e:	0f 91       	pop	r16
     f50:	ff 90       	pop	r15
     f52:	ef 90       	pop	r14
	
	_delay_ms(100);						
  }
     f54:	08 95       	ret

00000f56 <buzzer_pin_config>:
#include "Common_includes.h"

//Buzzer pin configuration
void buzzer_pin_config (void)
 {
	DDRC = DDRC | 0x08;		//Setting PORTC 3 as output
     f56:	3b 9a       	sbi	0x07, 3	; 7
	PORTC = PORTC & 0xF7;	//Setting PORTC 3 logic low to turnoff buzzer
     f58:	43 98       	cbi	0x08, 3	; 8
     f5a:	08 95       	ret

00000f5c <port_init>:
#include "Ultrasound.h"

//Configure all the required ports
void port_init()
 {
	lcd_port_config();
     f5c:	0f d0       	rcall	.+30     	; 0xf7c <lcd_port_config>
	adc_pin_config();
     f5e:	25 d9       	rcall	.-3510   	; 0x1aa <adc_pin_config>
	motion_pin_config();
     f60:	37 d2       	rcall	.+1134   	; 0x13d0 <motion_pin_config>
	buzzer_pin_config();
     f62:	f9 df       	rcall	.-14     	; 0xf56 <buzzer_pin_config>
     f64:	91 d3       	rcall	.+1826   	; 0x1688 <ultrasound_config>
	ultrasound_config();
     f66:	7b c2       	rjmp	.+1270   	; 0x145e <servo_pin_config>
     f68:	08 95       	ret

00000f6a <init_devices>:
	servo_pin_config();
     f6a:	f8 94       	cli
     f6c:	f7 df       	rcall	.-18     	; 0xf5c <port_init>
     f6e:	10 d9       	rcall	.-3552   	; 0x190 <adc_init>
void init_devices (void)
 {
	cli(); //Clears the global interrupts
	port_init();
	adc_init();
	timer1_init();
     f70:	49 d3       	rcall	.+1682   	; 0x1604 <timer1_init>
	timer4_init();
     f72:	64 d3       	rcall	.+1736   	; 0x163c <timer4_init>
     f74:	6e d3       	rcall	.+1756   	; 0x1652 <timer5_init>
	timer5_init();
     f76:	71 d0       	rcall	.+226    	; 0x105a <lcd_init>
     f78:	78 94       	sei
	lcd_init();
     f7a:	08 95       	ret

00000f7c <lcd_port_config>:
     f7c:	87 b1       	in	r24, 0x07	; 7
	sei();   //Enables the global interrupts
     f7e:	87 6f       	ori	r24, 0xF7	; 247
     f80:	87 b9       	out	0x07, r24	; 7
	while(*str != '\0')
	{
		lcd_wr_char(*str);
		str++;
	}
}
     f82:	88 b1       	in	r24, 0x08	; 8
     f84:	80 78       	andi	r24, 0x80	; 128
     f86:	88 b9       	out	0x08, r24	; 8
     f88:	08 95       	ret

00000f8a <lcd_set_4bit>:
     f8a:	86 e6       	ldi	r24, 0x66	; 102
     f8c:	9e e0       	ldi	r25, 0x0E	; 14
     f8e:	01 97       	sbiw	r24, 0x01	; 1
     f90:	f1 f7       	brne	.-4      	; 0xf8e <lcd_set_4bit+0x4>
     f92:	00 00       	nop
     f94:	40 98       	cbi	0x08, 0	; 8
     f96:	41 98       	cbi	0x08, 1	; 8
     f98:	80 e3       	ldi	r24, 0x30	; 48
     f9a:	88 b9       	out	0x08, r24	; 8
     f9c:	42 9a       	sbi	0x08, 2	; 8
     f9e:	ef ef       	ldi	r30, 0xFF	; 255
     fa0:	f7 e4       	ldi	r31, 0x47	; 71
     fa2:	31 97       	sbiw	r30, 0x01	; 1
     fa4:	f1 f7       	brne	.-4      	; 0xfa2 <lcd_set_4bit+0x18>
     fa6:	00 c0       	rjmp	.+0      	; 0xfa8 <lcd_set_4bit+0x1e>
     fa8:	00 00       	nop
     faa:	42 98       	cbi	0x08, 2	; 8
     fac:	e6 e6       	ldi	r30, 0x66	; 102
     fae:	fe e0       	ldi	r31, 0x0E	; 14
     fb0:	31 97       	sbiw	r30, 0x01	; 1
     fb2:	f1 f7       	brne	.-4      	; 0xfb0 <lcd_set_4bit+0x26>
     fb4:	00 00       	nop
     fb6:	40 98       	cbi	0x08, 0	; 8
     fb8:	41 98       	cbi	0x08, 1	; 8
     fba:	88 b9       	out	0x08, r24	; 8
     fbc:	42 9a       	sbi	0x08, 2	; 8
     fbe:	ef ef       	ldi	r30, 0xFF	; 255
     fc0:	f7 e4       	ldi	r31, 0x47	; 71
     fc2:	31 97       	sbiw	r30, 0x01	; 1
     fc4:	f1 f7       	brne	.-4      	; 0xfc2 <lcd_set_4bit+0x38>
     fc6:	00 c0       	rjmp	.+0      	; 0xfc8 <lcd_set_4bit+0x3e>
     fc8:	00 00       	nop
     fca:	42 98       	cbi	0x08, 2	; 8
     fcc:	e6 e6       	ldi	r30, 0x66	; 102
     fce:	fe e0       	ldi	r31, 0x0E	; 14
     fd0:	31 97       	sbiw	r30, 0x01	; 1
     fd2:	f1 f7       	brne	.-4      	; 0xfd0 <lcd_set_4bit+0x46>
     fd4:	00 00       	nop
     fd6:	40 98       	cbi	0x08, 0	; 8
     fd8:	41 98       	cbi	0x08, 1	; 8
     fda:	88 b9       	out	0x08, r24	; 8
     fdc:	42 9a       	sbi	0x08, 2	; 8
     fde:	8f ef       	ldi	r24, 0xFF	; 255
     fe0:	97 e4       	ldi	r25, 0x47	; 71
     fe2:	01 97       	sbiw	r24, 0x01	; 1
     fe4:	f1 f7       	brne	.-4      	; 0xfe2 <lcd_set_4bit+0x58>
     fe6:	00 c0       	rjmp	.+0      	; 0xfe8 <lcd_set_4bit+0x5e>
     fe8:	00 00       	nop
     fea:	42 98       	cbi	0x08, 2	; 8
     fec:	e6 e6       	ldi	r30, 0x66	; 102
     fee:	fe e0       	ldi	r31, 0x0E	; 14
     ff0:	31 97       	sbiw	r30, 0x01	; 1
     ff2:	f1 f7       	brne	.-4      	; 0xff0 <lcd_set_4bit+0x66>
     ff4:	00 00       	nop
     ff6:	40 98       	cbi	0x08, 0	; 8
     ff8:	41 98       	cbi	0x08, 1	; 8
     ffa:	80 e2       	ldi	r24, 0x20	; 32
     ffc:	88 b9       	out	0x08, r24	; 8
     ffe:	42 9a       	sbi	0x08, 2	; 8
    1000:	8f ef       	ldi	r24, 0xFF	; 255
    1002:	97 e4       	ldi	r25, 0x47	; 71
    1004:	01 97       	sbiw	r24, 0x01	; 1
    1006:	f1 f7       	brne	.-4      	; 0x1004 <lcd_set_4bit+0x7a>
    1008:	00 c0       	rjmp	.+0      	; 0x100a <lcd_set_4bit+0x80>
    100a:	00 00       	nop
    100c:	42 98       	cbi	0x08, 2	; 8
    100e:	08 95       	ret

00001010 <lcd_wr_command>:
    1010:	98 b1       	in	r25, 0x08	; 8
    1012:	9f 70       	andi	r25, 0x0F	; 15
    1014:	98 b9       	out	0x08, r25	; 8
    1016:	98 b1       	in	r25, 0x08	; 8
    1018:	28 2f       	mov	r18, r24
    101a:	20 7f       	andi	r18, 0xF0	; 240
    101c:	92 2b       	or	r25, r18
    101e:	98 b9       	out	0x08, r25	; 8
    1020:	40 98       	cbi	0x08, 0	; 8
    1022:	41 98       	cbi	0x08, 1	; 8
    1024:	42 9a       	sbi	0x08, 2	; 8
    1026:	ef ef       	ldi	r30, 0xFF	; 255
    1028:	f7 e4       	ldi	r31, 0x47	; 71
    102a:	31 97       	sbiw	r30, 0x01	; 1
    102c:	f1 f7       	brne	.-4      	; 0x102a <lcd_wr_command+0x1a>
    102e:	00 c0       	rjmp	.+0      	; 0x1030 <lcd_wr_command+0x20>
    1030:	00 00       	nop
    1032:	42 98       	cbi	0x08, 2	; 8
    1034:	98 b1       	in	r25, 0x08	; 8
    1036:	9f 70       	andi	r25, 0x0F	; 15
    1038:	98 b9       	out	0x08, r25	; 8
    103a:	98 b1       	in	r25, 0x08	; 8
    103c:	82 95       	swap	r24
    103e:	80 7f       	andi	r24, 0xF0	; 240
    1040:	89 2b       	or	r24, r25
    1042:	88 b9       	out	0x08, r24	; 8
    1044:	40 98       	cbi	0x08, 0	; 8
    1046:	41 98       	cbi	0x08, 1	; 8
    1048:	42 9a       	sbi	0x08, 2	; 8
    104a:	8f ef       	ldi	r24, 0xFF	; 255
    104c:	97 e4       	ldi	r25, 0x47	; 71
    104e:	01 97       	sbiw	r24, 0x01	; 1
    1050:	f1 f7       	brne	.-4      	; 0x104e <lcd_wr_command+0x3e>
    1052:	00 c0       	rjmp	.+0      	; 0x1054 <lcd_wr_command+0x44>
    1054:	00 00       	nop
    1056:	42 98       	cbi	0x08, 2	; 8
    1058:	08 95       	ret

0000105a <lcd_init>:
    105a:	97 df       	rcall	.-210    	; 0xf8a <lcd_set_4bit>
    105c:	86 e6       	ldi	r24, 0x66	; 102
    105e:	9e e0       	ldi	r25, 0x0E	; 14
    1060:	01 97       	sbiw	r24, 0x01	; 1
    1062:	f1 f7       	brne	.-4      	; 0x1060 <lcd_init+0x6>
    1064:	00 00       	nop
    1066:	88 e2       	ldi	r24, 0x28	; 40
    1068:	d3 df       	rcall	.-90     	; 0x1010 <lcd_wr_command>
    106a:	81 e0       	ldi	r24, 0x01	; 1
    106c:	d1 df       	rcall	.-94     	; 0x1010 <lcd_wr_command>
    106e:	86 e0       	ldi	r24, 0x06	; 6
    1070:	cf df       	rcall	.-98     	; 0x1010 <lcd_wr_command>
    1072:	8e e0       	ldi	r24, 0x0E	; 14
    1074:	cd df       	rcall	.-102    	; 0x1010 <lcd_wr_command>
    1076:	80 e8       	ldi	r24, 0x80	; 128
    1078:	cb cf       	rjmp	.-106    	; 0x1010 <lcd_wr_command>
    107a:	08 95       	ret

0000107c <lcd_wr_char>:
    107c:	98 b1       	in	r25, 0x08	; 8
    107e:	9f 70       	andi	r25, 0x0F	; 15
    1080:	98 b9       	out	0x08, r25	; 8
    1082:	98 b1       	in	r25, 0x08	; 8
    1084:	28 2f       	mov	r18, r24
    1086:	20 7f       	andi	r18, 0xF0	; 240
    1088:	92 2b       	or	r25, r18
    108a:	98 b9       	out	0x08, r25	; 8
    108c:	40 9a       	sbi	0x08, 0	; 8
    108e:	41 98       	cbi	0x08, 1	; 8
    1090:	42 9a       	sbi	0x08, 2	; 8
    1092:	ef ef       	ldi	r30, 0xFF	; 255
    1094:	f7 e4       	ldi	r31, 0x47	; 71
    1096:	31 97       	sbiw	r30, 0x01	; 1
    1098:	f1 f7       	brne	.-4      	; 0x1096 <lcd_wr_char+0x1a>
    109a:	00 c0       	rjmp	.+0      	; 0x109c <lcd_wr_char+0x20>
    109c:	00 00       	nop
    109e:	42 98       	cbi	0x08, 2	; 8
    10a0:	82 95       	swap	r24
    10a2:	80 7f       	andi	r24, 0xF0	; 240
    10a4:	98 b1       	in	r25, 0x08	; 8
    10a6:	9f 70       	andi	r25, 0x0F	; 15
    10a8:	98 b9       	out	0x08, r25	; 8
    10aa:	98 b1       	in	r25, 0x08	; 8
    10ac:	89 2b       	or	r24, r25
    10ae:	88 b9       	out	0x08, r24	; 8
    10b0:	40 9a       	sbi	0x08, 0	; 8
    10b2:	41 98       	cbi	0x08, 1	; 8
    10b4:	42 9a       	sbi	0x08, 2	; 8
    10b6:	8f ef       	ldi	r24, 0xFF	; 255
    10b8:	97 e4       	ldi	r25, 0x47	; 71
    10ba:	01 97       	sbiw	r24, 0x01	; 1
    10bc:	f1 f7       	brne	.-4      	; 0x10ba <lcd_wr_char+0x3e>
    10be:	00 c0       	rjmp	.+0      	; 0x10c0 <lcd_wr_char+0x44>
    10c0:	00 00       	nop
    10c2:	42 98       	cbi	0x08, 2	; 8
    10c4:	08 95       	ret

000010c6 <lcd_home>:
    10c6:	80 e8       	ldi	r24, 0x80	; 128
    10c8:	a3 cf       	rjmp	.-186    	; 0x1010 <lcd_wr_command>
    10ca:	08 95       	ret

000010cc <lcd_cursor>:

//Position the LCD cursor at "row", "column".

void lcd_cursor (char row, char column)
{
	switch (row)
    10cc:	82 30       	cpi	r24, 0x02	; 2
    10ce:	69 f0       	breq	.+26     	; 0x10ea <lcd_cursor+0x1e>
    10d0:	1c f4       	brge	.+6      	; 0x10d8 <lcd_cursor+0xc>
    10d2:	81 30       	cpi	r24, 0x01	; 1
    10d4:	31 f0       	breq	.+12     	; 0x10e2 <lcd_cursor+0x16>
    10d6:	08 95       	ret
    10d8:	83 30       	cpi	r24, 0x03	; 3
    10da:	59 f0       	breq	.+22     	; 0x10f2 <lcd_cursor+0x26>
    10dc:	84 30       	cpi	r24, 0x04	; 4
    10de:	69 f0       	breq	.+26     	; 0x10fa <lcd_cursor+0x2e>
    10e0:	08 95       	ret
	{
		case 1:
		lcd_wr_command (0x80 + column - 1);
    10e2:	8f e7       	ldi	r24, 0x7F	; 127
    10e4:	86 0f       	add	r24, r22
    10e6:	94 cf       	rjmp	.-216    	; 0x1010 <lcd_wr_command>
		break;
    10e8:	08 95       	ret
		
		case 2:
		lcd_wr_command (0xc0 + column - 1);
    10ea:	8f eb       	ldi	r24, 0xBF	; 191
    10ec:	86 0f       	add	r24, r22
    10ee:	90 cf       	rjmp	.-224    	; 0x1010 <lcd_wr_command>
		break;
    10f0:	08 95       	ret
		
		case 3:
		lcd_wr_command (0x94 + column - 1);
    10f2:	83 e9       	ldi	r24, 0x93	; 147
    10f4:	86 0f       	add	r24, r22
    10f6:	8c cf       	rjmp	.-232    	; 0x1010 <lcd_wr_command>
		break;
		
		case 4:
		lcd_wr_command (0xd4 + column - 1);
    10f8:	08 95       	ret
    10fa:	83 ed       	ldi	r24, 0xD3	; 211
    10fc:	86 0f       	add	r24, r22
    10fe:	88 cf       	rjmp	.-240    	; 0x1010 <lcd_wr_command>
    1100:	08 95       	ret

00001102 <lcd_print>:
}

//Print any input value up-to the desired digit on LCD

void lcd_print (char row, char coloumn, unsigned int value, int digits)
{
    1102:	0f 93       	push	r16
    1104:	1f 93       	push	r17
    1106:	cf 93       	push	r28
    1108:	df 93       	push	r29
    110a:	8a 01       	movw	r16, r20
    110c:	e9 01       	movw	r28, r18
	unsigned char flag=0;
	
	if(row==0||coloumn==0)
    110e:	88 23       	and	r24, r24
    1110:	11 f0       	breq	.+4      	; 0x1116 <lcd_print+0x14>
    1112:	61 11       	cpse	r22, r1
    1114:	02 c0       	rjmp	.+4      	; 0x111a <lcd_print+0x18>
	{
		lcd_home();
    1116:	d7 df       	rcall	.-82     	; 0x10c6 <lcd_home>
    1118:	01 c0       	rjmp	.+2      	; 0x111c <lcd_print+0x1a>
	}
	
	else
	{
		lcd_cursor(row,coloumn);
    111a:	d8 df       	rcall	.-80     	; 0x10cc <lcd_cursor>
    111c:	c5 30       	cpi	r28, 0x05	; 5
	}
	
	if(digits==5 || flag==1)
    111e:	d1 05       	cpc	r29, r1
    1120:	09 f0       	breq	.+2      	; 0x1124 <lcd_print+0x22>
    1122:	d4 c0       	rjmp	.+424    	; 0x12cc <lcd_print+0x1ca>
    1124:	98 01       	movw	r18, r16
	{
		million=value/10000+48;
    1126:	32 95       	swap	r19
    1128:	22 95       	swap	r18
    112a:	2f 70       	andi	r18, 0x0F	; 15
    112c:	23 27       	eor	r18, r19
    112e:	3f 70       	andi	r19, 0x0F	; 15
    1130:	23 27       	eor	r18, r19
    1132:	a7 e4       	ldi	r26, 0x47	; 71
    1134:	b3 e0       	ldi	r27, 0x03	; 3
    1136:	0e 94 de 10 	call	0x21bc	; 0x21bc <__umulhisi3>
    113a:	96 95       	lsr	r25
    113c:	87 95       	ror	r24
    113e:	96 95       	lsr	r25
    1140:	87 95       	ror	r24
    1142:	96 95       	lsr	r25
    1144:	87 95       	ror	r24
    1146:	c0 96       	adiw	r24, 0x30	; 48
    1148:	90 93 3d 02 	sts	0x023D, r25	; 0x80023d <million+0x1>
    114c:	80 93 3c 02 	sts	0x023C, r24	; 0x80023c <million>
		lcd_wr_char(million);
    1150:	95 df       	rcall	.-214    	; 0x107c <lcd_wr_char>
    1152:	98 01       	movw	r18, r16
		flag=1;
	}
	
	if(digits==4 || flag==1)
	{
		temp = value/1000;
    1154:	36 95       	lsr	r19
    1156:	27 95       	ror	r18
    1158:	36 95       	lsr	r19
    115a:	27 95       	ror	r18
    115c:	36 95       	lsr	r19
    115e:	27 95       	ror	r18
    1160:	a5 ec       	ldi	r26, 0xC5	; 197
    1162:	b0 e2       	ldi	r27, 0x20	; 32
    1164:	0e 94 de 10 	call	0x21bc	; 0x21bc <__umulhisi3>
    1168:	ac 01       	movw	r20, r24
    116a:	52 95       	swap	r21
    116c:	42 95       	swap	r20
    116e:	4f 70       	andi	r20, 0x0F	; 15
    1170:	45 27       	eor	r20, r21
    1172:	5f 70       	andi	r21, 0x0F	; 15
    1174:	45 27       	eor	r20, r21
    1176:	50 93 3f 02 	sts	0x023F, r21	; 0x80023f <temp+0x1>
    117a:	40 93 3e 02 	sts	0x023E, r20	; 0x80023e <temp>
    117e:	9a 01       	movw	r18, r20
		thousand = temp%10 + 48;
    1180:	ad ec       	ldi	r26, 0xCD	; 205
    1182:	bc ec       	ldi	r27, 0xCC	; 204
    1184:	0e 94 de 10 	call	0x21bc	; 0x21bc <__umulhisi3>
    1188:	96 95       	lsr	r25
    118a:	87 95       	ror	r24
    118c:	96 95       	lsr	r25
    118e:	87 95       	ror	r24
    1190:	96 95       	lsr	r25
    1192:	87 95       	ror	r24
    1194:	9c 01       	movw	r18, r24
    1196:	22 0f       	add	r18, r18
    1198:	33 1f       	adc	r19, r19
    119a:	88 0f       	add	r24, r24
    119c:	99 1f       	adc	r25, r25
    119e:	88 0f       	add	r24, r24
    11a0:	99 1f       	adc	r25, r25
    11a2:	88 0f       	add	r24, r24
    11a4:	99 1f       	adc	r25, r25
    11a6:	82 0f       	add	r24, r18
    11a8:	93 1f       	adc	r25, r19
    11aa:	9a 01       	movw	r18, r20
    11ac:	28 1b       	sub	r18, r24
    11ae:	39 0b       	sbc	r19, r25
    11b0:	c9 01       	movw	r24, r18
    11b2:	c0 96       	adiw	r24, 0x30	; 48
    11b4:	90 93 47 02 	sts	0x0247, r25	; 0x800247 <thousand+0x1>
    11b8:	80 93 46 02 	sts	0x0246, r24	; 0x800246 <thousand>
		lcd_wr_char(thousand);
    11bc:	5f df       	rcall	.-322    	; 0x107c <lcd_wr_char>
    11be:	03 c0       	rjmp	.+6      	; 0x11c6 <lcd_print+0xc4>
    11c0:	c3 30       	cpi	r28, 0x03	; 3
		flag=1;
	}
	
	if(digits==3 || flag==1)
    11c2:	d1 05       	cpc	r29, r1
    11c4:	79 f5       	brne	.+94     	; 0x1224 <lcd_print+0x122>
    11c6:	98 01       	movw	r18, r16
	{
		temp = value/100;
    11c8:	36 95       	lsr	r19
    11ca:	27 95       	ror	r18
    11cc:	36 95       	lsr	r19
    11ce:	27 95       	ror	r18
    11d0:	ab e7       	ldi	r26, 0x7B	; 123
    11d2:	b4 e1       	ldi	r27, 0x14	; 20
    11d4:	f3 d7       	rcall	.+4070   	; 0x21bc <__umulhisi3>
    11d6:	ac 01       	movw	r20, r24
    11d8:	56 95       	lsr	r21
    11da:	47 95       	ror	r20
    11dc:	50 93 3f 02 	sts	0x023F, r21	; 0x80023f <temp+0x1>
    11e0:	40 93 3e 02 	sts	0x023E, r20	; 0x80023e <temp>
		hundred = temp%10 + 48;
    11e4:	9a 01       	movw	r18, r20
    11e6:	ad ec       	ldi	r26, 0xCD	; 205
    11e8:	bc ec       	ldi	r27, 0xCC	; 204
    11ea:	e8 d7       	rcall	.+4048   	; 0x21bc <__umulhisi3>
    11ec:	96 95       	lsr	r25
    11ee:	87 95       	ror	r24
    11f0:	96 95       	lsr	r25
    11f2:	87 95       	ror	r24
    11f4:	96 95       	lsr	r25
    11f6:	87 95       	ror	r24
    11f8:	9c 01       	movw	r18, r24
    11fa:	22 0f       	add	r18, r18
    11fc:	33 1f       	adc	r19, r19
    11fe:	88 0f       	add	r24, r24
    1200:	99 1f       	adc	r25, r25
    1202:	88 0f       	add	r24, r24
    1204:	99 1f       	adc	r25, r25
    1206:	88 0f       	add	r24, r24
    1208:	99 1f       	adc	r25, r25
    120a:	82 0f       	add	r24, r18
    120c:	93 1f       	adc	r25, r19
    120e:	9a 01       	movw	r18, r20
    1210:	28 1b       	sub	r18, r24
    1212:	39 0b       	sbc	r19, r25
    1214:	c9 01       	movw	r24, r18
    1216:	c0 96       	adiw	r24, 0x30	; 48
    1218:	90 93 43 02 	sts	0x0243, r25	; 0x800243 <hundred+0x1>
    121c:	80 93 42 02 	sts	0x0242, r24	; 0x800242 <hundred>
		lcd_wr_char(hundred);
    1220:	2d df       	rcall	.-422    	; 0x107c <lcd_wr_char>
    1222:	04 c0       	rjmp	.+8      	; 0x122c <lcd_print+0x12a>
    1224:	c2 30       	cpi	r28, 0x02	; 2
		flag=1;
	}
	
	if(digits==2 || flag==1)
    1226:	d1 05       	cpc	r29, r1
    1228:	09 f0       	breq	.+2      	; 0x122c <lcd_print+0x12a>
    122a:	55 c0       	rjmp	.+170    	; 0x12d6 <lcd_print+0x1d4>
	{
		temp = value/10;
    122c:	98 01       	movw	r18, r16
    122e:	ad ec       	ldi	r26, 0xCD	; 205
    1230:	bc ec       	ldi	r27, 0xCC	; 204
    1232:	c4 d7       	rcall	.+3976   	; 0x21bc <__umulhisi3>
    1234:	ac 01       	movw	r20, r24
    1236:	56 95       	lsr	r21
    1238:	47 95       	ror	r20
    123a:	56 95       	lsr	r21
    123c:	47 95       	ror	r20
    123e:	56 95       	lsr	r21
    1240:	47 95       	ror	r20
    1242:	50 93 3f 02 	sts	0x023F, r21	; 0x80023f <temp+0x1>
    1246:	40 93 3e 02 	sts	0x023E, r20	; 0x80023e <temp>
		tens = temp%10 + 48;
    124a:	9a 01       	movw	r18, r20
    124c:	b7 d7       	rcall	.+3950   	; 0x21bc <__umulhisi3>
    124e:	96 95       	lsr	r25
    1250:	87 95       	ror	r24
    1252:	96 95       	lsr	r25
    1254:	87 95       	ror	r24
    1256:	96 95       	lsr	r25
    1258:	87 95       	ror	r24
    125a:	9c 01       	movw	r18, r24
    125c:	22 0f       	add	r18, r18
    125e:	33 1f       	adc	r19, r19
    1260:	88 0f       	add	r24, r24
    1262:	99 1f       	adc	r25, r25
    1264:	88 0f       	add	r24, r24
    1266:	99 1f       	adc	r25, r25
    1268:	88 0f       	add	r24, r24
    126a:	99 1f       	adc	r25, r25
    126c:	82 0f       	add	r24, r18
    126e:	93 1f       	adc	r25, r19
    1270:	9a 01       	movw	r18, r20
    1272:	28 1b       	sub	r18, r24
    1274:	39 0b       	sbc	r19, r25
    1276:	c9 01       	movw	r24, r18
    1278:	c0 96       	adiw	r24, 0x30	; 48
    127a:	90 93 41 02 	sts	0x0241, r25	; 0x800241 <tens+0x1>
    127e:	80 93 40 02 	sts	0x0240, r24	; 0x800240 <tens>
		lcd_wr_char(tens);
    1282:	fc de       	rcall	.-520    	; 0x107c <lcd_wr_char>
		flag=1;
	}
	
	if(digits==1 || flag==1)
	{
		unit = value%10 + 48;
    1284:	98 01       	movw	r18, r16
    1286:	ad ec       	ldi	r26, 0xCD	; 205
    1288:	bc ec       	ldi	r27, 0xCC	; 204
    128a:	98 d7       	rcall	.+3888   	; 0x21bc <__umulhisi3>
    128c:	96 95       	lsr	r25
    128e:	87 95       	ror	r24
    1290:	96 95       	lsr	r25
    1292:	87 95       	ror	r24
    1294:	96 95       	lsr	r25
    1296:	87 95       	ror	r24
    1298:	9c 01       	movw	r18, r24
    129a:	22 0f       	add	r18, r18
    129c:	33 1f       	adc	r19, r19
    129e:	88 0f       	add	r24, r24
    12a0:	99 1f       	adc	r25, r25
    12a2:	88 0f       	add	r24, r24
    12a4:	99 1f       	adc	r25, r25
    12a6:	88 0f       	add	r24, r24
    12a8:	99 1f       	adc	r25, r25
    12aa:	82 0f       	add	r24, r18
    12ac:	93 1f       	adc	r25, r19
    12ae:	98 01       	movw	r18, r16
    12b0:	28 1b       	sub	r18, r24
    12b2:	39 0b       	sbc	r19, r25
    12b4:	c9 01       	movw	r24, r18
    12b6:	c0 96       	adiw	r24, 0x30	; 48
    12b8:	90 93 45 02 	sts	0x0245, r25	; 0x800245 <unit+0x1>
    12bc:	80 93 44 02 	sts	0x0244, r24	; 0x800244 <unit>
		lcd_wr_char(unit);
    12c0:	dd de       	rcall	.-582    	; 0x107c <lcd_wr_char>
	}
	
	if(digits>5)
    12c2:	26 97       	sbiw	r28, 0x06	; 6
    12c4:	64 f0       	brlt	.+24     	; 0x12de <lcd_print+0x1dc>
	{
		lcd_wr_char('E');
    12c6:	85 e4       	ldi	r24, 0x45	; 69
    12c8:	d9 de       	rcall	.-590    	; 0x107c <lcd_wr_char>
    12ca:	09 c0       	rjmp	.+18     	; 0x12de <lcd_print+0x1dc>
	}
    12cc:	c4 30       	cpi	r28, 0x04	; 4
		million=value/10000+48;
		lcd_wr_char(million);
		flag=1;
	}
	
	if(digits==4 || flag==1)
    12ce:	d1 05       	cpc	r29, r1
    12d0:	09 f0       	breq	.+2      	; 0x12d4 <lcd_print+0x1d2>
    12d2:	76 cf       	rjmp	.-276    	; 0x11c0 <lcd_print+0xbe>
    12d4:	3e cf       	rjmp	.-388    	; 0x1152 <lcd_print+0x50>
    12d6:	c1 30       	cpi	r28, 0x01	; 1
		tens = temp%10 + 48;
		lcd_wr_char(tens);
		flag=1;
	}
	
	if(digits==1 || flag==1)
    12d8:	d1 05       	cpc	r29, r1
    12da:	99 f7       	brne	.-26     	; 0x12c2 <lcd_print+0x1c0>
    12dc:	d3 cf       	rjmp	.-90     	; 0x1284 <lcd_print+0x182>
    12de:	df 91       	pop	r29
	
	if(digits>5)
	{
		lcd_wr_char('E');
	}
    12e0:	cf 91       	pop	r28
    12e2:	1f 91       	pop	r17
    12e4:	0f 91       	pop	r16
    12e6:	08 95       	ret

000012e8 <main>:
#include "SharpIR.h"
#include "Servo.h"
#include "Angle_fix_DH.h"

int main(void)
 {
    12e8:	cf 93       	push	r28
    12ea:	df 93       	push	r29
    12ec:	00 d0       	rcall	.+0      	; 0x12ee <main+0x6>
    12ee:	cd b7       	in	r28, 0x3d	; 61
    12f0:	de b7       	in	r29, 0x3e	; 62
 	init_devices(); //Initialize various devices on Firebird
    12f2:	3b de       	rcall	.-906    	; 0xf6a <init_devices>

	int setpoint=20, filtered_distanceF=0;
	double filtered_distanceL_US1=0, filtered_distanceL_US2=0;
	int base=100, offset=4, correction=0, true_distance=0, turn_count=1, turn_distance_max=25, turn_distance_min=5, skirting_flag=1; 
    12f4:	66 24       	eor	r6, r6
    12f6:	63 94       	inc	r6
    12f8:	71 2c       	mov	r7, r1
    12fa:	0f 2e       	mov	r0, r31
    12fc:	f5 e0       	ldi	r31, 0x05	; 5
    12fe:	4f 2e       	mov	r4, r31
    1300:	51 2c       	mov	r5, r1
    1302:	f0 2d       	mov	r31, r0
    1304:	0f 2e       	mov	r0, r31
    1306:	f9 e1       	ldi	r31, 0x19	; 25
    1308:	cf 2e       	mov	r12, r31
    130a:	d1 2c       	mov	r13, r1
    130c:	f0 2d       	mov	r31, r0
    130e:	ee 24       	eor	r14, r14
    1310:	e3 94       	inc	r14
    1312:	f1 2c       	mov	r15, r1
    1314:	19 82       	std	Y+1, r1	; 0x01

int main(void)
 {
 	init_devices(); //Initialize various devices on Firebird

	int setpoint=20, filtered_distanceF=0;
    1316:	0f 2e       	mov	r0, r31
    1318:	f4 e1       	ldi	r31, 0x14	; 20
    131a:	2f 2e       	mov	r2, r31
    131c:	31 2c       	mov	r3, r1
	double filtered_distanceL_US1=0, filtered_distanceL_US2=0;
	int base=100, offset=4, correction=0, true_distance=0, turn_count=1, turn_distance_max=25, turn_distance_min=5, skirting_flag=1; 

	while(1)
	 {	
		filtered_distanceF= distance_IRF();
    131e:	f0 2d       	mov	r31, r0
    1320:	e1 d0       	rcall	.+450    	; 0x14e4 <distance_IRF>
		filtered_distanceL_US1= distance1_us();
    1322:	8c 01       	movw	r16, r24
    1324:	d1 d1       	rcall	.+930    	; 0x16c8 <distance1_us>
    1326:	9b 83       	std	Y+3, r25	; 0x03
		filtered_distanceL_US2= distance2_us();	
    1328:	8a 83       	std	Y+2, r24	; 0x02
    132a:	b0 d2       	rcall	.+1376   	; 0x188c <distance2_us>
			
		true_distance= fmin(filtered_distanceL_US1,filtered_distanceL_US2);
    132c:	bc 01       	movw	r22, r24
    132e:	99 0f       	add	r25, r25
    1330:	88 0b       	sbc	r24, r24
    1332:	99 0b       	sbc	r25, r25
    1334:	8b d4       	rcall	.+2326   	; 0x1c4c <__floatsisf>
    1336:	4b 01       	movw	r8, r22
    1338:	5c 01       	movw	r10, r24
    133a:	2a 81       	ldd	r18, Y+2	; 0x02
    133c:	3b 81       	ldd	r19, Y+3	; 0x03
    133e:	b9 01       	movw	r22, r18
    1340:	33 0f       	add	r19, r19
    1342:	88 0b       	sbc	r24, r24
    1344:	99 0b       	sbc	r25, r25
    1346:	82 d4       	rcall	.+2308   	; 0x1c4c <__floatsisf>
    1348:	a5 01       	movw	r20, r10
    134a:	94 01       	movw	r18, r8
    134c:	cd d4       	rcall	.+2458   	; 0x1ce8 <fmin>
    134e:	4b 01       	movw	r8, r22
		forward(base+correction,base-offset);
    1350:	5c 01       	movw	r10, r24
    1352:	60 e6       	ldi	r22, 0x60	; 96
    1354:	89 81       	ldd	r24, Y+1	; 0x01
    1356:	8c 59       	subi	r24, 0x9C	; 156
		correction=pid_speed_control(setpoint,true_distance);
    1358:	52 d0       	rcall	.+164    	; 0x13fe <forward>
    135a:	c5 01       	movw	r24, r10
    135c:	b4 01       	movw	r22, r8
    135e:	43 d4       	rcall	.+2182   	; 0x1be6 <__fixsfsi>
    1360:	c1 01       	movw	r24, r2
    1362:	64 d0       	rcall	.+200    	; 0x142c <pid_speed_control>
    1364:	89 83       	std	Y+1, r24	; 0x01

		if (filtered_distanceF < turn_distance_max && filtered_distanceF > turn_distance_min)
    1366:	0c 15       	cp	r16, r12
    1368:	1d 05       	cpc	r17, r13
    136a:	94 f4       	brge	.+36     	; 0x1390 <main+0xa8>
    136c:	40 16       	cp	r4, r16
    136e:	51 06       	cpc	r5, r17
    1370:	7c f4       	brge	.+30     	; 0x1390 <main+0xa8>
		{
			right_degrees(90);
    1372:	8a e5       	ldi	r24, 0x5A	; 90
    1374:	90 e0       	ldi	r25, 0x00	; 0
    1376:	53 d0       	rcall	.+166    	; 0x141e <right_degrees>
    1378:	3f ef       	ldi	r19, 0xFF	; 255
    137a:	8f e7       	ldi	r24, 0x7F	; 127
    137c:	96 e1       	ldi	r25, 0x16	; 22
    137e:	31 50       	subi	r19, 0x01	; 1
    1380:	80 40       	sbci	r24, 0x00	; 0
    1382:	90 40       	sbci	r25, 0x00	; 0
    1384:	e1 f7       	brne	.-8      	; 0x137e <main+0x96>
    1386:	00 c0       	rjmp	.+0      	; 0x1388 <main+0xa0>
    1388:	00 00       	nop
    138a:	2f ef       	ldi	r18, 0xFF	; 255
			_delay_ms(500);
			turn_count++;
    138c:	e2 1a       	sub	r14, r18
    138e:	f2 0a       	sbc	r15, r18
    1390:	34 e0       	ldi	r19, 0x04	; 4
		}
		
		if (turn_count==4 && setpoint<55)
    1392:	e3 16       	cp	r14, r19
    1394:	f1 04       	cpc	r15, r1
    1396:	99 f4       	brne	.+38     	; 0x13be <main+0xd6>
    1398:	87 e3       	ldi	r24, 0x37	; 55
    139a:	28 16       	cp	r2, r24
    139c:	31 04       	cpc	r3, r1
    139e:	7c f4       	brge	.+30     	; 0x13be <main+0xd6>
    13a0:	95 e0       	ldi	r25, 0x05	; 5
		{  skirting_flag=0;
			turn_count=1;
			setpoint+=5;
    13a2:	29 0e       	add	r2, r25
    13a4:	31 1c       	adc	r3, r1
    13a6:	25 e0       	ldi	r18, 0x05	; 5
			turn_distance_max+=5;
    13a8:	c2 0e       	add	r12, r18
    13aa:	d1 1c       	adc	r13, r1
    13ac:	35 e0       	ldi	r19, 0x05	; 5
			turn_distance_min+=5;
    13ae:	43 0e       	add	r4, r19
    13b0:	51 1c       	adc	r5, r1
    13b2:	61 2c       	mov	r6, r1
			_delay_ms(500);
			turn_count++;
		}
		
		if (turn_count==4 && setpoint<55)
		{  skirting_flag=0;
    13b4:	71 2c       	mov	r7, r1
    13b6:	ee 24       	eor	r14, r14
			turn_count=1;
    13b8:	e3 94       	inc	r14
    13ba:	f1 2c       	mov	r15, r1
    13bc:	07 c0       	rjmp	.+14     	; 0x13cc <main+0xe4>
			setpoint+=5;
			turn_distance_max+=5;
			turn_distance_min+=5;
		}
		
		if (skirting_flag==1)
    13be:	81 e0       	ldi	r24, 0x01	; 1
    13c0:	68 16       	cp	r6, r24
    13c2:	71 04       	cpc	r7, r1
    13c4:	19 f4       	brne	.+6      	; 0x13cc <main+0xe4>
		 {
			arm_z_linear();
    13c6:	0e 94 27 01 	call	0x24e	; 0x24e <arm_z_linear>
    13ca:	aa cf       	rjmp	.-172    	; 0x1320 <main+0x38>
		 }
				
		else
		 {
			 arm_y_linear();
    13cc:	5c d9       	rcall	.-3400   	; 0x686 <arm_y_linear>
    13ce:	a8 cf       	rjmp	.-176    	; 0x1320 <main+0x38>

000013d0 <motion_pin_config>:
    13d0:	81 b1       	in	r24, 0x01	; 1

//Stop the motor

void stop (void)
 { 
	motion_set (0x00);
    13d2:	8f 60       	ori	r24, 0x0F	; 15
    13d4:	81 b9       	out	0x01, r24	; 1
    13d6:	82 b1       	in	r24, 0x02	; 2
    13d8:	80 7f       	andi	r24, 0xF0	; 240
    13da:	82 b9       	out	0x02, r24	; 2
    13dc:	ea e0       	ldi	r30, 0x0A	; 10
    13de:	f1 e0       	ldi	r31, 0x01	; 1
    13e0:	80 81       	ld	r24, Z
    13e2:	88 61       	ori	r24, 0x18	; 24
    13e4:	80 83       	st	Z, r24
    13e6:	eb e0       	ldi	r30, 0x0B	; 11
    13e8:	f1 e0       	ldi	r31, 0x01	; 1
    13ea:	80 81       	ld	r24, Z
    13ec:	88 61       	ori	r24, 0x18	; 24
    13ee:	80 83       	st	Z, r24
    13f0:	08 95       	ret

000013f2 <motion_set>:
    13f2:	92 b1       	in	r25, 0x02	; 2
    13f4:	90 7f       	andi	r25, 0xF0	; 240
    13f6:	8f 70       	andi	r24, 0x0F	; 15
    13f8:	98 2b       	or	r25, r24
    13fa:	92 b9       	out	0x02, r25	; 2
    13fc:	08 95       	ret

000013fe <forward>:
    13fe:	cf 93       	push	r28
    1400:	df 93       	push	r29
    1402:	d8 2f       	mov	r29, r24
    1404:	c6 2f       	mov	r28, r22
    1406:	86 e0       	ldi	r24, 0x06	; 6
    1408:	f4 df       	rcall	.-24     	; 0x13f2 <motion_set>
    140a:	d0 93 28 01 	sts	0x0128, r29	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
    140e:	c0 93 2a 01 	sts	0x012A, r28	; 0x80012a <__TEXT_REGION_LENGTH__+0x70012a>
    1412:	df 91       	pop	r29
    1414:	cf 91       	pop	r28
    1416:	08 95       	ret

00001418 <right>:
    1418:	8a e0       	ldi	r24, 0x0A	; 10
    141a:	eb cf       	rjmp	.-42     	; 0x13f2 <motion_set>
    141c:	08 95       	ret

0000141e <right_degrees>:
 }

//Function to make a 90 degree right turn
void right_degrees(unsigned int Degrees)
 {
	right(); 
    141e:	fc df       	rcall	.-8      	; 0x1418 <right>
 }

//Velocity control
void velocity (unsigned char left_motor, unsigned char right_motor)
 {
	OCR5AL = (unsigned char)left_motor;
    1420:	82 e8       	ldi	r24, 0x82	; 130
    1422:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
	OCR5BL = (unsigned char)right_motor;
    1426:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <__TEXT_REGION_LENGTH__+0x70012a>
    142a:	08 95       	ret

0000142c <pid_speed_control>:

int pid_speed_control(int setpoint, int process_variable)
 {
	//The goal of this module is to maintain the orientation of the robot by controlling only the right motor, marginally speeding it up or slowing it down as required.
		int error=0, correction =0, kp=2;
		error=setpoint-process_variable;
    142c:	86 1b       	sub	r24, r22
    142e:	97 0b       	sbc	r25, r23
		//Note that is error > 1 then robot is moving away from the wall, if less than 1 then it is moving towards it.
		
		if (error > 1 || error < -1)
    1430:	9c 01       	movw	r18, r24
    1432:	2f 5f       	subi	r18, 0xFF	; 255
    1434:	3f 4f       	sbci	r19, 0xFF	; 255
    1436:	23 30       	cpi	r18, 0x03	; 3
    1438:	31 05       	cpc	r19, r1
    143a:	70 f0       	brcs	.+28     	; 0x1458 <pid_speed_control+0x2c>
		 {
			correction = kp*error;
    143c:	88 0f       	add	r24, r24
    143e:	99 1f       	adc	r25, r25
			// Saturation of PWM values
			if (correction > 130)
    1440:	83 38       	cpi	r24, 0x83	; 131
    1442:	91 05       	cpc	r25, r1
    1444:	14 f0       	brlt	.+4      	; 0x144a <pid_speed_control+0x1e>
			correction = 150;
    1446:	86 e9       	ldi	r24, 0x96	; 150
    1448:	90 e0       	ldi	r25, 0x00	; 0
    144a:	8a 3b       	cpi	r24, 0xBA	; 186
    144c:	2f ef       	ldi	r18, 0xFF	; 255
    144e:	92 07       	cpc	r25, r18
    1450:	2c f4       	brge	.+10     	; 0x145c <pid_speed_control+0x30>
    1452:	8a eb       	ldi	r24, 0xBA	; 186
    1454:	9f ef       	ldi	r25, 0xFF	; 255
    1456:	08 95       	ret
			correction = -70;
		 }
		 
		else
		 {
			correction=0;			
    1458:	80 e0       	ldi	r24, 0x00	; 0
    145a:	90 e0       	ldi	r25, 0x00	; 0
		 } 
	
		return correction;
 }
    145c:	08 95       	ret

0000145e <servo_pin_config>:
#include "Common_includes.h"
#include "Servo.h"

void servo_pin_config()
 {
	DDRB  = 0xE0;  //making PORTB 5,6,7 pin output
    145e:	80 ee       	ldi	r24, 0xE0	; 224
    1460:	84 b9       	out	0x04, r24	; 4
	PORTB = 0xE0; //setting PORTB 5 pin to logic 1
    1462:	85 b9       	out	0x05, r24	; 5
    1464:	08 95       	ret

00001466 <servo_1>:
//Function to move the base servo to specified degrees by converting it into appropriate timer values
void servo_1(unsigned char degrees1)
 {
	float PositionPanServo1 = 0;
	PositionPanServo1 = ((float)degrees1 * 0.5556) + 48.33;
	OCR1A = (uint16_t)PositionPanServo1;	
    1466:	68 2f       	mov	r22, r24
    1468:	70 e0       	ldi	r23, 0x00	; 0
    146a:	80 e0       	ldi	r24, 0x00	; 0
    146c:	90 e0       	ldi	r25, 0x00	; 0
    146e:	ec d3       	rcall	.+2008   	; 0x1c48 <__floatunsisf>
    1470:	2d ec       	ldi	r18, 0xCD	; 205
    1472:	3b e3       	ldi	r19, 0x3B	; 59
    1474:	4e e0       	ldi	r20, 0x0E	; 14
    1476:	5f e3       	ldi	r21, 0x3F	; 63
    1478:	e7 d4       	rcall	.+2510   	; 0x1e48 <__mulsf3>
    147a:	2c ee       	ldi	r18, 0xEC	; 236
    147c:	31 e5       	ldi	r19, 0x51	; 81
    147e:	41 e4       	ldi	r20, 0x41	; 65
    1480:	52 e4       	ldi	r21, 0x42	; 66
    1482:	e5 d2       	rcall	.+1482   	; 0x1a4e <__addsf3>
    1484:	b5 d3       	rcall	.+1898   	; 0x1bf0 <__fixunssfsi>
    1486:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
    148a:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
    148e:	08 95       	ret

00001490 <servo_2>:
//Function to move the right servo to specified degrees by converting it into appropriate timer values
void servo_2(unsigned char degrees2)
 {
	float PositionPanServo2 = 0;
	PositionPanServo2 = ((float)degrees2 * 0.5556) + 48.33;
	OCR1B = (uint16_t)PositionPanServo2;
    1490:	68 2f       	mov	r22, r24
    1492:	70 e0       	ldi	r23, 0x00	; 0
    1494:	80 e0       	ldi	r24, 0x00	; 0
    1496:	90 e0       	ldi	r25, 0x00	; 0
    1498:	d7 d3       	rcall	.+1966   	; 0x1c48 <__floatunsisf>
    149a:	2d ec       	ldi	r18, 0xCD	; 205
    149c:	3b e3       	ldi	r19, 0x3B	; 59
    149e:	4e e0       	ldi	r20, 0x0E	; 14
    14a0:	5f e3       	ldi	r21, 0x3F	; 63
    14a2:	d2 d4       	rcall	.+2468   	; 0x1e48 <__mulsf3>
    14a4:	2c ee       	ldi	r18, 0xEC	; 236
    14a6:	31 e5       	ldi	r19, 0x51	; 81
    14a8:	41 e4       	ldi	r20, 0x41	; 65
    14aa:	52 e4       	ldi	r21, 0x42	; 66
    14ac:	d0 d2       	rcall	.+1440   	; 0x1a4e <__addsf3>
    14ae:	a0 d3       	rcall	.+1856   	; 0x1bf0 <__fixunssfsi>
    14b0:	70 93 8b 00 	sts	0x008B, r23	; 0x80008b <__TEXT_REGION_LENGTH__+0x70008b>
    14b4:	60 93 8a 00 	sts	0x008A, r22	; 0x80008a <__TEXT_REGION_LENGTH__+0x70008a>
    14b8:	08 95       	ret

000014ba <servo_3>:
//Function to move the left servo to specified degrees by converting it into appropriate timer values
void servo_3(unsigned char degrees3)
 {
	float PositionPanServo3 = 0;
	PositionPanServo3 = ((float)degrees3 * 0.5556) + 48.33;
	OCR1C = (uint16_t)PositionPanServo3;	
    14ba:	68 2f       	mov	r22, r24
    14bc:	70 e0       	ldi	r23, 0x00	; 0
    14be:	80 e0       	ldi	r24, 0x00	; 0
    14c0:	90 e0       	ldi	r25, 0x00	; 0
    14c2:	c2 d3       	rcall	.+1924   	; 0x1c48 <__floatunsisf>
    14c4:	2d ec       	ldi	r18, 0xCD	; 205
    14c6:	3b e3       	ldi	r19, 0x3B	; 59
    14c8:	4e e0       	ldi	r20, 0x0E	; 14
    14ca:	5f e3       	ldi	r21, 0x3F	; 63
    14cc:	bd d4       	rcall	.+2426   	; 0x1e48 <__mulsf3>
    14ce:	2c ee       	ldi	r18, 0xEC	; 236
    14d0:	31 e5       	ldi	r19, 0x51	; 81
    14d2:	41 e4       	ldi	r20, 0x41	; 65
    14d4:	52 e4       	ldi	r21, 0x42	; 66
    14d6:	bb d2       	rcall	.+1398   	; 0x1a4e <__addsf3>
    14d8:	8b d3       	rcall	.+1814   	; 0x1bf0 <__fixunssfsi>
    14da:	70 93 8d 00 	sts	0x008D, r23	; 0x80008d <__TEXT_REGION_LENGTH__+0x70008d>
    14de:	60 93 8c 00 	sts	0x008C, r22	; 0x80008c <__TEXT_REGION_LENGTH__+0x70008c>
    14e2:	08 95       	ret

000014e4 <distance_IRF>:
float dist2=0,filter_array2[lengthF],sum2=0;
unsigned char ADC_value2;
int i2=0,j2=0,filtered_distance2=0;

int distance_IRF()
 {
    14e4:	cf 92       	push	r12
    14e6:	df 92       	push	r13
    14e8:	ef 92       	push	r14
    14ea:	ff 92       	push	r15
    14ec:	0f 93       	push	r16
    14ee:	1f 93       	push	r17
    14f0:	cf 93       	push	r28
    14f2:	df 93       	push	r29
	ADC_value2=ADC_Conversion(11);
    14f4:	8b e0       	ldi	r24, 0x0B	; 11
    14f6:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <ADC_Conversion>
    14fa:	80 93 54 02 	sts	0x0254, r24	; 0x800254 <ADC_value2>
	dist2 = (2799.6*(1/(pow(ADC_value2,1.1546))));
    14fe:	68 2f       	mov	r22, r24
    1500:	70 e0       	ldi	r23, 0x00	; 0
    1502:	80 e0       	ldi	r24, 0x00	; 0
    1504:	90 e0       	ldi	r25, 0x00	; 0
    1506:	a0 d3       	rcall	.+1856   	; 0x1c48 <__floatunsisf>
    1508:	2f ee       	ldi	r18, 0xEF	; 239
    150a:	39 ec       	ldi	r19, 0xC9	; 201
    150c:	43 e9       	ldi	r20, 0x93	; 147
    150e:	5f e3       	ldi	r21, 0x3F	; 63
    1510:	fe d4       	rcall	.+2556   	; 0x1f0e <pow>
    1512:	9b 01       	movw	r18, r22
    1514:	ac 01       	movw	r20, r24
    1516:	60 e0       	ldi	r22, 0x00	; 0
    1518:	70 e0       	ldi	r23, 0x00	; 0
    151a:	80 e8       	ldi	r24, 0x80	; 128
    151c:	9f e3       	ldi	r25, 0x3F	; 63
    151e:	fb d2       	rcall	.+1526   	; 0x1b16 <__divsf3>
    1520:	2a e9       	ldi	r18, 0x9A	; 154
    1522:	39 ef       	ldi	r19, 0xF9	; 249
    1524:	4e e2       	ldi	r20, 0x2E	; 46
    1526:	55 e4       	ldi	r21, 0x45	; 69
    1528:	8f d4       	rcall	.+2334   	; 0x1e48 <__mulsf3>
    152a:	60 93 10 02 	sts	0x0210, r22	; 0x800210 <dist2>
    152e:	70 93 11 02 	sts	0x0211, r23	; 0x800211 <dist2+0x1>
    1532:	80 93 12 02 	sts	0x0212, r24	; 0x800212 <dist2+0x2>
    1536:	90 93 13 02 	sts	0x0213, r25	; 0x800213 <dist2+0x3>
	filter_array2[i2]=dist2;
    153a:	20 91 0a 02 	lds	r18, 0x020A	; 0x80020a <i2>
    153e:	30 91 0b 02 	lds	r19, 0x020B	; 0x80020b <i2+0x1>
    1542:	f9 01       	movw	r30, r18
    1544:	ee 0f       	add	r30, r30
    1546:	ff 1f       	adc	r31, r31
    1548:	ee 0f       	add	r30, r30
    154a:	ff 1f       	adc	r31, r31
    154c:	e8 5b       	subi	r30, 0xB8	; 184
    154e:	fd 4f       	sbci	r31, 0xFD	; 253
    1550:	60 83       	st	Z, r22
    1552:	71 83       	std	Z+1, r23	; 0x01
    1554:	82 83       	std	Z+2, r24	; 0x02
    1556:	93 83       	std	Z+3, r25	; 0x03
	i2++;
    1558:	c9 01       	movw	r24, r18
    155a:	01 96       	adiw	r24, 0x01	; 1
	
	if (i2>lengthF-1)
    155c:	83 30       	cpi	r24, 0x03	; 3
    155e:	91 05       	cpc	r25, r1
    1560:	2c f4       	brge	.+10     	; 0x156c <distance_IRF+0x88>
int distance_IRF()
 {
	ADC_value2=ADC_Conversion(11);
	dist2 = (2799.6*(1/(pow(ADC_value2,1.1546))));
	filter_array2[i2]=dist2;
	i2++;
    1562:	90 93 0b 02 	sts	0x020B, r25	; 0x80020b <i2+0x1>
    1566:	80 93 0a 02 	sts	0x020A, r24	; 0x80020a <i2>
    156a:	3f c0       	rjmp	.+126    	; 0x15ea <distance_IRF+0x106>
	
	if (i2>lengthF-1)
 	 {
		i2=lengthF-1;
    156c:	02 e0       	ldi	r16, 0x02	; 2
    156e:	10 e0       	ldi	r17, 0x00	; 0
    1570:	10 93 0b 02 	sts	0x020B, r17	; 0x80020b <i2+0x1>
    1574:	00 93 0a 02 	sts	0x020A, r16	; 0x80020a <i2>
		
		for (j2=0;j2<lengthF-1;j2++)
		 {	sum2=sum2+filter_array2[j2];
    1578:	c8 e4       	ldi	r28, 0x48	; 72
    157a:	d2 e0       	ldi	r29, 0x02	; 2
    157c:	28 81       	ld	r18, Y
    157e:	39 81       	ldd	r19, Y+1	; 0x01
    1580:	4a 81       	ldd	r20, Y+2	; 0x02
    1582:	5b 81       	ldd	r21, Y+3	; 0x03
    1584:	60 91 0c 02 	lds	r22, 0x020C	; 0x80020c <sum2>
    1588:	70 91 0d 02 	lds	r23, 0x020D	; 0x80020d <sum2+0x1>
    158c:	80 91 0e 02 	lds	r24, 0x020E	; 0x80020e <sum2+0x2>
    1590:	90 91 0f 02 	lds	r25, 0x020F	; 0x80020f <sum2+0x3>
    1594:	5c d2       	rcall	.+1208   	; 0x1a4e <__addsf3>
			filter_array2[j2]=filter_array2[j2+1];
    1596:	2c 81       	ldd	r18, Y+4	; 0x04
    1598:	3d 81       	ldd	r19, Y+5	; 0x05
    159a:	4e 81       	ldd	r20, Y+6	; 0x06
    159c:	5f 81       	ldd	r21, Y+7	; 0x07
    159e:	28 83       	st	Y, r18
    15a0:	39 83       	std	Y+1, r19	; 0x01
    15a2:	4a 83       	std	Y+2, r20	; 0x02
    15a4:	5b 83       	std	Y+3, r21	; 0x03
    15a6:	c8 84       	ldd	r12, Y+8	; 0x08
    15a8:	d9 84       	ldd	r13, Y+9	; 0x09
    15aa:	ea 84       	ldd	r14, Y+10	; 0x0a
    15ac:	fb 84       	ldd	r15, Y+11	; 0x0b
    15ae:	cc 82       	std	Y+4, r12	; 0x04
    15b0:	dd 82       	std	Y+5, r13	; 0x05
    15b2:	ee 82       	std	Y+6, r14	; 0x06
    15b4:	ff 82       	std	Y+7, r15	; 0x07
    15b6:	10 93 09 02 	sts	0x0209, r17	; 0x800209 <j2+0x1>
		 }
		sum2=sum2+filter_array2[lengthF-1];
		filtered_distance2=sum2/(lengthF);
    15ba:	00 93 08 02 	sts	0x0208, r16	; 0x800208 <j2>
    15be:	47 d2       	rcall	.+1166   	; 0x1a4e <__addsf3>
    15c0:	a7 01       	movw	r20, r14
    15c2:	96 01       	movw	r18, r12
    15c4:	44 d2       	rcall	.+1160   	; 0x1a4e <__addsf3>
    15c6:	20 e0       	ldi	r18, 0x00	; 0
    15c8:	30 e0       	ldi	r19, 0x00	; 0
    15ca:	40 e4       	ldi	r20, 0x40	; 64
    15cc:	50 e4       	ldi	r21, 0x40	; 64
    15ce:	a3 d2       	rcall	.+1350   	; 0x1b16 <__divsf3>
    15d0:	0a d3       	rcall	.+1556   	; 0x1be6 <__fixsfsi>
    15d2:	70 93 07 02 	sts	0x0207, r23	; 0x800207 <filtered_distance2+0x1>
    15d6:	60 93 06 02 	sts	0x0206, r22	; 0x800206 <filtered_distance2>
		sum2=0;
    15da:	10 92 0c 02 	sts	0x020C, r1	; 0x80020c <sum2>
    15de:	10 92 0d 02 	sts	0x020D, r1	; 0x80020d <sum2+0x1>
    15e2:	10 92 0e 02 	sts	0x020E, r1	; 0x80020e <sum2+0x2>
    15e6:	10 92 0f 02 	sts	0x020F, r1	; 0x80020f <sum2+0x3>
	 }
//	lcd_cursor(1,7);
//	lcd_string("IRFr");
//	lcd_print(2,8,filtered_distance2,2);
	return filtered_distance2;
    15ea:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <filtered_distance2>
    15ee:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <filtered_distance2+0x1>
    15f2:	df 91       	pop	r29
    15f4:	cf 91       	pop	r28
    15f6:	1f 91       	pop	r17
    15f8:	0f 91       	pop	r16
    15fa:	ff 90       	pop	r15
    15fc:	ef 90       	pop	r14
    15fe:	df 90       	pop	r13
    1600:	cf 90       	pop	r12
    1602:	08 95       	ret

00001604 <timer1_init>:
// Prescale:256
// PWM 10bit fast, TOP=0x03FF
// Timer Frequency:56.000Hz
void timer1_init()
{
 TCCR1B = 0x00; //stop
    1604:	e1 e8       	ldi	r30, 0x81	; 129
    1606:	f0 e0       	ldi	r31, 0x00	; 0
    1608:	10 82       	st	Z, r1
 TCNT1H = 0x00; //Counter high value to which OCR1xH value is to be compared with
    160a:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
 TCNT1L = 0x00;	//Counter low value to which OCR1xH value is to be compared with
    160e:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>
 OCR1AH = 0x00;	//Output compare Register high value for servo 1
    1612:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
 OCR1AL = 0x61;	//Output Compare Register low Value For servo 1
    1616:	81 e6       	ldi	r24, 0x61	; 97
    1618:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
 OCR1BH = 0x00;	//Output compare Register high value for servo 2
    161c:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x70008b>
 OCR1BL = 0x61;	//Output Compare Register low Value For servo 2
    1620:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x70008a>
 OCR1CH = 0x00;	//Output compare Register high value for servo 3
    1624:	10 92 8d 00 	sts	0x008D, r1	; 0x80008d <__TEXT_REGION_LENGTH__+0x70008d>
 OCR1CL = 0x61;	//Output Compare Register low Value For servo 3
    1628:	80 93 8c 00 	sts	0x008C, r24	; 0x80008c <__TEXT_REGION_LENGTH__+0x70008c>
 TCCR1A = 0xAB; /*{COM1A1=1, COM1A0=0; COM1B1=1, COM1B0=0; COM1C1=1 COM1C0=0}
    162c:	8b ea       	ldi	r24, 0xAB	; 171
    162e:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
 					For Overriding normal port functionality to OCRnA outputs.
				  {WGM11=1, WGM10=1} Along With WGM12 in TCCR1B for Selecting FAST PWM Mode*/
 TCCR1C = 0x00;
    1632:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__TEXT_REGION_LENGTH__+0x700082>
 TCCR1B = 0x0C; //WGM12=1; CS12=1, CS11=0, CS10=0 (Prescaler=256)
    1636:	8c e0       	ldi	r24, 0x0C	; 12
    1638:	80 83       	st	Z, r24
    163a:	08 95       	ret

0000163c <timer4_init>:

// Timer 4 initialized in normal mode for ultrasound sensor
// Prescale:256
void timer4_init()
{
	TCNT4 = 0;
    163c:	10 92 a5 00 	sts	0x00A5, r1	; 0x8000a5 <__TEXT_REGION_LENGTH__+0x7000a5>
    1640:	10 92 a4 00 	sts	0x00A4, r1	; 0x8000a4 <__TEXT_REGION_LENGTH__+0x7000a4>
	TCCR4A = 0x00;
    1644:	10 92 a0 00 	sts	0x00A0, r1	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
	TCCR4B = (0<<CS40) | (0<<CS41) | (1<<CS42);  // Timer mode with 256 prescler
    1648:	84 e0       	ldi	r24, 0x04	; 4
    164a:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>
	sei();
    164e:	78 94       	sei
    1650:	08 95       	ret

00001652 <timer5_init>:
// Prescale:256
// PWM 8bit fast, TOP=0x00FF
// Timer Frequency:225.000Hz
void timer5_init()
{
	TCCR5B = 0x00;	//Stop
    1652:	e1 e2       	ldi	r30, 0x21	; 33
    1654:	f1 e0       	ldi	r31, 0x01	; 1
    1656:	10 82       	st	Z, r1
	TCNT5H = 0xFF;	//Counter higher 8-bit value to which OCR5xH value is compared with
    1658:	8f ef       	ldi	r24, 0xFF	; 255
    165a:	80 93 25 01 	sts	0x0125, r24	; 0x800125 <__TEXT_REGION_LENGTH__+0x700125>
	TCNT5L = 0x01;	//Counter lower 8-bit value to which OCR5xH value is compared with
    165e:	91 e0       	ldi	r25, 0x01	; 1
    1660:	90 93 24 01 	sts	0x0124, r25	; 0x800124 <__TEXT_REGION_LENGTH__+0x700124>
	OCR5AH = 0x00;	//Output compare register high value for Left Motor
    1664:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
	OCR5AL = 0xFF;	//Output compare register low value for Left Motor
    1668:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
	OCR5BH = 0x00;	//Output compare register high value for Right Motor
    166c:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <__TEXT_REGION_LENGTH__+0x70012b>
	OCR5BL = 0xFF;	//Output compare register low value for Right Motor
    1670:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <__TEXT_REGION_LENGTH__+0x70012a>
	OCR5CH = 0x00;	//Output compare register high value for Motor C1
    1674:	10 92 2d 01 	sts	0x012D, r1	; 0x80012d <__TEXT_REGION_LENGTH__+0x70012d>
	OCR5CL = 0xFF;	//Output compare register low value for Motor C1
    1678:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <__TEXT_REGION_LENGTH__+0x70012c>
	TCCR5A = 0xA9;	/*{COM5A1=1, COM5A0=0; COM5B1=1, COM5B0=0; COM5C1=1 COM5C0=0}
    167c:	89 ea       	ldi	r24, 0xA9	; 169
    167e:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>
 					  For Overriding normal port functionality to OCRnA outputs.
				  	  {WGM51=0, WGM50=1} Along With WGM52 in TCCR5B for Selecting FAST PWM 8-bit Mode*/
	
	TCCR5B = 0x0B;	//WGM12=1; CS12=0, CS11=1, CS10=1 (Prescaler=64)
    1682:	8b e0       	ldi	r24, 0x0B	; 11
    1684:	80 83       	st	Z, r24
    1686:	08 95       	ret

00001688 <ultrasound_config>:
float dist4=0,filter_array4[length],sum4=0;
int i4=0,j4=0,filtered_distance4=0;

void ultrasound_config()
{
	DDRJ = 0x3F;  //PJ0-5 as output and PJ6-7 as input
    1688:	8f e3       	ldi	r24, 0x3F	; 63
    168a:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x700104>
	PORTJ = 0x00; //Output is set to 0
    168e:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__TEXT_REGION_LENGTH__+0x700105>
    1692:	08 95       	ret

00001694 <ultrasound1_trigger>:
//PJ6 ----> Echo2

//Function to make the trigger pin high for a very short duration
void ultrasound1_trigger()
{	
	PORTJ = 0x04;
    1694:	e5 e0       	ldi	r30, 0x05	; 5
    1696:	f1 e0       	ldi	r31, 0x01	; 1
    1698:	84 e0       	ldi	r24, 0x04	; 4
    169a:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    169c:	86 ef       	ldi	r24, 0xF6	; 246
    169e:	8a 95       	dec	r24
    16a0:	f1 f7       	brne	.-4      	; 0x169e <ultrasound1_trigger+0xa>
	_delay_us(50);
	PORTJ = 0x00;
    16a2:	10 82       	st	Z, r1
    16a4:	81 e3       	ldi	r24, 0x31	; 49
    16a6:	8a 95       	dec	r24
    16a8:	f1 f7       	brne	.-4      	; 0x16a6 <ultrasound1_trigger+0x12>
    16aa:	00 00       	nop
    16ac:	08 95       	ret

000016ae <ultrasound2_trigger>:
}

//Function to make the trigger pin high for a very short duration
void ultrasound2_trigger()
{
	PORTJ = 0x08;
    16ae:	e5 e0       	ldi	r30, 0x05	; 5
    16b0:	f1 e0       	ldi	r31, 0x01	; 1
    16b2:	88 e0       	ldi	r24, 0x08	; 8
    16b4:	80 83       	st	Z, r24
    16b6:	86 ef       	ldi	r24, 0xF6	; 246
    16b8:	8a 95       	dec	r24
    16ba:	f1 f7       	brne	.-4      	; 0x16b8 <ultrasound2_trigger+0xa>
	_delay_us(50);
	PORTJ = 0x00;
    16bc:	10 82       	st	Z, r1
    16be:	81 e3       	ldi	r24, 0x31	; 49
    16c0:	8a 95       	dec	r24
    16c2:	f1 f7       	brne	.-4      	; 0x16c0 <ultrasound2_trigger+0x12>
    16c4:	00 00       	nop
    16c6:	08 95       	ret

000016c8 <distance1_us>:
	_delay_us(10);
}

//Function to calculate the distance
int distance1_us()
 {	
    16c8:	0f 93       	push	r16
    16ca:	1f 93       	push	r17
    16cc:	cf 93       	push	r28
    16ce:	df 93       	push	r29
	ultrasound1_trigger();
    16d0:	e1 df       	rcall	.-62     	; 0x1694 <ultrasound1_trigger>
	TIFR4=0x01;
    16d2:	81 e0       	ldi	r24, 0x01	; 1
    16d4:	89 bb       	out	0x19, r24	; 25
	
	while ( (TIFR4 & 0x01) == 0x00 )
	{
		if ( ((PINJ & 0x80) == 0x00) && us_flag1==0 ) //Echo is low
    16d6:	e3 e0       	ldi	r30, 0x03	; 3
    16d8:	f1 e0       	ldi	r31, 0x01	; 1
			TCNT4=0;
		}
		
		if ( ((PINJ & 0x80) == 0x80) && us_flag1==0 ) //Echo goes from low to high, timer starts
		{
			TCNT4=0;
    16da:	a4 ea       	ldi	r26, 0xA4	; 164
    16dc:	b0 e0       	ldi	r27, 0x00	; 0
			us_flag1=1;
    16de:	21 e0       	ldi	r18, 0x01	; 1
    16e0:	30 e0       	ldi	r19, 0x00	; 0
int distance1_us()
 {	
	ultrasound1_trigger();
	TIFR4=0x01;
	
	while ( (TIFR4 & 0x01) == 0x00 )
    16e2:	83 c0       	rjmp	.+262    	; 0x17ea <distance1_us+0x122>
	{
		if ( ((PINJ & 0x80) == 0x00) && us_flag1==0 ) //Echo is low
    16e4:	80 81       	ld	r24, Z
    16e6:	88 23       	and	r24, r24
    16e8:	54 f0       	brlt	.+20     	; 0x16fe <distance1_us+0x36>
    16ea:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <us_flag1>
    16ee:	90 91 3b 02 	lds	r25, 0x023B	; 0x80023b <us_flag1+0x1>
    16f2:	89 2b       	or	r24, r25
    16f4:	09 f0       	breq	.+2      	; 0x16f8 <distance1_us+0x30>
    16f6:	ac c0       	rjmp	.+344    	; 0x1850 <distance1_us+0x188>
		{
			TCNT4=0;
    16f8:	11 96       	adiw	r26, 0x01	; 1
    16fa:	1c 92       	st	X, r1
    16fc:	1e 92       	st	-X, r1
		}
		
		if ( ((PINJ & 0x80) == 0x80) && us_flag1==0 ) //Echo goes from low to high, timer starts
    16fe:	80 81       	ld	r24, Z
    1700:	88 23       	and	r24, r24
    1702:	94 f4       	brge	.+36     	; 0x1728 <distance1_us+0x60>
    1704:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <us_flag1>
    1708:	90 91 3b 02 	lds	r25, 0x023B	; 0x80023b <us_flag1+0x1>
    170c:	89 2b       	or	r24, r25
    170e:	61 f4       	brne	.+24     	; 0x1728 <distance1_us+0x60>
		{
			TCNT4=0;
    1710:	11 96       	adiw	r26, 0x01	; 1
    1712:	1c 92       	st	X, r1
    1714:	1e 92       	st	-X, r1
			us_flag1=1;
    1716:	30 93 3b 02 	sts	0x023B, r19	; 0x80023b <us_flag1+0x1>
    171a:	20 93 3a 02 	sts	0x023A, r18	; 0x80023a <us_flag1>
		}
		
		if ( ((PINJ & 0x80) == 0x00) && us_flag1==1) //Echo goes from high to low, timer stops and the total time is calculated which is then used to calculate the distance
    171e:	80 81       	ld	r24, Z
    1720:	88 23       	and	r24, r24
    1722:	0c f4       	brge	.+2      	; 0x1726 <distance1_us+0x5e>
    1724:	62 c0       	rjmp	.+196    	; 0x17ea <distance1_us+0x122>
    1726:	0b c0       	rjmp	.+22     	; 0x173e <distance1_us+0x76>
    1728:	80 81       	ld	r24, Z
    172a:	88 23       	and	r24, r24
    172c:	0c f4       	brge	.+2      	; 0x1730 <distance1_us+0x68>
    172e:	5d c0       	rjmp	.+186    	; 0x17ea <distance1_us+0x122>
    1730:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <us_flag1>
    1734:	90 91 3b 02 	lds	r25, 0x023B	; 0x80023b <us_flag1+0x1>
    1738:	01 97       	sbiw	r24, 0x01	; 1
    173a:	09 f0       	breq	.+2      	; 0x173e <distance1_us+0x76>
    173c:	56 c0       	rjmp	.+172    	; 0x17ea <distance1_us+0x122>
		{
			us_time1= (TCNT4H*256) + TCNT4L;
    173e:	60 91 a5 00 	lds	r22, 0x00A5	; 0x8000a5 <__TEXT_REGION_LENGTH__+0x7000a5>
    1742:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__TEXT_REGION_LENGTH__+0x7000a4>
    1746:	70 e0       	ldi	r23, 0x00	; 0
    1748:	76 2f       	mov	r23, r22
    174a:	66 27       	eor	r22, r22
    174c:	68 0f       	add	r22, r24
    174e:	71 1d       	adc	r23, r1
    1750:	07 2e       	mov	r0, r23
    1752:	00 0c       	add	r0, r0
    1754:	88 0b       	sbc	r24, r24
    1756:	99 0b       	sbc	r25, r25
    1758:	79 d2       	rcall	.+1266   	; 0x1c4c <__floatsisf>
    175a:	60 93 32 02 	sts	0x0232, r22	; 0x800232 <us_time1>
    175e:	70 93 33 02 	sts	0x0233, r23	; 0x800233 <us_time1+0x1>
    1762:	80 93 34 02 	sts	0x0234, r24	; 0x800234 <us_time1+0x2>
    1766:	90 93 35 02 	sts	0x0235, r25	; 0x800235 <us_time1+0x3>
			us_dist1=(us_time1*33)/125;
    176a:	20 e0       	ldi	r18, 0x00	; 0
    176c:	30 e0       	ldi	r19, 0x00	; 0
    176e:	44 e0       	ldi	r20, 0x04	; 4
    1770:	52 e4       	ldi	r21, 0x42	; 66
    1772:	6a d3       	rcall	.+1748   	; 0x1e48 <__mulsf3>
    1774:	20 e0       	ldi	r18, 0x00	; 0
    1776:	30 e0       	ldi	r19, 0x00	; 0
    1778:	4a ef       	ldi	r20, 0xFA	; 250
    177a:	52 e4       	ldi	r21, 0x42	; 66
    177c:	cc d1       	rcall	.+920    	; 0x1b16 <__divsf3>
    177e:	60 93 36 02 	sts	0x0236, r22	; 0x800236 <us_dist1>
    1782:	70 93 37 02 	sts	0x0237, r23	; 0x800237 <us_dist1+0x1>
    1786:	80 93 38 02 	sts	0x0238, r24	; 0x800238 <us_dist1+0x2>
    178a:	90 93 39 02 	sts	0x0239, r25	; 0x800239 <us_dist1+0x3>
			us_dist_int1=floor(us_dist1);
    178e:	99 d2       	rcall	.+1330   	; 0x1cc2 <floor>
    1790:	2a d2       	rcall	.+1108   	; 0x1be6 <__fixsfsi>
    1792:	70 93 56 02 	sts	0x0256, r23	; 0x800256 <us_dist_int1+0x1>
    1796:	60 93 55 02 	sts	0x0255, r22	; 0x800255 <us_dist_int1>
    179a:	c0 91 2c 02 	lds	r28, 0x022C	; 0x80022c <i3>
			filter_array3[i3]=us_dist_int1;
    179e:	d0 91 2d 02 	lds	r29, 0x022D	; 0x80022d <i3+0x1>
    17a2:	8e 01       	movw	r16, r28
    17a4:	00 0f       	add	r16, r16
    17a6:	11 1f       	adc	r17, r17
    17a8:	00 0f       	add	r16, r16
    17aa:	11 1f       	adc	r17, r17
    17ac:	07 5a       	subi	r16, 0xA7	; 167
    17ae:	1d 4f       	sbci	r17, 0xFD	; 253
    17b0:	07 2e       	mov	r0, r23
    17b2:	00 0c       	add	r0, r0
    17b4:	88 0b       	sbc	r24, r24
    17b6:	99 0b       	sbc	r25, r25
    17b8:	49 d2       	rcall	.+1170   	; 0x1c4c <__floatsisf>
    17ba:	f8 01       	movw	r30, r16
    17bc:	60 83       	st	Z, r22
    17be:	71 83       	std	Z+1, r23	; 0x01
    17c0:	82 83       	std	Z+2, r24	; 0x02
    17c2:	93 83       	std	Z+3, r25	; 0x03
    17c4:	21 96       	adiw	r28, 0x01	; 1
			i3++;
    17c6:	d0 93 2d 02 	sts	0x022D, r29	; 0x80022d <i3+0x1>
    17ca:	c0 93 2c 02 	sts	0x022C, r28	; 0x80022c <i3>
    17ce:	81 e0       	ldi	r24, 0x01	; 1
			break;
		}
			
	}
	TIFR4=0x01;
    17d0:	89 bb       	out	0x19, r24	; 25
    17d2:	10 92 3b 02 	sts	0x023B, r1	; 0x80023b <us_flag1+0x1>
	us_flag1=0;
    17d6:	10 92 3a 02 	sts	0x023A, r1	; 0x80023a <us_flag1>
    17da:	80 91 2c 02 	lds	r24, 0x022C	; 0x80022c <i3>
	
	if (i3>length-1)
    17de:	90 91 2d 02 	lds	r25, 0x022D	; 0x80022d <i3+0x1>
    17e2:	18 16       	cp	r1, r24
    17e4:	19 06       	cpc	r1, r25
    17e6:	24 f0       	brlt	.+8      	; 0x17f0 <distance1_us+0x128>
    17e8:	2e c0       	rjmp	.+92     	; 0x1846 <distance1_us+0x17e>
    17ea:	c8 9b       	sbis	0x19, 0	; 25
int distance1_us()
 {	
	ultrasound1_trigger();
	TIFR4=0x01;
	
	while ( (TIFR4 & 0x01) == 0x00 )
    17ec:	7b cf       	rjmp	.-266    	; 0x16e4 <distance1_us+0x1c>
    17ee:	3b c0       	rjmp	.+118    	; 0x1866 <distance1_us+0x19e>
    17f0:	10 92 2d 02 	sts	0x022D, r1	; 0x80022d <i3+0x1>
	TIFR4=0x01;
	us_flag1=0;
	
	if (i3>length-1)
	{
		i3=length-1;
    17f4:	10 92 2c 02 	sts	0x022C, r1	; 0x80022c <i3>
    17f8:	10 92 2b 02 	sts	0x022B, r1	; 0x80022b <j3+0x1>
		
		for (j3=0;j3<length-1;j3++)
    17fc:	10 92 2a 02 	sts	0x022A, r1	; 0x80022a <j3>
    1800:	20 91 2e 02 	lds	r18, 0x022E	; 0x80022e <sum3>
		{	sum3=sum3+filter_array3[j3];
			filter_array3[j3]=filter_array3[j3+1];
		}
		sum3=sum3+filter_array3[length-1];
		filtered_distance3=(sum3/(length)) + 5;
    1804:	30 91 2f 02 	lds	r19, 0x022F	; 0x80022f <sum3+0x1>
    1808:	40 91 30 02 	lds	r20, 0x0230	; 0x800230 <sum3+0x2>
    180c:	50 91 31 02 	lds	r21, 0x0231	; 0x800231 <sum3+0x3>
    1810:	60 91 59 02 	lds	r22, 0x0259	; 0x800259 <filter_array3>
    1814:	70 91 5a 02 	lds	r23, 0x025A	; 0x80025a <filter_array3+0x1>
    1818:	80 91 5b 02 	lds	r24, 0x025B	; 0x80025b <filter_array3+0x2>
    181c:	90 91 5c 02 	lds	r25, 0x025C	; 0x80025c <filter_array3+0x3>
    1820:	16 d1       	rcall	.+556    	; 0x1a4e <__addsf3>
    1822:	20 e0       	ldi	r18, 0x00	; 0
    1824:	30 e0       	ldi	r19, 0x00	; 0
    1826:	40 ea       	ldi	r20, 0xA0	; 160
    1828:	50 e4       	ldi	r21, 0x40	; 64
    182a:	11 d1       	rcall	.+546    	; 0x1a4e <__addsf3>
    182c:	dc d1       	rcall	.+952    	; 0x1be6 <__fixsfsi>
    182e:	70 93 29 02 	sts	0x0229, r23	; 0x800229 <filtered_distance3+0x1>
    1832:	60 93 28 02 	sts	0x0228, r22	; 0x800228 <filtered_distance3>
    1836:	10 92 2e 02 	sts	0x022E, r1	; 0x80022e <sum3>
		sum3=0;
    183a:	10 92 2f 02 	sts	0x022F, r1	; 0x80022f <sum3+0x1>
    183e:	10 92 30 02 	sts	0x0230, r1	; 0x800230 <sum3+0x2>
    1842:	10 92 31 02 	sts	0x0231, r1	; 0x800231 <sum3+0x3>
    1846:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <filtered_distance3>
	}
	
//	lcd_cursor(1,1);
//	lcd_string("USLe1");
//	lcd_print(2,2,filtered_distance3,2);
	return filtered_distance3;	
    184a:	90 91 29 02 	lds	r25, 0x0229	; 0x800229 <filtered_distance3+0x1>
    184e:	19 c0       	rjmp	.+50     	; 0x1882 <distance1_us+0x1ba>
    1850:	80 81       	ld	r24, Z
		if ( ((PINJ & 0x80) == 0x00) && us_flag1==0 ) //Echo is low
		{
			TCNT4=0;
		}
		
		if ( ((PINJ & 0x80) == 0x80) && us_flag1==0 ) //Echo goes from low to high, timer starts
    1852:	6a cf       	rjmp	.-300    	; 0x1728 <distance1_us+0x60>
    1854:	10 92 2d 02 	sts	0x022D, r1	; 0x80022d <i3+0x1>
	TIFR4=0x01;
	us_flag1=0;
	
	if (i3>length-1)
	{
		i3=length-1;
    1858:	10 92 2c 02 	sts	0x022C, r1	; 0x80022c <i3>
    185c:	10 92 2b 02 	sts	0x022B, r1	; 0x80022b <j3+0x1>
		
		for (j3=0;j3<length-1;j3++)
    1860:	10 92 2a 02 	sts	0x022A, r1	; 0x80022a <j3>
    1864:	cd cf       	rjmp	.-102    	; 0x1800 <distance1_us+0x138>
    1866:	81 e0       	ldi	r24, 0x01	; 1
			i3++;
			break;
		}
			
	}
	TIFR4=0x01;
    1868:	89 bb       	out	0x19, r24	; 25
    186a:	10 92 3b 02 	sts	0x023B, r1	; 0x80023b <us_flag1+0x1>
	us_flag1=0;
    186e:	10 92 3a 02 	sts	0x023A, r1	; 0x80023a <us_flag1>
    1872:	80 91 2c 02 	lds	r24, 0x022C	; 0x80022c <i3>
	
	if (i3>length-1)
    1876:	90 91 2d 02 	lds	r25, 0x022D	; 0x80022d <i3+0x1>
    187a:	18 16       	cp	r1, r24
    187c:	19 06       	cpc	r1, r25
    187e:	1c f7       	brge	.-58     	; 0x1846 <distance1_us+0x17e>
    1880:	e9 cf       	rjmp	.-46     	; 0x1854 <distance1_us+0x18c>
    1882:	df 91       	pop	r29
	
//	lcd_cursor(1,1);
//	lcd_string("USLe1");
//	lcd_print(2,2,filtered_distance3,2);
	return filtered_distance3;	
 }
    1884:	cf 91       	pop	r28
    1886:	1f 91       	pop	r17
    1888:	0f 91       	pop	r16
    188a:	08 95       	ret

0000188c <distance2_us>:
    188c:	0f 93       	push	r16
 
 int distance2_us()
 {
    188e:	1f 93       	push	r17
    1890:	cf 93       	push	r28
    1892:	df 93       	push	r29
	 ultrasound2_trigger();
    1894:	0c df       	rcall	.-488    	; 0x16ae <ultrasound2_trigger>
	 TIFR4=0x01;
    1896:	81 e0       	ldi	r24, 0x01	; 1
    1898:	89 bb       	out	0x19, r24	; 25
	 
	 while ( (TIFR4 & 0x01) == 0x00 )
	 {
		 if ( ((PINJ & 0x40) == 0x00) && us_flag2==0 )
    189a:	e3 e0       	ldi	r30, 0x03	; 3
    189c:	f1 e0       	ldi	r31, 0x01	; 1
			 TCNT4=0;
		 }
		 
		 if ( ((PINJ & 0x40) == 0x40) && us_flag2==0 )
		 {
			 TCNT4=0;
    189e:	a4 ea       	ldi	r26, 0xA4	; 164
    18a0:	b0 e0       	ldi	r27, 0x00	; 0
			 us_flag2=1;
    18a2:	21 e0       	ldi	r18, 0x01	; 1
    18a4:	30 e0       	ldi	r19, 0x00	; 0
 int distance2_us()
 {
	 ultrasound2_trigger();
	 TIFR4=0x01;
	 
	 while ( (TIFR4 & 0x01) == 0x00 )
    18a6:	81 c0       	rjmp	.+258    	; 0x19aa <distance2_us+0x11e>
	 {
		 if ( ((PINJ & 0x40) == 0x00) && us_flag2==0 )
    18a8:	80 81       	ld	r24, Z
    18aa:	86 fd       	sbrc	r24, 6
    18ac:	0a c0       	rjmp	.+20     	; 0x18c2 <distance2_us+0x36>
    18ae:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <us_flag2>
    18b2:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <us_flag2+0x1>
    18b6:	89 2b       	or	r24, r25
    18b8:	09 f0       	breq	.+2      	; 0x18bc <distance2_us+0x30>
    18ba:	aa c0       	rjmp	.+340    	; 0x1a10 <distance2_us+0x184>
		 {
			 TCNT4=0;
    18bc:	11 96       	adiw	r26, 0x01	; 1
    18be:	1c 92       	st	X, r1
    18c0:	1e 92       	st	-X, r1
		 }
		 
		 if ( ((PINJ & 0x40) == 0x40) && us_flag2==0 )
    18c2:	80 81       	ld	r24, Z
    18c4:	86 ff       	sbrs	r24, 6
    18c6:	11 c0       	rjmp	.+34     	; 0x18ea <distance2_us+0x5e>
    18c8:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <us_flag2>
    18cc:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <us_flag2+0x1>
    18d0:	89 2b       	or	r24, r25
    18d2:	59 f4       	brne	.+22     	; 0x18ea <distance2_us+0x5e>
		 {
			 TCNT4=0;
    18d4:	11 96       	adiw	r26, 0x01	; 1
    18d6:	1c 92       	st	X, r1
    18d8:	1e 92       	st	-X, r1
			 us_flag2=1;
    18da:	30 93 27 02 	sts	0x0227, r19	; 0x800227 <us_flag2+0x1>
    18de:	20 93 26 02 	sts	0x0226, r18	; 0x800226 <us_flag2>
		 }
		 
		 if ( ((PINJ & 0x40) == 0x00) && us_flag2==1)
    18e2:	80 81       	ld	r24, Z
    18e4:	86 fd       	sbrc	r24, 6
    18e6:	61 c0       	rjmp	.+194    	; 0x19aa <distance2_us+0x11e>
    18e8:	0a c0       	rjmp	.+20     	; 0x18fe <distance2_us+0x72>
    18ea:	80 81       	ld	r24, Z
    18ec:	86 fd       	sbrc	r24, 6
    18ee:	5d c0       	rjmp	.+186    	; 0x19aa <distance2_us+0x11e>
    18f0:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <us_flag2>
    18f4:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <us_flag2+0x1>
    18f8:	01 97       	sbiw	r24, 0x01	; 1
    18fa:	09 f0       	breq	.+2      	; 0x18fe <distance2_us+0x72>
    18fc:	56 c0       	rjmp	.+172    	; 0x19aa <distance2_us+0x11e>
		 {
			 us_time2= (TCNT4H*256) + TCNT4L;
    18fe:	60 91 a5 00 	lds	r22, 0x00A5	; 0x8000a5 <__TEXT_REGION_LENGTH__+0x7000a5>
    1902:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__TEXT_REGION_LENGTH__+0x7000a4>
    1906:	70 e0       	ldi	r23, 0x00	; 0
    1908:	76 2f       	mov	r23, r22
    190a:	66 27       	eor	r22, r22
    190c:	68 0f       	add	r22, r24
    190e:	71 1d       	adc	r23, r1
    1910:	07 2e       	mov	r0, r23
    1912:	00 0c       	add	r0, r0
    1914:	88 0b       	sbc	r24, r24
    1916:	99 0b       	sbc	r25, r25
    1918:	99 d1       	rcall	.+818    	; 0x1c4c <__floatsisf>
    191a:	60 93 1e 02 	sts	0x021E, r22	; 0x80021e <us_time2>
    191e:	70 93 1f 02 	sts	0x021F, r23	; 0x80021f <us_time2+0x1>
    1922:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <us_time2+0x2>
    1926:	90 93 21 02 	sts	0x0221, r25	; 0x800221 <us_time2+0x3>
			 us_dist2=(us_time2*33)/125;
    192a:	20 e0       	ldi	r18, 0x00	; 0
    192c:	30 e0       	ldi	r19, 0x00	; 0
    192e:	44 e0       	ldi	r20, 0x04	; 4
    1930:	52 e4       	ldi	r21, 0x42	; 66
    1932:	8a d2       	rcall	.+1300   	; 0x1e48 <__mulsf3>
    1934:	20 e0       	ldi	r18, 0x00	; 0
    1936:	30 e0       	ldi	r19, 0x00	; 0
    1938:	4a ef       	ldi	r20, 0xFA	; 250
    193a:	52 e4       	ldi	r21, 0x42	; 66
    193c:	ec d0       	rcall	.+472    	; 0x1b16 <__divsf3>
    193e:	60 93 22 02 	sts	0x0222, r22	; 0x800222 <us_dist2>
    1942:	70 93 23 02 	sts	0x0223, r23	; 0x800223 <us_dist2+0x1>
    1946:	80 93 24 02 	sts	0x0224, r24	; 0x800224 <us_dist2+0x2>
    194a:	90 93 25 02 	sts	0x0225, r25	; 0x800225 <us_dist2+0x3>
			 us_dist_int2=floor(us_dist2);
    194e:	b9 d1       	rcall	.+882    	; 0x1cc2 <floor>
    1950:	4a d1       	rcall	.+660    	; 0x1be6 <__fixsfsi>
    1952:	70 93 58 02 	sts	0x0258, r23	; 0x800258 <us_dist_int2+0x1>
    1956:	60 93 57 02 	sts	0x0257, r22	; 0x800257 <us_dist_int2>
    195a:	c0 91 18 02 	lds	r28, 0x0218	; 0x800218 <i4>
			 filter_array4[i4]=us_dist_int2;
    195e:	d0 91 19 02 	lds	r29, 0x0219	; 0x800219 <i4+0x1>
    1962:	8e 01       	movw	r16, r28
    1964:	00 0f       	add	r16, r16
    1966:	11 1f       	adc	r17, r17
    1968:	00 0f       	add	r16, r16
    196a:	11 1f       	adc	r17, r17
    196c:	03 5a       	subi	r16, 0xA3	; 163
    196e:	1d 4f       	sbci	r17, 0xFD	; 253
    1970:	07 2e       	mov	r0, r23
    1972:	00 0c       	add	r0, r0
    1974:	88 0b       	sbc	r24, r24
    1976:	99 0b       	sbc	r25, r25
    1978:	69 d1       	rcall	.+722    	; 0x1c4c <__floatsisf>
    197a:	f8 01       	movw	r30, r16
    197c:	60 83       	st	Z, r22
    197e:	71 83       	std	Z+1, r23	; 0x01
    1980:	82 83       	std	Z+2, r24	; 0x02
    1982:	93 83       	std	Z+3, r25	; 0x03
    1984:	21 96       	adiw	r28, 0x01	; 1
			 i4++;
    1986:	d0 93 19 02 	sts	0x0219, r29	; 0x800219 <i4+0x1>
    198a:	c0 93 18 02 	sts	0x0218, r28	; 0x800218 <i4>
    198e:	81 e0       	ldi	r24, 0x01	; 1
			 break;
		 }
		 
	 }
	 TIFR4=0x01;
    1990:	89 bb       	out	0x19, r24	; 25
    1992:	10 92 27 02 	sts	0x0227, r1	; 0x800227 <us_flag2+0x1>
	 us_flag2=0;
    1996:	10 92 26 02 	sts	0x0226, r1	; 0x800226 <us_flag2>
    199a:	80 91 18 02 	lds	r24, 0x0218	; 0x800218 <i4>
	 
	 if (i4>length-1)
    199e:	90 91 19 02 	lds	r25, 0x0219	; 0x800219 <i4+0x1>
    19a2:	18 16       	cp	r1, r24
    19a4:	19 06       	cpc	r1, r25
    19a6:	24 f0       	brlt	.+8      	; 0x19b0 <distance2_us+0x124>
    19a8:	2e c0       	rjmp	.+92     	; 0x1a06 <distance2_us+0x17a>
    19aa:	c8 9b       	sbis	0x19, 0	; 25
 int distance2_us()
 {
	 ultrasound2_trigger();
	 TIFR4=0x01;
	 
	 while ( (TIFR4 & 0x01) == 0x00 )
    19ac:	7d cf       	rjmp	.-262    	; 0x18a8 <distance2_us+0x1c>
    19ae:	3b c0       	rjmp	.+118    	; 0x1a26 <distance2_us+0x19a>
    19b0:	10 92 19 02 	sts	0x0219, r1	; 0x800219 <i4+0x1>
	 TIFR4=0x01;
	 us_flag2=0;
	 
	 if (i4>length-1)
	 {
		 i4=length-1;
    19b4:	10 92 18 02 	sts	0x0218, r1	; 0x800218 <i4>
    19b8:	10 92 17 02 	sts	0x0217, r1	; 0x800217 <j4+0x1>
		 
		 for (j4=0;j4<length-1;j4++)
    19bc:	10 92 16 02 	sts	0x0216, r1	; 0x800216 <j4>
    19c0:	20 91 1a 02 	lds	r18, 0x021A	; 0x80021a <sum4>
		 {	sum4=sum4+filter_array4[j4];
			 filter_array4[j4]=filter_array4[j4+1];
		 }
		 sum4=sum4+filter_array4[length-1];
		 filtered_distance4=(sum4/(length)) + 5;
    19c4:	30 91 1b 02 	lds	r19, 0x021B	; 0x80021b <sum4+0x1>
    19c8:	40 91 1c 02 	lds	r20, 0x021C	; 0x80021c <sum4+0x2>
    19cc:	50 91 1d 02 	lds	r21, 0x021D	; 0x80021d <sum4+0x3>
    19d0:	60 91 5d 02 	lds	r22, 0x025D	; 0x80025d <filter_array4>
    19d4:	70 91 5e 02 	lds	r23, 0x025E	; 0x80025e <filter_array4+0x1>
    19d8:	80 91 5f 02 	lds	r24, 0x025F	; 0x80025f <filter_array4+0x2>
    19dc:	90 91 60 02 	lds	r25, 0x0260	; 0x800260 <filter_array4+0x3>
    19e0:	36 d0       	rcall	.+108    	; 0x1a4e <__addsf3>
    19e2:	20 e0       	ldi	r18, 0x00	; 0
    19e4:	30 e0       	ldi	r19, 0x00	; 0
    19e6:	40 ea       	ldi	r20, 0xA0	; 160
    19e8:	50 e4       	ldi	r21, 0x40	; 64
    19ea:	31 d0       	rcall	.+98     	; 0x1a4e <__addsf3>
    19ec:	fc d0       	rcall	.+504    	; 0x1be6 <__fixsfsi>
    19ee:	70 93 15 02 	sts	0x0215, r23	; 0x800215 <filtered_distance4+0x1>
    19f2:	60 93 14 02 	sts	0x0214, r22	; 0x800214 <filtered_distance4>
    19f6:	10 92 1a 02 	sts	0x021A, r1	; 0x80021a <sum4>
		 sum4=0;
    19fa:	10 92 1b 02 	sts	0x021B, r1	; 0x80021b <sum4+0x1>
    19fe:	10 92 1c 02 	sts	0x021C, r1	; 0x80021c <sum4+0x2>
    1a02:	10 92 1d 02 	sts	0x021D, r1	; 0x80021d <sum4+0x3>
    1a06:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <filtered_distance4>
	 }
	 
//	 lcd_cursor(1,13);
//	 lcd_string("USLe2");
//	 lcd_print(2,14,filtered_distance4,2);
	 return filtered_distance4;
    1a0a:	90 91 15 02 	lds	r25, 0x0215	; 0x800215 <filtered_distance4+0x1>
    1a0e:	19 c0       	rjmp	.+50     	; 0x1a42 <distance2_us+0x1b6>
    1a10:	80 81       	ld	r24, Z
		 if ( ((PINJ & 0x40) == 0x00) && us_flag2==0 )
		 {
			 TCNT4=0;
		 }
		 
		 if ( ((PINJ & 0x40) == 0x40) && us_flag2==0 )
    1a12:	6b cf       	rjmp	.-298    	; 0x18ea <distance2_us+0x5e>
    1a14:	10 92 19 02 	sts	0x0219, r1	; 0x800219 <i4+0x1>
	 TIFR4=0x01;
	 us_flag2=0;
	 
	 if (i4>length-1)
	 {
		 i4=length-1;
    1a18:	10 92 18 02 	sts	0x0218, r1	; 0x800218 <i4>
    1a1c:	10 92 17 02 	sts	0x0217, r1	; 0x800217 <j4+0x1>
		 
		 for (j4=0;j4<length-1;j4++)
    1a20:	10 92 16 02 	sts	0x0216, r1	; 0x800216 <j4>
    1a24:	cd cf       	rjmp	.-102    	; 0x19c0 <distance2_us+0x134>
    1a26:	81 e0       	ldi	r24, 0x01	; 1
			 i4++;
			 break;
		 }
		 
	 }
	 TIFR4=0x01;
    1a28:	89 bb       	out	0x19, r24	; 25
    1a2a:	10 92 27 02 	sts	0x0227, r1	; 0x800227 <us_flag2+0x1>
	 us_flag2=0;
    1a2e:	10 92 26 02 	sts	0x0226, r1	; 0x800226 <us_flag2>
    1a32:	80 91 18 02 	lds	r24, 0x0218	; 0x800218 <i4>
	 
	 if (i4>length-1)
    1a36:	90 91 19 02 	lds	r25, 0x0219	; 0x800219 <i4+0x1>
    1a3a:	18 16       	cp	r1, r24
    1a3c:	19 06       	cpc	r1, r25
    1a3e:	1c f7       	brge	.-58     	; 0x1a06 <distance2_us+0x17a>
    1a40:	e9 cf       	rjmp	.-46     	; 0x1a14 <distance2_us+0x188>
    1a42:	df 91       	pop	r29
	 
//	 lcd_cursor(1,13);
//	 lcd_string("USLe2");
//	 lcd_print(2,14,filtered_distance4,2);
	 return filtered_distance4;
 }
    1a44:	cf 91       	pop	r28
    1a46:	1f 91       	pop	r17
    1a48:	0f 91       	pop	r16
    1a4a:	08 95       	ret

00001a4c <__subsf3>:
    1a4c:	50 58       	subi	r21, 0x80	; 128

00001a4e <__addsf3>:
    1a4e:	bb 27       	eor	r27, r27
    1a50:	aa 27       	eor	r26, r26
    1a52:	0e d0       	rcall	.+28     	; 0x1a70 <__addsf3x>
    1a54:	a8 c1       	rjmp	.+848    	; 0x1da6 <__fp_round>
    1a56:	99 d1       	rcall	.+818    	; 0x1d8a <__fp_pscA>
    1a58:	30 f0       	brcs	.+12     	; 0x1a66 <__addsf3+0x18>
    1a5a:	9e d1       	rcall	.+828    	; 0x1d98 <__fp_pscB>
    1a5c:	20 f0       	brcs	.+8      	; 0x1a66 <__addsf3+0x18>
    1a5e:	31 f4       	brne	.+12     	; 0x1a6c <__addsf3+0x1e>
    1a60:	9f 3f       	cpi	r25, 0xFF	; 255
    1a62:	11 f4       	brne	.+4      	; 0x1a68 <__addsf3+0x1a>
    1a64:	1e f4       	brtc	.+6      	; 0x1a6c <__addsf3+0x1e>
    1a66:	8e c1       	rjmp	.+796    	; 0x1d84 <__fp_nan>
    1a68:	0e f4       	brtc	.+2      	; 0x1a6c <__addsf3+0x1e>
    1a6a:	e0 95       	com	r30
    1a6c:	e7 fb       	bst	r30, 7
    1a6e:	5b c1       	rjmp	.+694    	; 0x1d26 <__fp_inf>

00001a70 <__addsf3x>:
    1a70:	e9 2f       	mov	r30, r25
    1a72:	aa d1       	rcall	.+852    	; 0x1dc8 <__fp_split3>
    1a74:	80 f3       	brcs	.-32     	; 0x1a56 <__addsf3+0x8>
    1a76:	ba 17       	cp	r27, r26
    1a78:	62 07       	cpc	r22, r18
    1a7a:	73 07       	cpc	r23, r19
    1a7c:	84 07       	cpc	r24, r20
    1a7e:	95 07       	cpc	r25, r21
    1a80:	18 f0       	brcs	.+6      	; 0x1a88 <__addsf3x+0x18>
    1a82:	71 f4       	brne	.+28     	; 0x1aa0 <__addsf3x+0x30>
    1a84:	9e f5       	brtc	.+102    	; 0x1aec <__addsf3x+0x7c>
    1a86:	d9 c1       	rjmp	.+946    	; 0x1e3a <__fp_zero>
    1a88:	0e f4       	brtc	.+2      	; 0x1a8c <__addsf3x+0x1c>
    1a8a:	e0 95       	com	r30
    1a8c:	0b 2e       	mov	r0, r27
    1a8e:	ba 2f       	mov	r27, r26
    1a90:	a0 2d       	mov	r26, r0
    1a92:	0b 01       	movw	r0, r22
    1a94:	b9 01       	movw	r22, r18
    1a96:	90 01       	movw	r18, r0
    1a98:	0c 01       	movw	r0, r24
    1a9a:	ca 01       	movw	r24, r20
    1a9c:	a0 01       	movw	r20, r0
    1a9e:	11 24       	eor	r1, r1
    1aa0:	ff 27       	eor	r31, r31
    1aa2:	59 1b       	sub	r21, r25
    1aa4:	99 f0       	breq	.+38     	; 0x1acc <__addsf3x+0x5c>
    1aa6:	59 3f       	cpi	r21, 0xF9	; 249
    1aa8:	50 f4       	brcc	.+20     	; 0x1abe <__addsf3x+0x4e>
    1aaa:	50 3e       	cpi	r21, 0xE0	; 224
    1aac:	68 f1       	brcs	.+90     	; 0x1b08 <__addsf3x+0x98>
    1aae:	1a 16       	cp	r1, r26
    1ab0:	f0 40       	sbci	r31, 0x00	; 0
    1ab2:	a2 2f       	mov	r26, r18
    1ab4:	23 2f       	mov	r18, r19
    1ab6:	34 2f       	mov	r19, r20
    1ab8:	44 27       	eor	r20, r20
    1aba:	58 5f       	subi	r21, 0xF8	; 248
    1abc:	f3 cf       	rjmp	.-26     	; 0x1aa4 <__addsf3x+0x34>
    1abe:	46 95       	lsr	r20
    1ac0:	37 95       	ror	r19
    1ac2:	27 95       	ror	r18
    1ac4:	a7 95       	ror	r26
    1ac6:	f0 40       	sbci	r31, 0x00	; 0
    1ac8:	53 95       	inc	r21
    1aca:	c9 f7       	brne	.-14     	; 0x1abe <__addsf3x+0x4e>
    1acc:	7e f4       	brtc	.+30     	; 0x1aec <__addsf3x+0x7c>
    1ace:	1f 16       	cp	r1, r31
    1ad0:	ba 0b       	sbc	r27, r26
    1ad2:	62 0b       	sbc	r22, r18
    1ad4:	73 0b       	sbc	r23, r19
    1ad6:	84 0b       	sbc	r24, r20
    1ad8:	ba f0       	brmi	.+46     	; 0x1b08 <__addsf3x+0x98>
    1ada:	91 50       	subi	r25, 0x01	; 1
    1adc:	a1 f0       	breq	.+40     	; 0x1b06 <__addsf3x+0x96>
    1ade:	ff 0f       	add	r31, r31
    1ae0:	bb 1f       	adc	r27, r27
    1ae2:	66 1f       	adc	r22, r22
    1ae4:	77 1f       	adc	r23, r23
    1ae6:	88 1f       	adc	r24, r24
    1ae8:	c2 f7       	brpl	.-16     	; 0x1ada <__addsf3x+0x6a>
    1aea:	0e c0       	rjmp	.+28     	; 0x1b08 <__addsf3x+0x98>
    1aec:	ba 0f       	add	r27, r26
    1aee:	62 1f       	adc	r22, r18
    1af0:	73 1f       	adc	r23, r19
    1af2:	84 1f       	adc	r24, r20
    1af4:	48 f4       	brcc	.+18     	; 0x1b08 <__addsf3x+0x98>
    1af6:	87 95       	ror	r24
    1af8:	77 95       	ror	r23
    1afa:	67 95       	ror	r22
    1afc:	b7 95       	ror	r27
    1afe:	f7 95       	ror	r31
    1b00:	9e 3f       	cpi	r25, 0xFE	; 254
    1b02:	08 f0       	brcs	.+2      	; 0x1b06 <__addsf3x+0x96>
    1b04:	b3 cf       	rjmp	.-154    	; 0x1a6c <__addsf3+0x1e>
    1b06:	93 95       	inc	r25
    1b08:	88 0f       	add	r24, r24
    1b0a:	08 f0       	brcs	.+2      	; 0x1b0e <__addsf3x+0x9e>
    1b0c:	99 27       	eor	r25, r25
    1b0e:	ee 0f       	add	r30, r30
    1b10:	97 95       	ror	r25
    1b12:	87 95       	ror	r24
    1b14:	08 95       	ret

00001b16 <__divsf3>:
    1b16:	0c d0       	rcall	.+24     	; 0x1b30 <__divsf3x>
    1b18:	46 c1       	rjmp	.+652    	; 0x1da6 <__fp_round>
    1b1a:	3e d1       	rcall	.+636    	; 0x1d98 <__fp_pscB>
    1b1c:	40 f0       	brcs	.+16     	; 0x1b2e <__divsf3+0x18>
    1b1e:	35 d1       	rcall	.+618    	; 0x1d8a <__fp_pscA>
    1b20:	30 f0       	brcs	.+12     	; 0x1b2e <__divsf3+0x18>
    1b22:	21 f4       	brne	.+8      	; 0x1b2c <__divsf3+0x16>
    1b24:	5f 3f       	cpi	r21, 0xFF	; 255
    1b26:	19 f0       	breq	.+6      	; 0x1b2e <__divsf3+0x18>
    1b28:	fe c0       	rjmp	.+508    	; 0x1d26 <__fp_inf>
    1b2a:	51 11       	cpse	r21, r1
    1b2c:	87 c1       	rjmp	.+782    	; 0x1e3c <__fp_szero>
    1b2e:	2a c1       	rjmp	.+596    	; 0x1d84 <__fp_nan>

00001b30 <__divsf3x>:
    1b30:	4b d1       	rcall	.+662    	; 0x1dc8 <__fp_split3>
    1b32:	98 f3       	brcs	.-26     	; 0x1b1a <__divsf3+0x4>

00001b34 <__divsf3_pse>:
    1b34:	99 23       	and	r25, r25
    1b36:	c9 f3       	breq	.-14     	; 0x1b2a <__divsf3+0x14>
    1b38:	55 23       	and	r21, r21
    1b3a:	b1 f3       	breq	.-20     	; 0x1b28 <__divsf3+0x12>
    1b3c:	95 1b       	sub	r25, r21
    1b3e:	55 0b       	sbc	r21, r21
    1b40:	bb 27       	eor	r27, r27
    1b42:	aa 27       	eor	r26, r26
    1b44:	62 17       	cp	r22, r18
    1b46:	73 07       	cpc	r23, r19
    1b48:	84 07       	cpc	r24, r20
    1b4a:	38 f0       	brcs	.+14     	; 0x1b5a <__divsf3_pse+0x26>
    1b4c:	9f 5f       	subi	r25, 0xFF	; 255
    1b4e:	5f 4f       	sbci	r21, 0xFF	; 255
    1b50:	22 0f       	add	r18, r18
    1b52:	33 1f       	adc	r19, r19
    1b54:	44 1f       	adc	r20, r20
    1b56:	aa 1f       	adc	r26, r26
    1b58:	a9 f3       	breq	.-22     	; 0x1b44 <__divsf3_pse+0x10>
    1b5a:	33 d0       	rcall	.+102    	; 0x1bc2 <__divsf3_pse+0x8e>
    1b5c:	0e 2e       	mov	r0, r30
    1b5e:	3a f0       	brmi	.+14     	; 0x1b6e <__divsf3_pse+0x3a>
    1b60:	e0 e8       	ldi	r30, 0x80	; 128
    1b62:	30 d0       	rcall	.+96     	; 0x1bc4 <__divsf3_pse+0x90>
    1b64:	91 50       	subi	r25, 0x01	; 1
    1b66:	50 40       	sbci	r21, 0x00	; 0
    1b68:	e6 95       	lsr	r30
    1b6a:	00 1c       	adc	r0, r0
    1b6c:	ca f7       	brpl	.-14     	; 0x1b60 <__divsf3_pse+0x2c>
    1b6e:	29 d0       	rcall	.+82     	; 0x1bc2 <__divsf3_pse+0x8e>
    1b70:	fe 2f       	mov	r31, r30
    1b72:	27 d0       	rcall	.+78     	; 0x1bc2 <__divsf3_pse+0x8e>
    1b74:	66 0f       	add	r22, r22
    1b76:	77 1f       	adc	r23, r23
    1b78:	88 1f       	adc	r24, r24
    1b7a:	bb 1f       	adc	r27, r27
    1b7c:	26 17       	cp	r18, r22
    1b7e:	37 07       	cpc	r19, r23
    1b80:	48 07       	cpc	r20, r24
    1b82:	ab 07       	cpc	r26, r27
    1b84:	b0 e8       	ldi	r27, 0x80	; 128
    1b86:	09 f0       	breq	.+2      	; 0x1b8a <__divsf3_pse+0x56>
    1b88:	bb 0b       	sbc	r27, r27
    1b8a:	80 2d       	mov	r24, r0
    1b8c:	bf 01       	movw	r22, r30
    1b8e:	ff 27       	eor	r31, r31
    1b90:	93 58       	subi	r25, 0x83	; 131
    1b92:	5f 4f       	sbci	r21, 0xFF	; 255
    1b94:	2a f0       	brmi	.+10     	; 0x1ba0 <__divsf3_pse+0x6c>
    1b96:	9e 3f       	cpi	r25, 0xFE	; 254
    1b98:	51 05       	cpc	r21, r1
    1b9a:	68 f0       	brcs	.+26     	; 0x1bb6 <__divsf3_pse+0x82>
    1b9c:	c4 c0       	rjmp	.+392    	; 0x1d26 <__fp_inf>
    1b9e:	4e c1       	rjmp	.+668    	; 0x1e3c <__fp_szero>
    1ba0:	5f 3f       	cpi	r21, 0xFF	; 255
    1ba2:	ec f3       	brlt	.-6      	; 0x1b9e <__divsf3_pse+0x6a>
    1ba4:	98 3e       	cpi	r25, 0xE8	; 232
    1ba6:	dc f3       	brlt	.-10     	; 0x1b9e <__divsf3_pse+0x6a>
    1ba8:	86 95       	lsr	r24
    1baa:	77 95       	ror	r23
    1bac:	67 95       	ror	r22
    1bae:	b7 95       	ror	r27
    1bb0:	f7 95       	ror	r31
    1bb2:	9f 5f       	subi	r25, 0xFF	; 255
    1bb4:	c9 f7       	brne	.-14     	; 0x1ba8 <__divsf3_pse+0x74>
    1bb6:	88 0f       	add	r24, r24
    1bb8:	91 1d       	adc	r25, r1
    1bba:	96 95       	lsr	r25
    1bbc:	87 95       	ror	r24
    1bbe:	97 f9       	bld	r25, 7
    1bc0:	08 95       	ret
    1bc2:	e1 e0       	ldi	r30, 0x01	; 1
    1bc4:	66 0f       	add	r22, r22
    1bc6:	77 1f       	adc	r23, r23
    1bc8:	88 1f       	adc	r24, r24
    1bca:	bb 1f       	adc	r27, r27
    1bcc:	62 17       	cp	r22, r18
    1bce:	73 07       	cpc	r23, r19
    1bd0:	84 07       	cpc	r24, r20
    1bd2:	ba 07       	cpc	r27, r26
    1bd4:	20 f0       	brcs	.+8      	; 0x1bde <__divsf3_pse+0xaa>
    1bd6:	62 1b       	sub	r22, r18
    1bd8:	73 0b       	sbc	r23, r19
    1bda:	84 0b       	sbc	r24, r20
    1bdc:	ba 0b       	sbc	r27, r26
    1bde:	ee 1f       	adc	r30, r30
    1be0:	88 f7       	brcc	.-30     	; 0x1bc4 <__divsf3_pse+0x90>
    1be2:	e0 95       	com	r30
    1be4:	08 95       	ret

00001be6 <__fixsfsi>:
    1be6:	04 d0       	rcall	.+8      	; 0x1bf0 <__fixunssfsi>
    1be8:	68 94       	set
    1bea:	b1 11       	cpse	r27, r1
    1bec:	27 c1       	rjmp	.+590    	; 0x1e3c <__fp_szero>
    1bee:	08 95       	ret

00001bf0 <__fixunssfsi>:
    1bf0:	f3 d0       	rcall	.+486    	; 0x1dd8 <__fp_splitA>
    1bf2:	88 f0       	brcs	.+34     	; 0x1c16 <__fixunssfsi+0x26>
    1bf4:	9f 57       	subi	r25, 0x7F	; 127
    1bf6:	90 f0       	brcs	.+36     	; 0x1c1c <__fixunssfsi+0x2c>
    1bf8:	b9 2f       	mov	r27, r25
    1bfa:	99 27       	eor	r25, r25
    1bfc:	b7 51       	subi	r27, 0x17	; 23
    1bfe:	a0 f0       	brcs	.+40     	; 0x1c28 <__fixunssfsi+0x38>
    1c00:	d1 f0       	breq	.+52     	; 0x1c36 <__fixunssfsi+0x46>
    1c02:	66 0f       	add	r22, r22
    1c04:	77 1f       	adc	r23, r23
    1c06:	88 1f       	adc	r24, r24
    1c08:	99 1f       	adc	r25, r25
    1c0a:	1a f0       	brmi	.+6      	; 0x1c12 <__fixunssfsi+0x22>
    1c0c:	ba 95       	dec	r27
    1c0e:	c9 f7       	brne	.-14     	; 0x1c02 <__fixunssfsi+0x12>
    1c10:	12 c0       	rjmp	.+36     	; 0x1c36 <__fixunssfsi+0x46>
    1c12:	b1 30       	cpi	r27, 0x01	; 1
    1c14:	81 f0       	breq	.+32     	; 0x1c36 <__fixunssfsi+0x46>
    1c16:	11 d1       	rcall	.+546    	; 0x1e3a <__fp_zero>
    1c18:	b1 e0       	ldi	r27, 0x01	; 1
    1c1a:	08 95       	ret
    1c1c:	0e c1       	rjmp	.+540    	; 0x1e3a <__fp_zero>
    1c1e:	67 2f       	mov	r22, r23
    1c20:	78 2f       	mov	r23, r24
    1c22:	88 27       	eor	r24, r24
    1c24:	b8 5f       	subi	r27, 0xF8	; 248
    1c26:	39 f0       	breq	.+14     	; 0x1c36 <__fixunssfsi+0x46>
    1c28:	b9 3f       	cpi	r27, 0xF9	; 249
    1c2a:	cc f3       	brlt	.-14     	; 0x1c1e <__fixunssfsi+0x2e>
    1c2c:	86 95       	lsr	r24
    1c2e:	77 95       	ror	r23
    1c30:	67 95       	ror	r22
    1c32:	b3 95       	inc	r27
    1c34:	d9 f7       	brne	.-10     	; 0x1c2c <__fixunssfsi+0x3c>
    1c36:	3e f4       	brtc	.+14     	; 0x1c46 <__fixunssfsi+0x56>
    1c38:	90 95       	com	r25
    1c3a:	80 95       	com	r24
    1c3c:	70 95       	com	r23
    1c3e:	61 95       	neg	r22
    1c40:	7f 4f       	sbci	r23, 0xFF	; 255
    1c42:	8f 4f       	sbci	r24, 0xFF	; 255
    1c44:	9f 4f       	sbci	r25, 0xFF	; 255
    1c46:	08 95       	ret

00001c48 <__floatunsisf>:
    1c48:	e8 94       	clt
    1c4a:	09 c0       	rjmp	.+18     	; 0x1c5e <__floatsisf+0x12>

00001c4c <__floatsisf>:
    1c4c:	97 fb       	bst	r25, 7
    1c4e:	3e f4       	brtc	.+14     	; 0x1c5e <__floatsisf+0x12>
    1c50:	90 95       	com	r25
    1c52:	80 95       	com	r24
    1c54:	70 95       	com	r23
    1c56:	61 95       	neg	r22
    1c58:	7f 4f       	sbci	r23, 0xFF	; 255
    1c5a:	8f 4f       	sbci	r24, 0xFF	; 255
    1c5c:	9f 4f       	sbci	r25, 0xFF	; 255
    1c5e:	99 23       	and	r25, r25
    1c60:	a9 f0       	breq	.+42     	; 0x1c8c <__floatsisf+0x40>
    1c62:	f9 2f       	mov	r31, r25
    1c64:	96 e9       	ldi	r25, 0x96	; 150
    1c66:	bb 27       	eor	r27, r27
    1c68:	93 95       	inc	r25
    1c6a:	f6 95       	lsr	r31
    1c6c:	87 95       	ror	r24
    1c6e:	77 95       	ror	r23
    1c70:	67 95       	ror	r22
    1c72:	b7 95       	ror	r27
    1c74:	f1 11       	cpse	r31, r1
    1c76:	f8 cf       	rjmp	.-16     	; 0x1c68 <__floatsisf+0x1c>
    1c78:	fa f4       	brpl	.+62     	; 0x1cb8 <__floatsisf+0x6c>
    1c7a:	bb 0f       	add	r27, r27
    1c7c:	11 f4       	brne	.+4      	; 0x1c82 <__floatsisf+0x36>
    1c7e:	60 ff       	sbrs	r22, 0
    1c80:	1b c0       	rjmp	.+54     	; 0x1cb8 <__floatsisf+0x6c>
    1c82:	6f 5f       	subi	r22, 0xFF	; 255
    1c84:	7f 4f       	sbci	r23, 0xFF	; 255
    1c86:	8f 4f       	sbci	r24, 0xFF	; 255
    1c88:	9f 4f       	sbci	r25, 0xFF	; 255
    1c8a:	16 c0       	rjmp	.+44     	; 0x1cb8 <__floatsisf+0x6c>
    1c8c:	88 23       	and	r24, r24
    1c8e:	11 f0       	breq	.+4      	; 0x1c94 <__floatsisf+0x48>
    1c90:	96 e9       	ldi	r25, 0x96	; 150
    1c92:	11 c0       	rjmp	.+34     	; 0x1cb6 <__floatsisf+0x6a>
    1c94:	77 23       	and	r23, r23
    1c96:	21 f0       	breq	.+8      	; 0x1ca0 <__floatsisf+0x54>
    1c98:	9e e8       	ldi	r25, 0x8E	; 142
    1c9a:	87 2f       	mov	r24, r23
    1c9c:	76 2f       	mov	r23, r22
    1c9e:	05 c0       	rjmp	.+10     	; 0x1caa <__floatsisf+0x5e>
    1ca0:	66 23       	and	r22, r22
    1ca2:	71 f0       	breq	.+28     	; 0x1cc0 <__floatsisf+0x74>
    1ca4:	96 e8       	ldi	r25, 0x86	; 134
    1ca6:	86 2f       	mov	r24, r22
    1ca8:	70 e0       	ldi	r23, 0x00	; 0
    1caa:	60 e0       	ldi	r22, 0x00	; 0
    1cac:	2a f0       	brmi	.+10     	; 0x1cb8 <__floatsisf+0x6c>
    1cae:	9a 95       	dec	r25
    1cb0:	66 0f       	add	r22, r22
    1cb2:	77 1f       	adc	r23, r23
    1cb4:	88 1f       	adc	r24, r24
    1cb6:	da f7       	brpl	.-10     	; 0x1cae <__floatsisf+0x62>
    1cb8:	88 0f       	add	r24, r24
    1cba:	96 95       	lsr	r25
    1cbc:	87 95       	ror	r24
    1cbe:	97 f9       	bld	r25, 7
    1cc0:	08 95       	ret

00001cc2 <floor>:
    1cc2:	a4 d0       	rcall	.+328    	; 0x1e0c <__fp_trunc>
    1cc4:	80 f0       	brcs	.+32     	; 0x1ce6 <floor+0x24>
    1cc6:	9f 37       	cpi	r25, 0x7F	; 127
    1cc8:	40 f4       	brcc	.+16     	; 0x1cda <floor+0x18>
    1cca:	91 11       	cpse	r25, r1
    1ccc:	0e f0       	brts	.+2      	; 0x1cd0 <floor+0xe>
    1cce:	b6 c0       	rjmp	.+364    	; 0x1e3c <__fp_szero>
    1cd0:	60 e0       	ldi	r22, 0x00	; 0
    1cd2:	70 e0       	ldi	r23, 0x00	; 0
    1cd4:	80 e8       	ldi	r24, 0x80	; 128
    1cd6:	9f eb       	ldi	r25, 0xBF	; 191
    1cd8:	08 95       	ret
    1cda:	26 f4       	brtc	.+8      	; 0x1ce4 <floor+0x22>
    1cdc:	1b 16       	cp	r1, r27
    1cde:	61 1d       	adc	r22, r1
    1ce0:	71 1d       	adc	r23, r1
    1ce2:	81 1d       	adc	r24, r1
    1ce4:	26 c0       	rjmp	.+76     	; 0x1d32 <__fp_mintl>
    1ce6:	40 c0       	rjmp	.+128    	; 0x1d68 <__fp_mpack>

00001ce8 <fmin>:
    1ce8:	99 0f       	add	r25, r25
    1cea:	bb 0b       	sbc	r27, r27
    1cec:	55 0f       	add	r21, r21
    1cee:	aa 0b       	sbc	r26, r26
    1cf0:	e0 e8       	ldi	r30, 0x80	; 128
    1cf2:	fe ef       	ldi	r31, 0xFE	; 254
    1cf4:	16 16       	cp	r1, r22
    1cf6:	17 06       	cpc	r1, r23
    1cf8:	e8 07       	cpc	r30, r24
    1cfa:	f9 07       	cpc	r31, r25
    1cfc:	70 f0       	brcs	.+28     	; 0x1d1a <fmin+0x32>
    1cfe:	12 16       	cp	r1, r18
    1d00:	13 06       	cpc	r1, r19
    1d02:	e4 07       	cpc	r30, r20
    1d04:	f5 07       	cpc	r31, r21
    1d06:	60 f0       	brcs	.+24     	; 0x1d20 <fmin+0x38>
    1d08:	ba 17       	cp	r27, r26
    1d0a:	54 f0       	brlt	.+20     	; 0x1d20 <fmin+0x38>
    1d0c:	31 f4       	brne	.+12     	; 0x1d1a <fmin+0x32>
    1d0e:	26 17       	cp	r18, r22
    1d10:	37 07       	cpc	r19, r23
    1d12:	48 07       	cpc	r20, r24
    1d14:	59 07       	cpc	r21, r25
    1d16:	a7 95       	ror	r26
    1d18:	1b f4       	brvc	.+6      	; 0x1d20 <fmin+0x38>
    1d1a:	b9 01       	movw	r22, r18
    1d1c:	ca 01       	movw	r24, r20
    1d1e:	ba 2f       	mov	r27, r26
    1d20:	b6 95       	lsr	r27
    1d22:	97 95       	ror	r25
    1d24:	08 95       	ret

00001d26 <__fp_inf>:
    1d26:	97 f9       	bld	r25, 7
    1d28:	9f 67       	ori	r25, 0x7F	; 127
    1d2a:	80 e8       	ldi	r24, 0x80	; 128
    1d2c:	70 e0       	ldi	r23, 0x00	; 0
    1d2e:	60 e0       	ldi	r22, 0x00	; 0
    1d30:	08 95       	ret

00001d32 <__fp_mintl>:
    1d32:	88 23       	and	r24, r24
    1d34:	71 f4       	brne	.+28     	; 0x1d52 <__fp_mintl+0x20>
    1d36:	77 23       	and	r23, r23
    1d38:	21 f0       	breq	.+8      	; 0x1d42 <__fp_mintl+0x10>
    1d3a:	98 50       	subi	r25, 0x08	; 8
    1d3c:	87 2b       	or	r24, r23
    1d3e:	76 2f       	mov	r23, r22
    1d40:	07 c0       	rjmp	.+14     	; 0x1d50 <__fp_mintl+0x1e>
    1d42:	66 23       	and	r22, r22
    1d44:	11 f4       	brne	.+4      	; 0x1d4a <__fp_mintl+0x18>
    1d46:	99 27       	eor	r25, r25
    1d48:	0d c0       	rjmp	.+26     	; 0x1d64 <__fp_mintl+0x32>
    1d4a:	90 51       	subi	r25, 0x10	; 16
    1d4c:	86 2b       	or	r24, r22
    1d4e:	70 e0       	ldi	r23, 0x00	; 0
    1d50:	60 e0       	ldi	r22, 0x00	; 0
    1d52:	2a f0       	brmi	.+10     	; 0x1d5e <__fp_mintl+0x2c>
    1d54:	9a 95       	dec	r25
    1d56:	66 0f       	add	r22, r22
    1d58:	77 1f       	adc	r23, r23
    1d5a:	88 1f       	adc	r24, r24
    1d5c:	da f7       	brpl	.-10     	; 0x1d54 <__fp_mintl+0x22>
    1d5e:	88 0f       	add	r24, r24
    1d60:	96 95       	lsr	r25
    1d62:	87 95       	ror	r24
    1d64:	97 f9       	bld	r25, 7
    1d66:	08 95       	ret

00001d68 <__fp_mpack>:
    1d68:	9f 3f       	cpi	r25, 0xFF	; 255
    1d6a:	31 f0       	breq	.+12     	; 0x1d78 <__fp_mpack_finite+0xc>

00001d6c <__fp_mpack_finite>:
    1d6c:	91 50       	subi	r25, 0x01	; 1
    1d6e:	20 f4       	brcc	.+8      	; 0x1d78 <__fp_mpack_finite+0xc>
    1d70:	87 95       	ror	r24
    1d72:	77 95       	ror	r23
    1d74:	67 95       	ror	r22
    1d76:	b7 95       	ror	r27
    1d78:	88 0f       	add	r24, r24
    1d7a:	91 1d       	adc	r25, r1
    1d7c:	96 95       	lsr	r25
    1d7e:	87 95       	ror	r24
    1d80:	97 f9       	bld	r25, 7
    1d82:	08 95       	ret

00001d84 <__fp_nan>:
    1d84:	9f ef       	ldi	r25, 0xFF	; 255
    1d86:	80 ec       	ldi	r24, 0xC0	; 192
    1d88:	08 95       	ret

00001d8a <__fp_pscA>:
    1d8a:	00 24       	eor	r0, r0
    1d8c:	0a 94       	dec	r0
    1d8e:	16 16       	cp	r1, r22
    1d90:	17 06       	cpc	r1, r23
    1d92:	18 06       	cpc	r1, r24
    1d94:	09 06       	cpc	r0, r25
    1d96:	08 95       	ret

00001d98 <__fp_pscB>:
    1d98:	00 24       	eor	r0, r0
    1d9a:	0a 94       	dec	r0
    1d9c:	12 16       	cp	r1, r18
    1d9e:	13 06       	cpc	r1, r19
    1da0:	14 06       	cpc	r1, r20
    1da2:	05 06       	cpc	r0, r21
    1da4:	08 95       	ret

00001da6 <__fp_round>:
    1da6:	09 2e       	mov	r0, r25
    1da8:	03 94       	inc	r0
    1daa:	00 0c       	add	r0, r0
    1dac:	11 f4       	brne	.+4      	; 0x1db2 <__fp_round+0xc>
    1dae:	88 23       	and	r24, r24
    1db0:	52 f0       	brmi	.+20     	; 0x1dc6 <__fp_round+0x20>
    1db2:	bb 0f       	add	r27, r27
    1db4:	40 f4       	brcc	.+16     	; 0x1dc6 <__fp_round+0x20>
    1db6:	bf 2b       	or	r27, r31
    1db8:	11 f4       	brne	.+4      	; 0x1dbe <__fp_round+0x18>
    1dba:	60 ff       	sbrs	r22, 0
    1dbc:	04 c0       	rjmp	.+8      	; 0x1dc6 <__fp_round+0x20>
    1dbe:	6f 5f       	subi	r22, 0xFF	; 255
    1dc0:	7f 4f       	sbci	r23, 0xFF	; 255
    1dc2:	8f 4f       	sbci	r24, 0xFF	; 255
    1dc4:	9f 4f       	sbci	r25, 0xFF	; 255
    1dc6:	08 95       	ret

00001dc8 <__fp_split3>:
    1dc8:	57 fd       	sbrc	r21, 7
    1dca:	90 58       	subi	r25, 0x80	; 128
    1dcc:	44 0f       	add	r20, r20
    1dce:	55 1f       	adc	r21, r21
    1dd0:	59 f0       	breq	.+22     	; 0x1de8 <__fp_splitA+0x10>
    1dd2:	5f 3f       	cpi	r21, 0xFF	; 255
    1dd4:	71 f0       	breq	.+28     	; 0x1df2 <__fp_splitA+0x1a>
    1dd6:	47 95       	ror	r20

00001dd8 <__fp_splitA>:
    1dd8:	88 0f       	add	r24, r24
    1dda:	97 fb       	bst	r25, 7
    1ddc:	99 1f       	adc	r25, r25
    1dde:	61 f0       	breq	.+24     	; 0x1df8 <__fp_splitA+0x20>
    1de0:	9f 3f       	cpi	r25, 0xFF	; 255
    1de2:	79 f0       	breq	.+30     	; 0x1e02 <__fp_splitA+0x2a>
    1de4:	87 95       	ror	r24
    1de6:	08 95       	ret
    1de8:	12 16       	cp	r1, r18
    1dea:	13 06       	cpc	r1, r19
    1dec:	14 06       	cpc	r1, r20
    1dee:	55 1f       	adc	r21, r21
    1df0:	f2 cf       	rjmp	.-28     	; 0x1dd6 <__fp_split3+0xe>
    1df2:	46 95       	lsr	r20
    1df4:	f1 df       	rcall	.-30     	; 0x1dd8 <__fp_splitA>
    1df6:	08 c0       	rjmp	.+16     	; 0x1e08 <__fp_splitA+0x30>
    1df8:	16 16       	cp	r1, r22
    1dfa:	17 06       	cpc	r1, r23
    1dfc:	18 06       	cpc	r1, r24
    1dfe:	99 1f       	adc	r25, r25
    1e00:	f1 cf       	rjmp	.-30     	; 0x1de4 <__fp_splitA+0xc>
    1e02:	86 95       	lsr	r24
    1e04:	71 05       	cpc	r23, r1
    1e06:	61 05       	cpc	r22, r1
    1e08:	08 94       	sec
    1e0a:	08 95       	ret

00001e0c <__fp_trunc>:
    1e0c:	e5 df       	rcall	.-54     	; 0x1dd8 <__fp_splitA>
    1e0e:	a0 f0       	brcs	.+40     	; 0x1e38 <__fp_trunc+0x2c>
    1e10:	be e7       	ldi	r27, 0x7E	; 126
    1e12:	b9 17       	cp	r27, r25
    1e14:	88 f4       	brcc	.+34     	; 0x1e38 <__fp_trunc+0x2c>
    1e16:	bb 27       	eor	r27, r27
    1e18:	9f 38       	cpi	r25, 0x8F	; 143
    1e1a:	60 f4       	brcc	.+24     	; 0x1e34 <__fp_trunc+0x28>
    1e1c:	16 16       	cp	r1, r22
    1e1e:	b1 1d       	adc	r27, r1
    1e20:	67 2f       	mov	r22, r23
    1e22:	78 2f       	mov	r23, r24
    1e24:	88 27       	eor	r24, r24
    1e26:	98 5f       	subi	r25, 0xF8	; 248
    1e28:	f7 cf       	rjmp	.-18     	; 0x1e18 <__fp_trunc+0xc>
    1e2a:	86 95       	lsr	r24
    1e2c:	77 95       	ror	r23
    1e2e:	67 95       	ror	r22
    1e30:	b1 1d       	adc	r27, r1
    1e32:	93 95       	inc	r25
    1e34:	96 39       	cpi	r25, 0x96	; 150
    1e36:	c8 f3       	brcs	.-14     	; 0x1e2a <__fp_trunc+0x1e>
    1e38:	08 95       	ret

00001e3a <__fp_zero>:
    1e3a:	e8 94       	clt

00001e3c <__fp_szero>:
    1e3c:	bb 27       	eor	r27, r27
    1e3e:	66 27       	eor	r22, r22
    1e40:	77 27       	eor	r23, r23
    1e42:	cb 01       	movw	r24, r22
    1e44:	97 f9       	bld	r25, 7
    1e46:	08 95       	ret

00001e48 <__mulsf3>:
    1e48:	0b d0       	rcall	.+22     	; 0x1e60 <__mulsf3x>
    1e4a:	ad cf       	rjmp	.-166    	; 0x1da6 <__fp_round>
    1e4c:	9e df       	rcall	.-196    	; 0x1d8a <__fp_pscA>
    1e4e:	28 f0       	brcs	.+10     	; 0x1e5a <__mulsf3+0x12>
    1e50:	a3 df       	rcall	.-186    	; 0x1d98 <__fp_pscB>
    1e52:	18 f0       	brcs	.+6      	; 0x1e5a <__mulsf3+0x12>
    1e54:	95 23       	and	r25, r21
    1e56:	09 f0       	breq	.+2      	; 0x1e5a <__mulsf3+0x12>
    1e58:	66 cf       	rjmp	.-308    	; 0x1d26 <__fp_inf>
    1e5a:	94 cf       	rjmp	.-216    	; 0x1d84 <__fp_nan>
    1e5c:	11 24       	eor	r1, r1
    1e5e:	ee cf       	rjmp	.-36     	; 0x1e3c <__fp_szero>

00001e60 <__mulsf3x>:
    1e60:	b3 df       	rcall	.-154    	; 0x1dc8 <__fp_split3>
    1e62:	a0 f3       	brcs	.-24     	; 0x1e4c <__mulsf3+0x4>

00001e64 <__mulsf3_pse>:
    1e64:	95 9f       	mul	r25, r21
    1e66:	d1 f3       	breq	.-12     	; 0x1e5c <__mulsf3+0x14>
    1e68:	95 0f       	add	r25, r21
    1e6a:	50 e0       	ldi	r21, 0x00	; 0
    1e6c:	55 1f       	adc	r21, r21
    1e6e:	62 9f       	mul	r22, r18
    1e70:	f0 01       	movw	r30, r0
    1e72:	72 9f       	mul	r23, r18
    1e74:	bb 27       	eor	r27, r27
    1e76:	f0 0d       	add	r31, r0
    1e78:	b1 1d       	adc	r27, r1
    1e7a:	63 9f       	mul	r22, r19
    1e7c:	aa 27       	eor	r26, r26
    1e7e:	f0 0d       	add	r31, r0
    1e80:	b1 1d       	adc	r27, r1
    1e82:	aa 1f       	adc	r26, r26
    1e84:	64 9f       	mul	r22, r20
    1e86:	66 27       	eor	r22, r22
    1e88:	b0 0d       	add	r27, r0
    1e8a:	a1 1d       	adc	r26, r1
    1e8c:	66 1f       	adc	r22, r22
    1e8e:	82 9f       	mul	r24, r18
    1e90:	22 27       	eor	r18, r18
    1e92:	b0 0d       	add	r27, r0
    1e94:	a1 1d       	adc	r26, r1
    1e96:	62 1f       	adc	r22, r18
    1e98:	73 9f       	mul	r23, r19
    1e9a:	b0 0d       	add	r27, r0
    1e9c:	a1 1d       	adc	r26, r1
    1e9e:	62 1f       	adc	r22, r18
    1ea0:	83 9f       	mul	r24, r19
    1ea2:	a0 0d       	add	r26, r0
    1ea4:	61 1d       	adc	r22, r1
    1ea6:	22 1f       	adc	r18, r18
    1ea8:	74 9f       	mul	r23, r20
    1eaa:	33 27       	eor	r19, r19
    1eac:	a0 0d       	add	r26, r0
    1eae:	61 1d       	adc	r22, r1
    1eb0:	23 1f       	adc	r18, r19
    1eb2:	84 9f       	mul	r24, r20
    1eb4:	60 0d       	add	r22, r0
    1eb6:	21 1d       	adc	r18, r1
    1eb8:	82 2f       	mov	r24, r18
    1eba:	76 2f       	mov	r23, r22
    1ebc:	6a 2f       	mov	r22, r26
    1ebe:	11 24       	eor	r1, r1
    1ec0:	9f 57       	subi	r25, 0x7F	; 127
    1ec2:	50 40       	sbci	r21, 0x00	; 0
    1ec4:	8a f0       	brmi	.+34     	; 0x1ee8 <__mulsf3_pse+0x84>
    1ec6:	e1 f0       	breq	.+56     	; 0x1f00 <__mulsf3_pse+0x9c>
    1ec8:	88 23       	and	r24, r24
    1eca:	4a f0       	brmi	.+18     	; 0x1ede <__mulsf3_pse+0x7a>
    1ecc:	ee 0f       	add	r30, r30
    1ece:	ff 1f       	adc	r31, r31
    1ed0:	bb 1f       	adc	r27, r27
    1ed2:	66 1f       	adc	r22, r22
    1ed4:	77 1f       	adc	r23, r23
    1ed6:	88 1f       	adc	r24, r24
    1ed8:	91 50       	subi	r25, 0x01	; 1
    1eda:	50 40       	sbci	r21, 0x00	; 0
    1edc:	a9 f7       	brne	.-22     	; 0x1ec8 <__mulsf3_pse+0x64>
    1ede:	9e 3f       	cpi	r25, 0xFE	; 254
    1ee0:	51 05       	cpc	r21, r1
    1ee2:	70 f0       	brcs	.+28     	; 0x1f00 <__mulsf3_pse+0x9c>
    1ee4:	20 cf       	rjmp	.-448    	; 0x1d26 <__fp_inf>
    1ee6:	aa cf       	rjmp	.-172    	; 0x1e3c <__fp_szero>
    1ee8:	5f 3f       	cpi	r21, 0xFF	; 255
    1eea:	ec f3       	brlt	.-6      	; 0x1ee6 <__mulsf3_pse+0x82>
    1eec:	98 3e       	cpi	r25, 0xE8	; 232
    1eee:	dc f3       	brlt	.-10     	; 0x1ee6 <__mulsf3_pse+0x82>
    1ef0:	86 95       	lsr	r24
    1ef2:	77 95       	ror	r23
    1ef4:	67 95       	ror	r22
    1ef6:	b7 95       	ror	r27
    1ef8:	f7 95       	ror	r31
    1efa:	e7 95       	ror	r30
    1efc:	9f 5f       	subi	r25, 0xFF	; 255
    1efe:	c1 f7       	brne	.-16     	; 0x1ef0 <__mulsf3_pse+0x8c>
    1f00:	fe 2b       	or	r31, r30
    1f02:	88 0f       	add	r24, r24
    1f04:	91 1d       	adc	r25, r1
    1f06:	96 95       	lsr	r25
    1f08:	87 95       	ror	r24
    1f0a:	97 f9       	bld	r25, 7
    1f0c:	08 95       	ret

00001f0e <pow>:
    1f0e:	fa 01       	movw	r30, r20
    1f10:	ee 0f       	add	r30, r30
    1f12:	ff 1f       	adc	r31, r31
    1f14:	30 96       	adiw	r30, 0x00	; 0
    1f16:	21 05       	cpc	r18, r1
    1f18:	31 05       	cpc	r19, r1
    1f1a:	99 f1       	breq	.+102    	; 0x1f82 <pow+0x74>
    1f1c:	61 15       	cp	r22, r1
    1f1e:	71 05       	cpc	r23, r1
    1f20:	61 f4       	brne	.+24     	; 0x1f3a <pow+0x2c>
    1f22:	80 38       	cpi	r24, 0x80	; 128
    1f24:	bf e3       	ldi	r27, 0x3F	; 63
    1f26:	9b 07       	cpc	r25, r27
    1f28:	49 f1       	breq	.+82     	; 0x1f7c <pow+0x6e>
    1f2a:	68 94       	set
    1f2c:	90 38       	cpi	r25, 0x80	; 128
    1f2e:	81 05       	cpc	r24, r1
    1f30:	61 f0       	breq	.+24     	; 0x1f4a <pow+0x3c>
    1f32:	80 38       	cpi	r24, 0x80	; 128
    1f34:	bf ef       	ldi	r27, 0xFF	; 255
    1f36:	9b 07       	cpc	r25, r27
    1f38:	41 f0       	breq	.+16     	; 0x1f4a <pow+0x3c>
    1f3a:	99 23       	and	r25, r25
    1f3c:	42 f5       	brpl	.+80     	; 0x1f8e <pow+0x80>
    1f3e:	ff 3f       	cpi	r31, 0xFF	; 255
    1f40:	e1 05       	cpc	r30, r1
    1f42:	31 05       	cpc	r19, r1
    1f44:	21 05       	cpc	r18, r1
    1f46:	11 f1       	breq	.+68     	; 0x1f8c <pow+0x7e>
    1f48:	e8 94       	clt
    1f4a:	08 94       	sec
    1f4c:	e7 95       	ror	r30
    1f4e:	d9 01       	movw	r26, r18
    1f50:	aa 23       	and	r26, r26
    1f52:	29 f4       	brne	.+10     	; 0x1f5e <pow+0x50>
    1f54:	ab 2f       	mov	r26, r27
    1f56:	be 2f       	mov	r27, r30
    1f58:	f8 5f       	subi	r31, 0xF8	; 248
    1f5a:	d0 f3       	brcs	.-12     	; 0x1f50 <pow+0x42>
    1f5c:	10 c0       	rjmp	.+32     	; 0x1f7e <pow+0x70>
    1f5e:	ff 5f       	subi	r31, 0xFF	; 255
    1f60:	70 f4       	brcc	.+28     	; 0x1f7e <pow+0x70>
    1f62:	a6 95       	lsr	r26
    1f64:	e0 f7       	brcc	.-8      	; 0x1f5e <pow+0x50>
    1f66:	f7 39       	cpi	r31, 0x97	; 151
    1f68:	50 f0       	brcs	.+20     	; 0x1f7e <pow+0x70>
    1f6a:	19 f0       	breq	.+6      	; 0x1f72 <pow+0x64>
    1f6c:	ff 3a       	cpi	r31, 0xAF	; 175
    1f6e:	38 f4       	brcc	.+14     	; 0x1f7e <pow+0x70>
    1f70:	9f 77       	andi	r25, 0x7F	; 127
    1f72:	9f 93       	push	r25
    1f74:	0c d0       	rcall	.+24     	; 0x1f8e <pow+0x80>
    1f76:	0f 90       	pop	r0
    1f78:	07 fc       	sbrc	r0, 7
    1f7a:	90 58       	subi	r25, 0x80	; 128
    1f7c:	08 95       	ret
    1f7e:	3e f0       	brts	.+14     	; 0x1f8e <pow+0x80>
    1f80:	01 cf       	rjmp	.-510    	; 0x1d84 <__fp_nan>
    1f82:	60 e0       	ldi	r22, 0x00	; 0
    1f84:	70 e0       	ldi	r23, 0x00	; 0
    1f86:	80 e8       	ldi	r24, 0x80	; 128
    1f88:	9f e3       	ldi	r25, 0x3F	; 63
    1f8a:	08 95       	ret
    1f8c:	4f e7       	ldi	r20, 0x7F	; 127
    1f8e:	9f 77       	andi	r25, 0x7F	; 127
    1f90:	5f 93       	push	r21
    1f92:	4f 93       	push	r20
    1f94:	3f 93       	push	r19
    1f96:	2f 93       	push	r18
    1f98:	9e d0       	rcall	.+316    	; 0x20d6 <log>
    1f9a:	2f 91       	pop	r18
    1f9c:	3f 91       	pop	r19
    1f9e:	4f 91       	pop	r20
    1fa0:	5f 91       	pop	r21
    1fa2:	52 df       	rcall	.-348    	; 0x1e48 <__mulsf3>
    1fa4:	05 c0       	rjmp	.+10     	; 0x1fb0 <exp>
    1fa6:	19 f4       	brne	.+6      	; 0x1fae <pow+0xa0>
    1fa8:	0e f0       	brts	.+2      	; 0x1fac <pow+0x9e>
    1faa:	bd ce       	rjmp	.-646    	; 0x1d26 <__fp_inf>
    1fac:	46 cf       	rjmp	.-372    	; 0x1e3a <__fp_zero>
    1fae:	ea ce       	rjmp	.-556    	; 0x1d84 <__fp_nan>

00001fb0 <exp>:
    1fb0:	13 df       	rcall	.-474    	; 0x1dd8 <__fp_splitA>
    1fb2:	c8 f3       	brcs	.-14     	; 0x1fa6 <pow+0x98>
    1fb4:	96 38       	cpi	r25, 0x86	; 134
    1fb6:	c0 f7       	brcc	.-16     	; 0x1fa8 <pow+0x9a>
    1fb8:	07 f8       	bld	r0, 7
    1fba:	0f 92       	push	r0
    1fbc:	e8 94       	clt
    1fbe:	2b e3       	ldi	r18, 0x3B	; 59
    1fc0:	3a ea       	ldi	r19, 0xAA	; 170
    1fc2:	48 eb       	ldi	r20, 0xB8	; 184
    1fc4:	5f e7       	ldi	r21, 0x7F	; 127
    1fc6:	4e df       	rcall	.-356    	; 0x1e64 <__mulsf3_pse>
    1fc8:	0f 92       	push	r0
    1fca:	0f 92       	push	r0
    1fcc:	0f 92       	push	r0
    1fce:	4d b7       	in	r20, 0x3d	; 61
    1fd0:	5e b7       	in	r21, 0x3e	; 62
    1fd2:	0f 92       	push	r0
    1fd4:	c0 d0       	rcall	.+384    	; 0x2156 <modf>
    1fd6:	e4 ee       	ldi	r30, 0xE4	; 228
    1fd8:	f0 e0       	ldi	r31, 0x00	; 0
    1fda:	16 d0       	rcall	.+44     	; 0x2008 <__fp_powser>
    1fdc:	4f 91       	pop	r20
    1fde:	5f 91       	pop	r21
    1fe0:	ef 91       	pop	r30
    1fe2:	ff 91       	pop	r31
    1fe4:	e5 95       	asr	r30
    1fe6:	ee 1f       	adc	r30, r30
    1fe8:	ff 1f       	adc	r31, r31
    1fea:	49 f0       	breq	.+18     	; 0x1ffe <exp+0x4e>
    1fec:	fe 57       	subi	r31, 0x7E	; 126
    1fee:	e0 68       	ori	r30, 0x80	; 128
    1ff0:	44 27       	eor	r20, r20
    1ff2:	ee 0f       	add	r30, r30
    1ff4:	44 1f       	adc	r20, r20
    1ff6:	fa 95       	dec	r31
    1ff8:	e1 f7       	brne	.-8      	; 0x1ff2 <exp+0x42>
    1ffa:	41 95       	neg	r20
    1ffc:	55 0b       	sbc	r21, r21
    1ffe:	32 d0       	rcall	.+100    	; 0x2064 <ldexp>
    2000:	0f 90       	pop	r0
    2002:	07 fe       	sbrs	r0, 7
    2004:	26 c0       	rjmp	.+76     	; 0x2052 <inverse>
    2006:	08 95       	ret

00002008 <__fp_powser>:
    2008:	df 93       	push	r29
    200a:	cf 93       	push	r28
    200c:	1f 93       	push	r17
    200e:	0f 93       	push	r16
    2010:	ff 92       	push	r15
    2012:	ef 92       	push	r14
    2014:	df 92       	push	r13
    2016:	7b 01       	movw	r14, r22
    2018:	8c 01       	movw	r16, r24
    201a:	68 94       	set
    201c:	05 c0       	rjmp	.+10     	; 0x2028 <__fp_powser+0x20>
    201e:	da 2e       	mov	r13, r26
    2020:	ef 01       	movw	r28, r30
    2022:	1e df       	rcall	.-452    	; 0x1e60 <__mulsf3x>
    2024:	fe 01       	movw	r30, r28
    2026:	e8 94       	clt
    2028:	a5 91       	lpm	r26, Z+
    202a:	25 91       	lpm	r18, Z+
    202c:	35 91       	lpm	r19, Z+
    202e:	45 91       	lpm	r20, Z+
    2030:	55 91       	lpm	r21, Z+
    2032:	ae f3       	brts	.-22     	; 0x201e <__fp_powser+0x16>
    2034:	ef 01       	movw	r28, r30
    2036:	1c dd       	rcall	.-1480   	; 0x1a70 <__addsf3x>
    2038:	fe 01       	movw	r30, r28
    203a:	97 01       	movw	r18, r14
    203c:	a8 01       	movw	r20, r16
    203e:	da 94       	dec	r13
    2040:	79 f7       	brne	.-34     	; 0x2020 <__fp_powser+0x18>
    2042:	df 90       	pop	r13
    2044:	ef 90       	pop	r14
    2046:	ff 90       	pop	r15
    2048:	0f 91       	pop	r16
    204a:	1f 91       	pop	r17
    204c:	cf 91       	pop	r28
    204e:	df 91       	pop	r29
    2050:	08 95       	ret

00002052 <inverse>:
    2052:	9b 01       	movw	r18, r22
    2054:	ac 01       	movw	r20, r24
    2056:	60 e0       	ldi	r22, 0x00	; 0
    2058:	70 e0       	ldi	r23, 0x00	; 0
    205a:	80 e8       	ldi	r24, 0x80	; 128
    205c:	9f e3       	ldi	r25, 0x3F	; 63
    205e:	5b cd       	rjmp	.-1354   	; 0x1b16 <__divsf3>
    2060:	62 ce       	rjmp	.-828    	; 0x1d26 <__fp_inf>
    2062:	82 ce       	rjmp	.-764    	; 0x1d68 <__fp_mpack>

00002064 <ldexp>:
    2064:	b9 de       	rcall	.-654    	; 0x1dd8 <__fp_splitA>
    2066:	e8 f3       	brcs	.-6      	; 0x2062 <inverse+0x10>
    2068:	99 23       	and	r25, r25
    206a:	d9 f3       	breq	.-10     	; 0x2062 <inverse+0x10>
    206c:	94 0f       	add	r25, r20
    206e:	51 1d       	adc	r21, r1
    2070:	bb f3       	brvs	.-18     	; 0x2060 <inverse+0xe>
    2072:	91 50       	subi	r25, 0x01	; 1
    2074:	50 40       	sbci	r21, 0x00	; 0
    2076:	94 f0       	brlt	.+36     	; 0x209c <ldexp+0x38>
    2078:	59 f0       	breq	.+22     	; 0x2090 <ldexp+0x2c>
    207a:	88 23       	and	r24, r24
    207c:	32 f0       	brmi	.+12     	; 0x208a <ldexp+0x26>
    207e:	66 0f       	add	r22, r22
    2080:	77 1f       	adc	r23, r23
    2082:	88 1f       	adc	r24, r24
    2084:	91 50       	subi	r25, 0x01	; 1
    2086:	50 40       	sbci	r21, 0x00	; 0
    2088:	c1 f7       	brne	.-16     	; 0x207a <ldexp+0x16>
    208a:	9e 3f       	cpi	r25, 0xFE	; 254
    208c:	51 05       	cpc	r21, r1
    208e:	44 f7       	brge	.-48     	; 0x2060 <inverse+0xe>
    2090:	88 0f       	add	r24, r24
    2092:	91 1d       	adc	r25, r1
    2094:	96 95       	lsr	r25
    2096:	87 95       	ror	r24
    2098:	97 f9       	bld	r25, 7
    209a:	08 95       	ret
    209c:	5f 3f       	cpi	r21, 0xFF	; 255
    209e:	ac f0       	brlt	.+42     	; 0x20ca <ldexp+0x66>
    20a0:	98 3e       	cpi	r25, 0xE8	; 232
    20a2:	9c f0       	brlt	.+38     	; 0x20ca <ldexp+0x66>
    20a4:	bb 27       	eor	r27, r27
    20a6:	86 95       	lsr	r24
    20a8:	77 95       	ror	r23
    20aa:	67 95       	ror	r22
    20ac:	b7 95       	ror	r27
    20ae:	08 f4       	brcc	.+2      	; 0x20b2 <ldexp+0x4e>
    20b0:	b1 60       	ori	r27, 0x01	; 1
    20b2:	93 95       	inc	r25
    20b4:	c1 f7       	brne	.-16     	; 0x20a6 <ldexp+0x42>
    20b6:	bb 0f       	add	r27, r27
    20b8:	58 f7       	brcc	.-42     	; 0x2090 <ldexp+0x2c>
    20ba:	11 f4       	brne	.+4      	; 0x20c0 <ldexp+0x5c>
    20bc:	60 ff       	sbrs	r22, 0
    20be:	e8 cf       	rjmp	.-48     	; 0x2090 <ldexp+0x2c>
    20c0:	6f 5f       	subi	r22, 0xFF	; 255
    20c2:	7f 4f       	sbci	r23, 0xFF	; 255
    20c4:	8f 4f       	sbci	r24, 0xFF	; 255
    20c6:	9f 4f       	sbci	r25, 0xFF	; 255
    20c8:	e3 cf       	rjmp	.-58     	; 0x2090 <ldexp+0x2c>
    20ca:	b8 ce       	rjmp	.-656    	; 0x1e3c <__fp_szero>
    20cc:	0e f0       	brts	.+2      	; 0x20d0 <ldexp+0x6c>
    20ce:	4c ce       	rjmp	.-872    	; 0x1d68 <__fp_mpack>
    20d0:	59 ce       	rjmp	.-846    	; 0x1d84 <__fp_nan>
    20d2:	68 94       	set
    20d4:	28 ce       	rjmp	.-944    	; 0x1d26 <__fp_inf>

000020d6 <log>:
    20d6:	80 de       	rcall	.-768    	; 0x1dd8 <__fp_splitA>
    20d8:	c8 f3       	brcs	.-14     	; 0x20cc <ldexp+0x68>
    20da:	99 23       	and	r25, r25
    20dc:	d1 f3       	breq	.-12     	; 0x20d2 <ldexp+0x6e>
    20de:	c6 f3       	brts	.-16     	; 0x20d0 <ldexp+0x6c>
    20e0:	df 93       	push	r29
    20e2:	cf 93       	push	r28
    20e4:	1f 93       	push	r17
    20e6:	0f 93       	push	r16
    20e8:	ff 92       	push	r15
    20ea:	c9 2f       	mov	r28, r25
    20ec:	dd 27       	eor	r29, r29
    20ee:	88 23       	and	r24, r24
    20f0:	2a f0       	brmi	.+10     	; 0x20fc <log+0x26>
    20f2:	21 97       	sbiw	r28, 0x01	; 1
    20f4:	66 0f       	add	r22, r22
    20f6:	77 1f       	adc	r23, r23
    20f8:	88 1f       	adc	r24, r24
    20fa:	da f7       	brpl	.-10     	; 0x20f2 <log+0x1c>
    20fc:	20 e0       	ldi	r18, 0x00	; 0
    20fe:	30 e0       	ldi	r19, 0x00	; 0
    2100:	40 e8       	ldi	r20, 0x80	; 128
    2102:	5f eb       	ldi	r21, 0xBF	; 191
    2104:	9f e3       	ldi	r25, 0x3F	; 63
    2106:	88 39       	cpi	r24, 0x98	; 152
    2108:	20 f0       	brcs	.+8      	; 0x2112 <log+0x3c>
    210a:	80 3e       	cpi	r24, 0xE0	; 224
    210c:	30 f0       	brcs	.+12     	; 0x211a <log+0x44>
    210e:	21 96       	adiw	r28, 0x01	; 1
    2110:	8f 77       	andi	r24, 0x7F	; 127
    2112:	9d dc       	rcall	.-1734   	; 0x1a4e <__addsf3>
    2114:	ec e0       	ldi	r30, 0x0C	; 12
    2116:	f1 e0       	ldi	r31, 0x01	; 1
    2118:	03 c0       	rjmp	.+6      	; 0x2120 <log+0x4a>
    211a:	99 dc       	rcall	.-1742   	; 0x1a4e <__addsf3>
    211c:	e9 e3       	ldi	r30, 0x39	; 57
    211e:	f1 e0       	ldi	r31, 0x01	; 1
    2120:	73 df       	rcall	.-282    	; 0x2008 <__fp_powser>
    2122:	8b 01       	movw	r16, r22
    2124:	be 01       	movw	r22, r28
    2126:	ec 01       	movw	r28, r24
    2128:	fb 2e       	mov	r15, r27
    212a:	6f 57       	subi	r22, 0x7F	; 127
    212c:	71 09       	sbc	r23, r1
    212e:	75 95       	asr	r23
    2130:	77 1f       	adc	r23, r23
    2132:	88 0b       	sbc	r24, r24
    2134:	99 0b       	sbc	r25, r25
    2136:	8a dd       	rcall	.-1260   	; 0x1c4c <__floatsisf>
    2138:	28 e1       	ldi	r18, 0x18	; 24
    213a:	32 e7       	ldi	r19, 0x72	; 114
    213c:	41 e3       	ldi	r20, 0x31	; 49
    213e:	5f e3       	ldi	r21, 0x3F	; 63
    2140:	8f de       	rcall	.-738    	; 0x1e60 <__mulsf3x>
    2142:	af 2d       	mov	r26, r15
    2144:	98 01       	movw	r18, r16
    2146:	ae 01       	movw	r20, r28
    2148:	ff 90       	pop	r15
    214a:	0f 91       	pop	r16
    214c:	1f 91       	pop	r17
    214e:	cf 91       	pop	r28
    2150:	df 91       	pop	r29
    2152:	8e dc       	rcall	.-1764   	; 0x1a70 <__addsf3x>
    2154:	28 ce       	rjmp	.-944    	; 0x1da6 <__fp_round>

00002156 <modf>:
    2156:	fa 01       	movw	r30, r20
    2158:	dc 01       	movw	r26, r24
    215a:	aa 0f       	add	r26, r26
    215c:	bb 1f       	adc	r27, r27
    215e:	9b 01       	movw	r18, r22
    2160:	ac 01       	movw	r20, r24
    2162:	bf 57       	subi	r27, 0x7F	; 127
    2164:	28 f4       	brcc	.+10     	; 0x2170 <modf+0x1a>
    2166:	22 27       	eor	r18, r18
    2168:	33 27       	eor	r19, r19
    216a:	44 27       	eor	r20, r20
    216c:	50 78       	andi	r21, 0x80	; 128
    216e:	1f c0       	rjmp	.+62     	; 0x21ae <modf+0x58>
    2170:	b7 51       	subi	r27, 0x17	; 23
    2172:	88 f4       	brcc	.+34     	; 0x2196 <modf+0x40>
    2174:	ab 2f       	mov	r26, r27
    2176:	00 24       	eor	r0, r0
    2178:	46 95       	lsr	r20
    217a:	37 95       	ror	r19
    217c:	27 95       	ror	r18
    217e:	01 1c       	adc	r0, r1
    2180:	a3 95       	inc	r26
    2182:	d2 f3       	brmi	.-12     	; 0x2178 <modf+0x22>
    2184:	00 20       	and	r0, r0
    2186:	69 f0       	breq	.+26     	; 0x21a2 <modf+0x4c>
    2188:	22 0f       	add	r18, r18
    218a:	33 1f       	adc	r19, r19
    218c:	44 1f       	adc	r20, r20
    218e:	b3 95       	inc	r27
    2190:	da f3       	brmi	.-10     	; 0x2188 <modf+0x32>
    2192:	0d d0       	rcall	.+26     	; 0x21ae <modf+0x58>
    2194:	5b cc       	rjmp	.-1866   	; 0x1a4c <__subsf3>
    2196:	61 30       	cpi	r22, 0x01	; 1
    2198:	71 05       	cpc	r23, r1
    219a:	a0 e8       	ldi	r26, 0x80	; 128
    219c:	8a 07       	cpc	r24, r26
    219e:	b9 46       	sbci	r27, 0x69	; 105
    21a0:	30 f4       	brcc	.+12     	; 0x21ae <modf+0x58>
    21a2:	9b 01       	movw	r18, r22
    21a4:	ac 01       	movw	r20, r24
    21a6:	66 27       	eor	r22, r22
    21a8:	77 27       	eor	r23, r23
    21aa:	88 27       	eor	r24, r24
    21ac:	90 78       	andi	r25, 0x80	; 128
    21ae:	30 96       	adiw	r30, 0x00	; 0
    21b0:	21 f0       	breq	.+8      	; 0x21ba <modf+0x64>
    21b2:	20 83       	st	Z, r18
    21b4:	31 83       	std	Z+1, r19	; 0x01
    21b6:	42 83       	std	Z+2, r20	; 0x02
    21b8:	53 83       	std	Z+3, r21	; 0x03
    21ba:	08 95       	ret

000021bc <__umulhisi3>:
    21bc:	a2 9f       	mul	r26, r18
    21be:	b0 01       	movw	r22, r0
    21c0:	b3 9f       	mul	r27, r19
    21c2:	c0 01       	movw	r24, r0
    21c4:	a3 9f       	mul	r26, r19
    21c6:	70 0d       	add	r23, r0
    21c8:	81 1d       	adc	r24, r1
    21ca:	11 24       	eor	r1, r1
    21cc:	91 1d       	adc	r25, r1
    21ce:	b2 9f       	mul	r27, r18
    21d0:	70 0d       	add	r23, r0
    21d2:	81 1d       	adc	r24, r1
    21d4:	11 24       	eor	r1, r1
    21d6:	91 1d       	adc	r25, r1
    21d8:	08 95       	ret

000021da <_exit>:
    21da:	f8 94       	cli

000021dc <__stop_program>:
    21dc:	ff cf       	rjmp	.-2      	; 0x21dc <__stop_program>
